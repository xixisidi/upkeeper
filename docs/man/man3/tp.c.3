.TH "tp.c" 3 "Wed Dec 7 2011" "Version 1" "upkeeper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tp.c \- 
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fB__fsid_t\fP"
.br
.ti -1c
.RI "struct \fB__sigset_t\fP"
.br
.ti -1c
.RI "struct \fBtimespec\fP"
.br
.ti -1c
.RI "struct \fBtimeval\fP"
.br
.ti -1c
.RI "struct \fBfd_set\fP"
.br
.ti -1c
.RI "union \fBpthread_attr_t\fP"
.br
.ti -1c
.RI "struct \fB__pthread_internal_list\fP"
.br
.ti -1c
.RI "union \fBpthread_mutex_t\fP"
.br
.ti -1c
.RI "struct \fBpthread_mutex_t::__pthread_mutex_s\fP"
.br
.ti -1c
.RI "union \fBpthread_mutexattr_t\fP"
.br
.ti -1c
.RI "union \fBpthread_cond_t\fP"
.br
.ti -1c
.RI "union \fBpthread_condattr_t\fP"
.br
.ti -1c
.RI "union \fBpthread_rwlock_t\fP"
.br
.ti -1c
.RI "union \fBpthread_rwlockattr_t\fP"
.br
.ti -1c
.RI "union \fBpthread_barrier_t\fP"
.br
.ti -1c
.RI "union \fBpthread_barrierattr_t\fP"
.br
.ti -1c
.RI "union \fBwait\fP"
.br
.ti -1c
.RI "union \fB__WAIT_STATUS\fP"
.br
.ti -1c
.RI "struct \fBdiv_t\fP"
.br
.ti -1c
.RI "struct \fBldiv_t\fP"
.br
.ti -1c
.RI "struct \fBlldiv_t\fP"
.br
.ti -1c
.RI "struct \fBsiginfo\fP"
.br
.ti -1c
.RI "struct \fBsigevent\fP"
.br
.ti -1c
.RI "struct \fBsigaction\fP"
.br
.ti -1c
.RI "struct \fBsigvec\fP"
.br
.ti -1c
.RI "struct \fB_fpreg\fP"
.br
.ti -1c
.RI "struct \fB_fpxreg\fP"
.br
.ti -1c
.RI "struct \fB_xmmreg\fP"
.br
.ti -1c
.RI "struct \fB_fpstate\fP"
.br
.ti -1c
.RI "struct \fBsigcontext\fP"
.br
.ti -1c
.RI "struct \fBsigstack\fP"
.br
.ti -1c
.RI "struct \fBsigaltstack\fP"
.br
.ti -1c
.RI "struct \fB_libc_fpxreg\fP"
.br
.ti -1c
.RI "struct \fB_libc_xmmreg\fP"
.br
.ti -1c
.RI "struct \fB_libc_fpstate\fP"
.br
.ti -1c
.RI "struct \fBmcontext_t\fP"
.br
.ti -1c
.RI "struct \fBucontext\fP"
.br
.ti -1c
.RI "struct \fBrlimit\fP"
.br
.ti -1c
.RI "struct \fBrlimit64\fP"
.br
.ti -1c
.RI "struct \fBrusage\fP"
.br
.ti -1c
.RI "struct \fBiovec\fP"
.br
.ti -1c
.RI "struct \fBsockaddr\fP"
.br
.ti -1c
.RI "struct \fBsockaddr_storage\fP"
.br
.ti -1c
.RI "struct \fBmsghdr\fP"
.br
.ti -1c
.RI "struct \fBcmsghdr\fP"
.br
.ti -1c
.RI "struct \fBucred\fP"
.br
.ti -1c
.RI "struct \fBlinger\fP"
.br
.ti -1c
.RI "struct \fBosockaddr\fP"
.br
.ti -1c
.RI "union \fB__SOCKADDR_ARG\fP"
.br
.ti -1c
.RI "union \fB__CONST_SOCKADDR_ARG\fP"
.br
.ti -1c
.RI "struct \fBin_addr\fP"
.br
.ti -1c
.RI "struct \fBin6_addr\fP"
.br
.ti -1c
.RI "struct \fBsockaddr_in\fP"
.br
.ti -1c
.RI "struct \fBsockaddr_in6\fP"
.br
.ti -1c
.RI "struct \fBip_mreq\fP"
.br
.ti -1c
.RI "struct \fBip_mreq_source\fP"
.br
.ti -1c
.RI "struct \fBipv6_mreq\fP"
.br
.ti -1c
.RI "struct \fBgroup_req\fP"
.br
.ti -1c
.RI "struct \fBgroup_source_req\fP"
.br
.ti -1c
.RI "struct \fBip_msfilter\fP"
.br
.ti -1c
.RI "struct \fBgroup_filter\fP"
.br
.ti -1c
.RI "struct \fBip_opts\fP"
.br
.ti -1c
.RI "struct \fBip_mreqn\fP"
.br
.ti -1c
.RI "struct \fBin_pktinfo\fP"
.br
.ti -1c
.RI "struct \fBin6_pktinfo\fP"
.br
.ti -1c
.RI "struct \fBip6_mtuinfo\fP"
.br
.ti -1c
.RI "struct \fBsockaddr_un\fP"
.br
.ti -1c
.RI "struct \fBtimezone\fP"
.br
.ti -1c
.RI "struct \fBitimerval\fP"
.br
.ti -1c
.RI "struct \fBflock\fP"
.br
.ti -1c
.RI "struct \fBflock64\fP"
.br
.ti -1c
.RI "struct \fBstat\fP"
.br
.ti -1c
.RI "struct \fBstat64\fP"
.br
.ti -1c
.RI "struct \fBdirent64\fP"
.br
.ti -1c
.RI "struct \fB__mbstate_t\fP"
.br
.ti -1c
.RI "struct \fB_G_fpos_t\fP"
.br
.ti -1c
.RI "struct \fB_G_fpos64_t\fP"
.br
.ti -1c
.RI "struct \fB__gconv_trans_data\fP"
.br
.ti -1c
.RI "struct \fB__gconv_step\fP"
.br
.ti -1c
.RI "struct \fB__gconv_step_data\fP"
.br
.ti -1c
.RI "struct \fB__gconv_info\fP"
.br
.ti -1c
.RI "union \fB_G_iconv_t\fP"
.br
.ti -1c
.RI "struct \fB_IO_marker\fP"
.br
.ti -1c
.RI "struct \fB_IO_FILE\fP"
.br
.ti -1c
.RI "struct \fB_IO_cookie_io_functions_t\fP"
.br
.ti -1c
.RI "struct \fB_upk_uuid\fP"
.br
.RI "\fIstructure for holding 16 byte UUID. \fP"
.ti -1c
.RI "struct \fB_upk_svcid\fP"
.br
.RI "\fIlinked list of service identifiers. \fP"
.ti -1c
.RI "struct \fB_upk_cust_actscr_list\fP"
.br
.RI "\fIlinked list of custom action scripts. \fP"
.ti -1c
.RI "struct \fB_upk_stringlist\fP"
.br
.ti -1c
.RI "struct \fB_upk_svcinfo\fP"
.br
.RI "\fIsee definition in *protocol_fields.h. \fP"
.ti -1c
.RI "struct \fB_upk_svcid_meta_p\fP"
.br
.ti -1c
.RI "struct \fB_upk_cust_actscr_meta_p\fP"
.br
.ti -1c
.RI "struct \fB_upk_stringlist_meta_p\fP"
.br
.ti -1c
.RI "struct \fB_upk_json_data_output_options\fP"
.br
.ti -1c
.RI "struct \fB_upk_svc_desc\fP"
.br
.RI "\fIservice configuration. \fP"
.ti -1c
.RI "struct \fBupk_svc_desc_meta_p\fP"
.br
.ti -1c
.RI "struct \fB_upk_controller_config\fP"
.br
.RI "\fIcontroller configuration. \fP"
.ti -1c
.RI "struct \fBupk_packet_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_preamble_t\fP"
.br
.ti -1c
.RI "struct \fBupk_repl_preamble_t\fP"
.br
.ti -1c
.RI "struct \fBupk_generic_msg_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_seq_start_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_seq_end_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_action_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_signal_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_list_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_status_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_subscribe_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_unsubscribe_t\fP"
.br
.ti -1c
.RI "struct \fBupk_req_disconnect_t\fP"
.br
.ti -1c
.RI "struct \fBupk_repl_seq_start_t\fP"
.br
.ti -1c
.RI "struct \fBupk_repl_seq_end_t\fP"
.br
.ti -1c
.RI "struct \fBupk_repl_result_t\fP"
.br
.ti -1c
.RI "struct \fBupk_repl_listing_t\fP"
.br
.ti -1c
.RI "struct \fBupk_repl_svcinfo_t\fP"
.br
.ti -1c
.RI "struct \fBupk_repl_ack_t\fP"
.br
.ti -1c
.RI "struct \fBupk_repl_error_t\fP"
.br
.ti -1c
.RI "struct \fBupk_pub_publication_t\fP"
.br
.ti -1c
.RI "struct \fBupk_pub_cancelation_t\fP"
.br
.ti -1c
.RI "union \fB_upk_payload_types\fP"
.br
.ti -1c
.RI "struct \fB_upk_payload\fP"
.br
.ti -1c
.RI "struct \fBupk_conn_handle_meta_p\fP"
.br
.ti -1c
.RI "struct \fB_upk_netmsg_queue\fP"
.br
.RI "\fIthis is a tailq for network message queuing \fP"
.ti -1c
.RI "struct \fBupk_netmsg_queue_meta_p\fP"
.br
.ti -1c
.RI "struct \fB_upk_net_cb_stk\fP"
.br
.RI "\fIa callback-stack for use in nesting/branching expectations in a conversation \fP"
.ti -1c
.RI "struct \fBupk_net_cb_stk_meta_p\fP"
.br
.ti -1c
.RI "struct \fB_upk_net_state\fP"
.br
.ti -1c
.RI "struct \fB_upklist_userdata_state_partition\fP"
.br
.RI "\fIa struct to use as 'userdata' to be passed around, which partitions the 'userdata' segment into global state and then any other userdata you might care about. \fP"
.ti -1c
.RI "struct \fB_upk_conn_handle\fP"
.br
.ti -1c
.RI "struct \fBv0_req_seq_start_t\fP"
.br
.ti -1c
.RI "struct \fBv0_req_seq_end_t\fP"
.br
.ti -1c
.RI "struct \fBv0_req_action_t\fP"
.br
.ti -1c
.RI "struct \fBv0_req_signal_t\fP"
.br
.ti -1c
.RI "struct \fBv0_req_list_t\fP"
.br
.ti -1c
.RI "struct \fBv0_req_status_t\fP"
.br
.ti -1c
.RI "struct \fBv0_req_subscribe_t\fP"
.br
.ti -1c
.RI "struct \fBv0_req_unsubscribe_t\fP"
.br
.ti -1c
.RI "struct \fBv0_req_disconnect_t\fP"
.br
.ti -1c
.RI "struct \fBv0_repl_seq_start_t\fP"
.br
.ti -1c
.RI "struct \fBv0_repl_seq_end_t\fP"
.br
.ti -1c
.RI "struct \fBv0_repl_result_t\fP"
.br
.ti -1c
.RI "struct \fBv0_repl_listing_t\fP"
.br
.ti -1c
.RI "struct \fBv0_svcinfo_t\fP"
.br
.ti -1c
.RI "struct \fBv0_repl_svcinfo_t\fP"
.br
.ti -1c
.RI "struct \fBv0_repl_ack_t\fP"
.br
.ti -1c
.RI "struct \fBv0_repl_error_t\fP"
.br
.ti -1c
.RI "struct \fBv0_pub_publication_t\fP"
.br
.ti -1c
.RI "struct \fBv0_pub_cancelation_t\fP"
.br
.ti -1c
.RI "struct \fBtm\fP"
.br
.ti -1c
.RI "struct \fBitimerspec\fP"
.br
.ti -1c
.RI "struct \fB_buddy_info\fP"
.br
.RI "\fIinformation buddy returns. \fP"
.ti -1c
.RI "struct \fB_ctrl_sigqueue\fP"
.br
.ti -1c
.RI "struct \fBctrl_sigqueue_meta_p\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef long unsigned int \fBsize_t\fP"
.br
.ti -1c
.RI "typedef unsigned char \fB__u_char\fP"
.br
.ti -1c
.RI "typedef unsigned short int \fB__u_short\fP"
.br
.ti -1c
.RI "typedef unsigned int \fB__u_int\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__u_long\fP"
.br
.ti -1c
.RI "typedef signed char \fB__int8_t\fP"
.br
.ti -1c
.RI "typedef unsigned char \fB__uint8_t\fP"
.br
.ti -1c
.RI "typedef signed short int \fB__int16_t\fP"
.br
.ti -1c
.RI "typedef unsigned short int \fB__uint16_t\fP"
.br
.ti -1c
.RI "typedef signed int \fB__int32_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fB__uint32_t\fP"
.br
.ti -1c
.RI "typedef signed long int \fB__int64_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__uint64_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__quad_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__u_quad_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__dev_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fB__uid_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fB__gid_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__ino_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__ino64_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fB__mode_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__nlink_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__off_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__off64_t\fP"
.br
.ti -1c
.RI "typedef int \fB__pid_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__clock_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__rlim_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__rlim64_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fB__id_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__time_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fB__useconds_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__suseconds_t\fP"
.br
.ti -1c
.RI "typedef int \fB__daddr_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__swblk_t\fP"
.br
.ti -1c
.RI "typedef int \fB__key_t\fP"
.br
.ti -1c
.RI "typedef int \fB__clockid_t\fP"
.br
.ti -1c
.RI "typedef void * \fB__timer_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__blksize_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__blkcnt_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__blkcnt64_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__fsblkcnt_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__fsblkcnt64_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__fsfilcnt_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fB__fsfilcnt64_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__ssize_t\fP"
.br
.ti -1c
.RI "typedef \fB__off64_t\fP \fB__loff_t\fP"
.br
.ti -1c
.RI "typedef \fB__quad_t\fP * \fB__qaddr_t\fP"
.br
.ti -1c
.RI "typedef char * \fB__caddr_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__intptr_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fB__socklen_t\fP"
.br
.ti -1c
.RI "typedef \fB__u_char\fP \fBu_char\fP"
.br
.ti -1c
.RI "typedef \fB__u_short\fP \fBu_short\fP"
.br
.ti -1c
.RI "typedef \fB__u_int\fP \fBu_int\fP"
.br
.ti -1c
.RI "typedef \fB__u_long\fP \fBu_long\fP"
.br
.ti -1c
.RI "typedef \fB__quad_t\fP \fBquad_t\fP"
.br
.ti -1c
.RI "typedef \fB__u_quad_t\fP \fBu_quad_t\fP"
.br
.ti -1c
.RI "typedef \fB__fsid_t\fP \fBfsid_t\fP"
.br
.ti -1c
.RI "typedef \fB__loff_t\fP \fBloff_t\fP"
.br
.ti -1c
.RI "typedef \fB__ino_t\fP \fBino_t\fP"
.br
.ti -1c
.RI "typedef \fB__ino64_t\fP \fBino64_t\fP"
.br
.ti -1c
.RI "typedef \fB__dev_t\fP \fBdev_t\fP"
.br
.ti -1c
.RI "typedef \fB__gid_t\fP \fBgid_t\fP"
.br
.ti -1c
.RI "typedef \fB__mode_t\fP \fBmode_t\fP"
.br
.ti -1c
.RI "typedef \fB__nlink_t\fP \fBnlink_t\fP"
.br
.ti -1c
.RI "typedef \fB__uid_t\fP \fBuid_t\fP"
.br
.ti -1c
.RI "typedef \fB__off_t\fP \fBoff_t\fP"
.br
.ti -1c
.RI "typedef \fB__off64_t\fP \fBoff64_t\fP"
.br
.ti -1c
.RI "typedef \fB__pid_t\fP \fBpid_t\fP"
.br
.ti -1c
.RI "typedef \fB__id_t\fP \fBid_t\fP"
.br
.ti -1c
.RI "typedef \fB__ssize_t\fP \fBssize_t\fP"
.br
.ti -1c
.RI "typedef \fB__daddr_t\fP \fBdaddr_t\fP"
.br
.ti -1c
.RI "typedef \fB__caddr_t\fP \fBcaddr_t\fP"
.br
.ti -1c
.RI "typedef \fB__key_t\fP \fBkey_t\fP"
.br
.ti -1c
.RI "typedef \fB__clock_t\fP \fBclock_t\fP"
.br
.ti -1c
.RI "typedef \fB__time_t\fP \fBtime_t\fP"
.br
.ti -1c
.RI "typedef \fB__clockid_t\fP \fBclockid_t\fP"
.br
.ti -1c
.RI "typedef \fB__timer_t\fP \fBtimer_t\fP"
.br
.ti -1c
.RI "typedef \fB__useconds_t\fP \fBuseconds_t\fP"
.br
.ti -1c
.RI "typedef \fB__suseconds_t\fP \fBsuseconds_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBulong\fP"
.br
.ti -1c
.RI "typedef unsigned short int \fBushort\fP"
.br
.ti -1c
.RI "typedef unsigned int \fBuint\fP"
.br
.ti -1c
.RI "typedef int int8_t \fB__attribute__\fP ((__mode__(__QI__)))"
.br
.ti -1c
.RI "typedef int \fB__sig_atomic_t\fP"
.br
.ti -1c
.RI "typedef \fB__sigset_t\fP \fBsigset_t\fP"
.br
.ti -1c
.RI "typedef long int \fB__fd_mask\fP"
.br
.ti -1c
.RI "typedef \fB__fd_mask\fP \fBfd_mask\fP"
.br
.ti -1c
.RI "typedef \fB__blksize_t\fP \fBblksize_t\fP"
.br
.ti -1c
.RI "typedef \fB__blkcnt_t\fP \fBblkcnt_t\fP"
.br
.ti -1c
.RI "typedef \fB__fsblkcnt_t\fP \fBfsblkcnt_t\fP"
.br
.ti -1c
.RI "typedef \fB__fsfilcnt_t\fP \fBfsfilcnt_t\fP"
.br
.ti -1c
.RI "typedef \fB__blkcnt64_t\fP \fBblkcnt64_t\fP"
.br
.ti -1c
.RI "typedef \fB__fsblkcnt64_t\fP \fBfsblkcnt64_t\fP"
.br
.ti -1c
.RI "typedef \fB__fsfilcnt64_t\fP \fBfsfilcnt64_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBpthread_t\fP"
.br
.ti -1c
.RI "typedef struct \fB__pthread_internal_list\fP \fB__pthread_list_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fBpthread_key_t\fP"
.br
.ti -1c
.RI "typedef int \fBpthread_once_t\fP"
.br
.ti -1c
.RI "typedef volatile int \fBpthread_spinlock_t\fP"
.br
.ti -1c
.RI "typedef unsigned char \fBuint8_t\fP"
.br
.ti -1c
.RI "typedef unsigned short int \fBuint16_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fBuint32_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBuint64_t\fP"
.br
.ti -1c
.RI "typedef signed char \fBint_least8_t\fP"
.br
.ti -1c
.RI "typedef short int \fBint_least16_t\fP"
.br
.ti -1c
.RI "typedef int \fBint_least32_t\fP"
.br
.ti -1c
.RI "typedef long int \fBint_least64_t\fP"
.br
.ti -1c
.RI "typedef unsigned char \fBuint_least8_t\fP"
.br
.ti -1c
.RI "typedef unsigned short int \fBuint_least16_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fBuint_least32_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBuint_least64_t\fP"
.br
.ti -1c
.RI "typedef signed char \fBint_fast8_t\fP"
.br
.ti -1c
.RI "typedef long int \fBint_fast16_t\fP"
.br
.ti -1c
.RI "typedef long int \fBint_fast32_t\fP"
.br
.ti -1c
.RI "typedef long int \fBint_fast64_t\fP"
.br
.ti -1c
.RI "typedef unsigned char \fBuint_fast8_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBuint_fast16_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBuint_fast32_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBuint_fast64_t\fP"
.br
.ti -1c
.RI "typedef long int \fBintptr_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBuintptr_t\fP"
.br
.ti -1c
.RI "typedef long int \fBintmax_t\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBuintmax_t\fP"
.br
.ti -1c
.RI "typedef int \fBwchar_t\fP"
.br
.ti -1c
.RI "typedef struct \fBsiginfo\fP \fBsiginfo_t\fP"
.br
.ti -1c
.RI "typedef struct \fBsigevent\fP \fBsigevent_t\fP"
.br
.ti -1c
.RI "typedef struct \fBsigaltstack\fP \fBstack_t\fP"
.br
.ti -1c
.RI "typedef long int \fBgreg_t\fP"
.br
.ti -1c
.RI "typedef \fBgreg_t\fP \fBgregset_t\fP [23]"
.br
.ti -1c
.RI "typedef struct \fB_libc_fpstate\fP * \fBfpregset_t\fP"
.br
.ti -1c
.RI "typedef struct \fBucontext\fP \fBucontext_t\fP"
.br
.ti -1c
.RI "typedef \fB__rlim_t\fP \fBrlim_t\fP"
.br
.ti -1c
.RI "typedef \fB__rlim64_t\fP \fBrlim64_t\fP"
.br
.ti -1c
.RI "typedef enum __rlimit_resource \fB__rlimit_resource_t\fP"
.br
.ti -1c
.RI "typedef enum \fB__rusage_who\fP \fB__rusage_who_t\fP"
.br
.ti -1c
.RI "typedef enum \fB__priority_which\fP \fB__priority_which_t\fP"
.br
.ti -1c
.RI "typedef unsigned short int \fBsa_family_t\fP"
.br
.ti -1c
.RI "typedef \fBuint16_t\fP \fBin_port_t\fP"
.br
.ti -1c
.RI "typedef \fBuint32_t\fP \fBin_addr_t\fP"
.br
.ti -1c
.RI "typedef struct \fBtimezone\fP *__restrict \fB__timezone_ptr_t\fP"
.br
.ti -1c
.RI "typedef enum \fB__itimer_which\fP \fB__itimer_which_t\fP"
.br
.ti -1c
.RI "typedef struct __dirstream \fBDIR\fP"
.br
.ti -1c
.RI "typedef struct \fB_IO_FILE\fP \fBFILE\fP"
.br
.ti -1c
.RI "typedef struct \fB_IO_FILE\fP \fB__FILE\fP"
.br
.ti -1c
.RI "typedef unsigned int \fBwint_t\fP"
.br
.ti -1c
.RI "typedef int(* \fB__gconv_fct\fP )(struct \fB__gconv_step\fP *, struct \fB__gconv_step_data\fP *, __const unsigned char **, __const unsigned char *, unsigned char **, \fBsize_t\fP *, int, int)"
.br
.ti -1c
.RI "typedef \fBwint_t\fP(* \fB__gconv_btowc_fct\fP )(struct \fB__gconv_step\fP *, unsigned char)"
.br
.ti -1c
.RI "typedef int(* \fB__gconv_init_fct\fP )(struct \fB__gconv_step\fP *)"
.br
.ti -1c
.RI "typedef void(* \fB__gconv_end_fct\fP )(struct \fB__gconv_step\fP *)"
.br
.ti -1c
.RI "typedef int(* \fB__gconv_trans_fct\fP )(struct \fB__gconv_step\fP *, struct \fB__gconv_step_data\fP *, void *, __const unsigned char *, __const unsigned char **, __const unsigned char *, unsigned char **, \fBsize_t\fP *)"
.br
.ti -1c
.RI "typedef int(* \fB__gconv_trans_context_fct\fP )(void *, __const unsigned char *, __const unsigned char *, unsigned char *, unsigned char *)"
.br
.ti -1c
.RI "typedef int(* \fB__gconv_trans_query_fct\fP )(__const char *, __const char ***, \fBsize_t\fP *)"
.br
.ti -1c
.RI "typedef int(* \fB__gconv_trans_init_fct\fP )(void **, const char *)"
.br
.ti -1c
.RI "typedef void(* \fB__gconv_trans_end_fct\fP )(void *)"
.br
.ti -1c
.RI "typedef struct \fB__gconv_info\fP * \fB__gconv_t\fP"
.br
.ti -1c
.RI "typedef __builtin_va_list \fB__gnuc_va_list\fP"
.br
.ti -1c
.RI "typedef void \fB_IO_lock_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_IO_FILE\fP \fB_IO_FILE\fP"
.br
.ti -1c
.RI "typedef \fB__ssize_t\fP \fB__io_read_fn\fP (void *__cookie, char *__buf, \fBsize_t\fP __nbytes)"
.br
.ti -1c
.RI "typedef \fB__ssize_t\fP \fB__io_write_fn\fP (void *__cookie, __const char *__buf, \fBsize_t\fP __n)"
.br
.ti -1c
.RI "typedef int \fB__io_seek_fn\fP (void *__cookie, \fB__off64_t\fP *__pos, int __w)"
.br
.ti -1c
.RI "typedef int \fB__io_close_fn\fP (void *__cookie)"
.br
.ti -1c
.RI "typedef \fB__io_read_fn\fP \fBcookie_read_function_t\fP"
.br
.ti -1c
.RI "typedef \fB__io_write_fn\fP \fBcookie_write_function_t\fP"
.br
.ti -1c
.RI "typedef \fB__io_seek_fn\fP \fBcookie_seek_function_t\fP"
.br
.ti -1c
.RI "typedef \fB__io_close_fn\fP \fBcookie_close_function_t\fP"
.br
.ti -1c
.RI "typedef \fB_IO_cookie_io_functions_t\fP \fBcookie_io_functions_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_uuid\fP \fBupk_uuid_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_svcid\fP \fBupk_svcid_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_cust_actscr_list\fP \fBupk_cust_actscr_list_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_stringlist\fP \fBupk_stringlist_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_svcinfo\fP \fBupk_svcinfo_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_svcid_meta_p\fP \fBupk_svcid_meta_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_cust_actscr_meta_p\fP \fBupk_cust_actscr_meta_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_stringlist_meta_p\fP \fBupk_stringlist_meta_t\fP"
.br
.ti -1c
.RI "typedef void(* \fBerr_rpt_callback_t\fP )(\fBupk_errno_t\fP)"
.br
.ti -1c
.RI "typedef void(* \fBerr_rpt_msg_callback_t\fP )(\fBupk_errno_t\fP, const char *)"
.br
.ti -1c
.RI "typedef void(* \fBdiag_output_callback_t\fP )(\fBupk_diaglvl_t\fP diaglvl, const char *label, const char *loc, const char *fmt, va_list ap)"
.br
.ti -1c
.RI "typedef struct \fB_upk_json_data_output_options\fP \fBupk_json_data_output_opts_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_svc_desc\fP \fBupk_svc_desc_t\fP"
.br
.ti -1c
.RI "typedef struct \fBupk_svc_desc_meta_p\fP \fBupk_svc_desc_meta_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_controller_config\fP \fBupk_controller_config_t\fP"
.br
.ti -1c
.RI "typedef unsigned char \fBupk_pkt_buf_t\fP"
.br
.ti -1c
.RI "typedef enum \fB_upk_msgtype\fP \fBupk_msgtype_t\fP"
.br
.ti -1c
.RI "typedef union \fB_upk_payload_types\fP \fBupk_payload_types_u\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_payload\fP \fBupk_payload_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_conn_handle\fP \fBupk_conn_handle_t\fP"
.br
.ti -1c
.RI "typedef struct \fBupk_conn_handle_meta_p\fP \fBupk_conn_handle_meta_t\fP"
.br
.ti -1c
.RI "typedef void(* \fBupk_net_callback_t\fP )(\fBupk_conn_handle_meta_t\fP *handles, \fBupk_payload_t\fP *msg)"
.br
.ti -1c
.RI "typedef struct \fB_upk_netmsg_queue\fP \fBupk_netmsg_queue_t\fP"
.br
.ti -1c
.RI "typedef struct \fBupk_netmsg_queue_meta_p\fP \fBupk_netmsg_queue_meta_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_net_cb_stk\fP \fBupk_net_cb_stk_t\fP"
.br
.ti -1c
.RI "typedef struct \fBupk_net_cb_stk_meta_p\fP \fBupk_net_cb_stk_meta_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upk_net_state\fP \fBupk_net_state_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_upklist_userdata_state_partition\fP \fBupklist_userdata_state_partition_t\fP"
.br
.ti -1c
.RI "typedef \fBupk_conn_handle_t\fP \fBupk_protocol_handle_t\fP"
.br
.ti -1c
.RI "typedef enum \fB_buddy_cmnd\fP \fBbuddy_cmnd_t\fP"
.br
.ti -1c
.RI "typedef struct \fB_buddy_info\fP \fBbuddy_info_t\fP"
.br
.ti -1c
.RI "typedef struct \fBsqlite3\fP \fBsqlite3\fP"
.br
.ti -1c
.RI "typedef long long int \fBsqlite_int64\fP"
.br
.ti -1c
.RI "typedef unsigned long long int \fBsqlite_uint64\fP"
.br
.ti -1c
.RI "typedef int(* \fBsqlite3_callback\fP )(void *, int, char **, char **)"
.br
.ti -1c
.RI "typedef struct \fBsqlite3_stmt\fP \fBsqlite3_stmt\fP"
.br
.ti -1c
.RI "typedef struct \fBsqlite3_context\fP \fBsqlite3_context\fP"
.br
.ti -1c
.RI "typedef struct Mem \fBsqlite3_value\fP"
.br
.ti -1c
.RI "typedef struct \fB_ctrl_sigqueue\fP \fBctrl_sigqueue_t\fP"
.br
.ti -1c
.RI "typedef struct \fBctrl_sigqueue_meta_p\fP \fBctrl_sigqueue_meta_t\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fB_SC_ARG_MAX\fP, \fB_SC_CHILD_MAX\fP, \fB_SC_CLK_TCK\fP, \fB_SC_NGROUPS_MAX\fP, \fB_SC_OPEN_MAX\fP, \fB_SC_STREAM_MAX\fP, \fB_SC_TZNAME_MAX\fP, \fB_SC_JOB_CONTROL\fP, \fB_SC_SAVED_IDS\fP, \fB_SC_REALTIME_SIGNALS\fP, \fB_SC_PRIORITY_SCHEDULING\fP, \fB_SC_TIMERS\fP, \fB_SC_ASYNCHRONOUS_IO\fP, \fB_SC_PRIORITIZED_IO\fP, \fB_SC_SYNCHRONIZED_IO\fP, \fB_SC_FSYNC\fP, \fB_SC_MAPPED_FILES\fP, \fB_SC_MEMLOCK\fP, \fB_SC_MEMLOCK_RANGE\fP, \fB_SC_MEMORY_PROTECTION\fP, \fB_SC_MESSAGE_PASSING\fP, \fB_SC_SEMAPHORES\fP, \fB_SC_SHARED_MEMORY_OBJECTS\fP, \fB_SC_AIO_LISTIO_MAX\fP, \fB_SC_AIO_MAX\fP, \fB_SC_AIO_PRIO_DELTA_MAX\fP, \fB_SC_DELAYTIMER_MAX\fP, \fB_SC_MQ_OPEN_MAX\fP, \fB_SC_MQ_PRIO_MAX\fP, \fB_SC_VERSION\fP, \fB_SC_PAGESIZE\fP, \fB_SC_RTSIG_MAX\fP, \fB_SC_SEM_NSEMS_MAX\fP, \fB_SC_SEM_VALUE_MAX\fP, \fB_SC_SIGQUEUE_MAX\fP, \fB_SC_TIMER_MAX\fP, \fB_SC_BC_BASE_MAX\fP, \fB_SC_BC_DIM_MAX\fP, \fB_SC_BC_SCALE_MAX\fP, \fB_SC_BC_STRING_MAX\fP, \fB_SC_COLL_WEIGHTS_MAX\fP, \fB_SC_EQUIV_CLASS_MAX\fP, \fB_SC_EXPR_NEST_MAX\fP, \fB_SC_LINE_MAX\fP, \fB_SC_RE_DUP_MAX\fP, \fB_SC_CHARCLASS_NAME_MAX\fP, \fB_SC_2_VERSION\fP, \fB_SC_2_C_BIND\fP, \fB_SC_2_C_DEV\fP, \fB_SC_2_FORT_DEV\fP, \fB_SC_2_FORT_RUN\fP, \fB_SC_2_SW_DEV\fP, \fB_SC_2_LOCALEDEF\fP, \fB_SC_PII\fP, \fB_SC_PII_XTI\fP, \fB_SC_PII_SOCKET\fP, \fB_SC_PII_INTERNET\fP, \fB_SC_PII_OSI\fP, \fB_SC_POLL\fP, \fB_SC_SELECT\fP, \fB_SC_UIO_MAXIOV\fP, \fB_SC_IOV_MAX\fP =  _SC_UIO_MAXIOV, \fB_SC_PII_INTERNET_STREAM\fP, \fB_SC_PII_INTERNET_DGRAM\fP, \fB_SC_PII_OSI_COTS\fP, \fB_SC_PII_OSI_CLTS\fP, \fB_SC_PII_OSI_M\fP, \fB_SC_T_IOV_MAX\fP, \fB_SC_THREADS\fP, \fB_SC_THREAD_SAFE_FUNCTIONS\fP, \fB_SC_GETGR_R_SIZE_MAX\fP, \fB_SC_GETPW_R_SIZE_MAX\fP, \fB_SC_LOGIN_NAME_MAX\fP, \fB_SC_TTY_NAME_MAX\fP, \fB_SC_THREAD_DESTRUCTOR_ITERATIONS\fP, \fB_SC_THREAD_KEYS_MAX\fP, \fB_SC_THREAD_STACK_MIN\fP, \fB_SC_THREAD_THREADS_MAX\fP, \fB_SC_THREAD_ATTR_STACKADDR\fP, \fB_SC_THREAD_ATTR_STACKSIZE\fP, \fB_SC_THREAD_PRIORITY_SCHEDULING\fP, \fB_SC_THREAD_PRIO_INHERIT\fP, \fB_SC_THREAD_PRIO_PROTECT\fP, \fB_SC_THREAD_PROCESS_SHARED\fP, \fB_SC_NPROCESSORS_CONF\fP, \fB_SC_NPROCESSORS_ONLN\fP, \fB_SC_PHYS_PAGES\fP, \fB_SC_AVPHYS_PAGES\fP, \fB_SC_ATEXIT_MAX\fP, \fB_SC_PASS_MAX\fP, \fB_SC_XOPEN_VERSION\fP, \fB_SC_XOPEN_XCU_VERSION\fP, \fB_SC_XOPEN_UNIX\fP, \fB_SC_XOPEN_CRYPT\fP, \fB_SC_XOPEN_ENH_I18N\fP, \fB_SC_XOPEN_SHM\fP, \fB_SC_2_CHAR_TERM\fP, \fB_SC_2_C_VERSION\fP, \fB_SC_2_UPE\fP, \fB_SC_XOPEN_XPG2\fP, \fB_SC_XOPEN_XPG3\fP, \fB_SC_XOPEN_XPG4\fP, \fB_SC_CHAR_BIT\fP, \fB_SC_CHAR_MAX\fP, \fB_SC_CHAR_MIN\fP, \fB_SC_INT_MAX\fP, \fB_SC_INT_MIN\fP, \fB_SC_LONG_BIT\fP, \fB_SC_WORD_BIT\fP, \fB_SC_MB_LEN_MAX\fP, \fB_SC_NZERO\fP, \fB_SC_SSIZE_MAX\fP, \fB_SC_SCHAR_MAX\fP, \fB_SC_SCHAR_MIN\fP, \fB_SC_SHRT_MAX\fP, \fB_SC_SHRT_MIN\fP, \fB_SC_UCHAR_MAX\fP, \fB_SC_UINT_MAX\fP, \fB_SC_ULONG_MAX\fP, \fB_SC_USHRT_MAX\fP, \fB_SC_NL_ARGMAX\fP, \fB_SC_NL_LANGMAX\fP, \fB_SC_NL_MSGMAX\fP, \fB_SC_NL_NMAX\fP, \fB_SC_NL_SETMAX\fP, \fB_SC_NL_TEXTMAX\fP, \fB_SC_XBS5_ILP32_OFF32\fP, \fB_SC_XBS5_ILP32_OFFBIG\fP, \fB_SC_XBS5_LP64_OFF64\fP, \fB_SC_XBS5_LPBIG_OFFBIG\fP, \fB_SC_XOPEN_LEGACY\fP, \fB_SC_XOPEN_REALTIME\fP, \fB_SC_XOPEN_REALTIME_THREADS\fP, \fB_SC_ADVISORY_INFO\fP, \fB_SC_BARRIERS\fP, \fB_SC_BASE\fP, \fB_SC_C_LANG_SUPPORT\fP, \fB_SC_C_LANG_SUPPORT_R\fP, \fB_SC_CLOCK_SELECTION\fP, \fB_SC_CPUTIME\fP, \fB_SC_THREAD_CPUTIME\fP, \fB_SC_DEVICE_IO\fP, \fB_SC_DEVICE_SPECIFIC\fP, \fB_SC_DEVICE_SPECIFIC_R\fP, \fB_SC_FD_MGMT\fP, \fB_SC_FIFO\fP, \fB_SC_PIPE\fP, \fB_SC_FILE_ATTRIBUTES\fP, \fB_SC_FILE_LOCKING\fP, \fB_SC_FILE_SYSTEM\fP, \fB_SC_MONOTONIC_CLOCK\fP, \fB_SC_MULTI_PROCESS\fP, \fB_SC_SINGLE_PROCESS\fP, \fB_SC_NETWORKING\fP, \fB_SC_READER_WRITER_LOCKS\fP, \fB_SC_SPIN_LOCKS\fP, \fB_SC_REGEXP\fP, \fB_SC_REGEX_VERSION\fP, \fB_SC_SHELL\fP, \fB_SC_SIGNALS\fP, \fB_SC_SPAWN\fP, \fB_SC_SPORADIC_SERVER\fP, \fB_SC_THREAD_SPORADIC_SERVER\fP, \fB_SC_SYSTEM_DATABASE\fP, \fB_SC_SYSTEM_DATABASE_R\fP, \fB_SC_TIMEOUTS\fP, \fB_SC_TYPED_MEMORY_OBJECTS\fP, \fB_SC_USER_GROUPS\fP, \fB_SC_USER_GROUPS_R\fP, \fB_SC_2_PBS\fP, \fB_SC_2_PBS_ACCOUNTING\fP, \fB_SC_2_PBS_LOCATE\fP, \fB_SC_2_PBS_MESSAGE\fP, \fB_SC_2_PBS_TRACK\fP, \fB_SC_SYMLOOP_MAX\fP, \fB_SC_STREAMS\fP, \fB_SC_2_PBS_CHECKPOINT\fP, \fB_SC_V6_ILP32_OFF32\fP, \fB_SC_V6_ILP32_OFFBIG\fP, \fB_SC_V6_LP64_OFF64\fP, \fB_SC_V6_LPBIG_OFFBIG\fP, \fB_SC_HOST_NAME_MAX\fP, \fB_SC_TRACE\fP, \fB_SC_TRACE_EVENT_FILTER\fP, \fB_SC_TRACE_INHERIT\fP, \fB_SC_TRACE_LOG\fP, \fB_SC_LEVEL1_ICACHE_SIZE\fP, \fB_SC_LEVEL1_ICACHE_ASSOC\fP, \fB_SC_LEVEL1_ICACHE_LINESIZE\fP, \fB_SC_LEVEL1_DCACHE_SIZE\fP, \fB_SC_LEVEL1_DCACHE_ASSOC\fP, \fB_SC_LEVEL1_DCACHE_LINESIZE\fP, \fB_SC_LEVEL2_CACHE_SIZE\fP, \fB_SC_LEVEL2_CACHE_ASSOC\fP, \fB_SC_LEVEL2_CACHE_LINESIZE\fP, \fB_SC_LEVEL3_CACHE_SIZE\fP, \fB_SC_LEVEL3_CACHE_ASSOC\fP, \fB_SC_LEVEL3_CACHE_LINESIZE\fP, \fB_SC_LEVEL4_CACHE_SIZE\fP, \fB_SC_LEVEL4_CACHE_ASSOC\fP, \fB_SC_LEVEL4_CACHE_LINESIZE\fP, \fB_SC_IPV6\fP =  _SC_LEVEL1_ICACHE_SIZE + 50, \fB_SC_RAW_SOCKETS\fP }"
.br
.ti -1c
.RI "enum { \fB_CS_PATH\fP, \fB_CS_V6_WIDTH_RESTRICTED_ENVS\fP, \fB_CS_GNU_LIBC_VERSION\fP, \fB_CS_GNU_LIBPTHREAD_VERSION\fP, \fB_CS_LFS_CFLAGS\fP =  1000, \fB_CS_LFS_LDFLAGS\fP, \fB_CS_LFS_LIBS\fP, \fB_CS_LFS_LINTFLAGS\fP, \fB_CS_LFS64_CFLAGS\fP, \fB_CS_LFS64_LDFLAGS\fP, \fB_CS_LFS64_LIBS\fP, \fB_CS_LFS64_LINTFLAGS\fP, \fB_CS_XBS5_ILP32_OFF32_CFLAGS\fP =  1100, \fB_CS_XBS5_ILP32_OFF32_LDFLAGS\fP, \fB_CS_XBS5_ILP32_OFF32_LIBS\fP, \fB_CS_XBS5_ILP32_OFF32_LINTFLAGS\fP, \fB_CS_XBS5_ILP32_OFFBIG_CFLAGS\fP, \fB_CS_XBS5_ILP32_OFFBIG_LDFLAGS\fP, \fB_CS_XBS5_ILP32_OFFBIG_LIBS\fP, \fB_CS_XBS5_ILP32_OFFBIG_LINTFLAGS\fP, \fB_CS_XBS5_LP64_OFF64_CFLAGS\fP, \fB_CS_XBS5_LP64_OFF64_LDFLAGS\fP, \fB_CS_XBS5_LP64_OFF64_LIBS\fP, \fB_CS_XBS5_LP64_OFF64_LINTFLAGS\fP, \fB_CS_XBS5_LPBIG_OFFBIG_CFLAGS\fP, \fB_CS_XBS5_LPBIG_OFFBIG_LDFLAGS\fP, \fB_CS_XBS5_LPBIG_OFFBIG_LIBS\fP, \fB_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS\fP, \fB_CS_POSIX_V6_ILP32_OFF32_CFLAGS\fP, \fB_CS_POSIX_V6_ILP32_OFF32_LDFLAGS\fP, \fB_CS_POSIX_V6_ILP32_OFF32_LIBS\fP, \fB_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS\fP, \fB_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS\fP, \fB_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS\fP, \fB_CS_POSIX_V6_ILP32_OFFBIG_LIBS\fP, \fB_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS\fP, \fB_CS_POSIX_V6_LP64_OFF64_CFLAGS\fP, \fB_CS_POSIX_V6_LP64_OFF64_LDFLAGS\fP, \fB_CS_POSIX_V6_LP64_OFF64_LIBS\fP, \fB_CS_POSIX_V6_LP64_OFF64_LINTFLAGS\fP, \fB_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS\fP, \fB_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS\fP, \fB_CS_POSIX_V6_LPBIG_OFFBIG_LIBS\fP, \fB_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS\fP }"
.br
.ti -1c
.RI "enum { \fBSI_ASYNCNL\fP =  -60, \fBSI_TKILL\fP =  -6, \fBSI_SIGIO\fP, \fBSI_ASYNCIO\fP, \fBSI_MESGQ\fP, \fBSI_TIMER\fP, \fBSI_QUEUE\fP, \fBSI_USER\fP, \fBSI_KERNEL\fP =  0x80 }"
.br
.ti -1c
.RI "enum { \fBILL_ILLOPC\fP =  1, \fBILL_ILLOPN\fP, \fBILL_ILLADR\fP, \fBILL_ILLTRP\fP, \fBILL_PRVOPC\fP, \fBILL_PRVREG\fP, \fBILL_COPROC\fP, \fBILL_BADSTK\fP }"
.br
.ti -1c
.RI "enum { \fBFPE_INTDIV\fP =  1, \fBFPE_INTOVF\fP, \fBFPE_FLTDIV\fP, \fBFPE_FLTOVF\fP, \fBFPE_FLTUND\fP, \fBFPE_FLTRES\fP, \fBFPE_FLTINV\fP, \fBFPE_FLTSUB\fP }"
.br
.ti -1c
.RI "enum { \fBSEGV_MAPERR\fP =  1, \fBSEGV_ACCERR\fP }"
.br
.ti -1c
.RI "enum { \fBBUS_ADRALN\fP =  1, \fBBUS_ADRERR\fP, \fBBUS_OBJERR\fP }"
.br
.ti -1c
.RI "enum { \fBTRAP_BRKPT\fP =  1, \fBTRAP_TRACE\fP }"
.br
.ti -1c
.RI "enum { \fBCLD_EXITED\fP =  1, \fBCLD_KILLED\fP, \fBCLD_DUMPED\fP, \fBCLD_TRAPPED\fP, \fBCLD_STOPPED\fP, \fBCLD_CONTINUED\fP }"
.br
.ti -1c
.RI "enum { \fBPOLL_IN\fP =  1, \fBPOLL_OUT\fP, \fBPOLL_MSG\fP, \fBPOLL_ERR\fP, \fBPOLL_PRI\fP, \fBPOLL_HUP\fP }"
.br
.ti -1c
.RI "enum { \fBSIGEV_SIGNAL\fP =  0, \fBSIGEV_NONE\fP, \fBSIGEV_THREAD\fP, \fBSIGEV_THREAD_ID\fP =  4 }"
.br
.ti -1c
.RI "enum { \fBSS_ONSTACK\fP =  1, \fBSS_DISABLE\fP }"
.br
.ti -1c
.RI "enum { \fBREG_R8\fP =  0, \fBREG_R9\fP, \fBREG_R10\fP, \fBREG_R11\fP, \fBREG_R12\fP, \fBREG_R13\fP, \fBREG_R14\fP, \fBREG_R15\fP, \fBREG_RDI\fP, \fBREG_RSI\fP, \fBREG_RBP\fP, \fBREG_RBX\fP, \fBREG_RDX\fP, \fBREG_RAX\fP, \fBREG_RCX\fP, \fBREG_RSP\fP, \fBREG_RIP\fP, \fBREG_EFL\fP, \fBREG_CSGSFS\fP, \fBREG_ERR\fP, \fBREG_TRAPNO\fP, \fBREG_OLDMASK\fP, \fBREG_CR2\fP }"
.br
.ti -1c
.RI "enum \fB__rusage_who\fP { \fBRUSAGE_SELF\fP =  0, \fBRUSAGE_CHILDREN\fP =  -1, \fBRUSAGE_THREAD\fP =  1, \fBRUSAGE_SELF\fP =  0, \fBRUSAGE_CHILDREN\fP =  -1, \fBRUSAGE_THREAD\fP =  1 }"
.br
.ti -1c
.RI "enum \fB__priority_which\fP { \fBPRIO_PROCESS\fP =  0, \fBPRIO_PGRP\fP =  1, \fBPRIO_USER\fP =  2, \fBPRIO_PROCESS\fP =  0, \fBPRIO_PGRP\fP =  1, \fBPRIO_USER\fP =  2 }"
.br
.ti -1c
.RI "enum \fBidtype_t\fP { \fBP_ALL\fP, \fBP_PID\fP, \fBP_PGID\fP, \fBP_ALL\fP, \fBP_PID\fP, \fBP_PGID\fP }"
.br
.ti -1c
.RI "enum \fB__socket_type\fP { \fBSOCK_STREAM\fP =  1, \fBSOCK_DGRAM\fP =  2, \fBSOCK_RAW\fP =  3, \fBSOCK_RDM\fP =  4, \fBSOCK_SEQPACKET\fP =  5, \fBSOCK_PACKET\fP =  10, \fBSOCK_STREAM\fP =  1, \fBSOCK_DGRAM\fP =  2, \fBSOCK_RAW\fP =  3, \fBSOCK_RDM\fP =  4, \fBSOCK_SEQPACKET\fP =  5, \fBSOCK_PACKET\fP =  10 }"
.br
.ti -1c
.RI "enum { \fBMSG_OOB\fP =  0x01, \fBMSG_PEEK\fP =  0x02, \fBMSG_DONTROUTE\fP =  0x04, \fBMSG_TRYHARD\fP =  MSG_DONTROUTE, \fBMSG_CTRUNC\fP =  0x08, \fBMSG_PROXY\fP =  0x10, \fBMSG_TRUNC\fP =  0x20, \fBMSG_DONTWAIT\fP =  0x40, \fBMSG_EOR\fP =  0x80, \fBMSG_WAITALL\fP =  0x100, \fBMSG_FIN\fP =  0x200, \fBMSG_SYN\fP =  0x400, \fBMSG_CONFIRM\fP =  0x800, \fBMSG_RST\fP =  0x1000, \fBMSG_ERRQUEUE\fP =  0x2000, \fBMSG_NOSIGNAL\fP =  0x4000, \fBMSG_MORE\fP =  0x8000 }"
.br
.ti -1c
.RI "enum { \fBSCM_RIGHTS\fP =  0x01, \fBSCM_CREDENTIALS\fP =  0x02 }"
.br
.ti -1c
.RI "enum { \fBSHUT_RD\fP =  0, \fBSHUT_WR\fP, \fBSHUT_RDWR\fP }"
.br
.ti -1c
.RI "enum { \fBIPPROTO_IP\fP =  0, \fBIPPROTO_HOPOPTS\fP =  0, \fBIPPROTO_ICMP\fP =  1, \fBIPPROTO_IGMP\fP =  2, \fBIPPROTO_IPIP\fP =  4, \fBIPPROTO_TCP\fP =  6, \fBIPPROTO_EGP\fP =  8, \fBIPPROTO_PUP\fP =  12, \fBIPPROTO_UDP\fP =  17, \fBIPPROTO_IDP\fP =  22, \fBIPPROTO_TP\fP =  29, \fBIPPROTO_IPV6\fP =  41, \fBIPPROTO_ROUTING\fP =  43, \fBIPPROTO_FRAGMENT\fP =  44, \fBIPPROTO_RSVP\fP =  46, \fBIPPROTO_GRE\fP =  47, \fBIPPROTO_ESP\fP =  50, \fBIPPROTO_AH\fP =  51, \fBIPPROTO_ICMPV6\fP =  58, \fBIPPROTO_NONE\fP =  59, \fBIPPROTO_DSTOPTS\fP =  60, \fBIPPROTO_MTP\fP =  92, \fBIPPROTO_ENCAP\fP =  98, \fBIPPROTO_PIM\fP =  103, \fBIPPROTO_COMP\fP =  108, \fBIPPROTO_SCTP\fP =  132, \fBIPPROTO_RAW\fP =  255, \fBIPPROTO_MAX\fP }"
.br
.ti -1c
.RI "enum { \fBIPPORT_ECHO\fP =  7, \fBIPPORT_DISCARD\fP =  9, \fBIPPORT_SYSTAT\fP =  11, \fBIPPORT_DAYTIME\fP =  13, \fBIPPORT_NETSTAT\fP =  15, \fBIPPORT_FTP\fP =  21, \fBIPPORT_TELNET\fP =  23, \fBIPPORT_SMTP\fP =  25, \fBIPPORT_TIMESERVER\fP =  37, \fBIPPORT_NAMESERVER\fP =  42, \fBIPPORT_WHOIS\fP =  43, \fBIPPORT_MTP\fP =  57, \fBIPPORT_TFTP\fP =  69, \fBIPPORT_RJE\fP =  77, \fBIPPORT_FINGER\fP =  79, \fBIPPORT_TTYLINK\fP =  87, \fBIPPORT_SUPDUP\fP =  95, \fBIPPORT_EXECSERVER\fP =  512, \fBIPPORT_LOGINSERVER\fP =  513, \fBIPPORT_CMDSERVER\fP =  514, \fBIPPORT_EFSSERVER\fP =  520, \fBIPPORT_BIFFUDP\fP =  512, \fBIPPORT_WHOSERVER\fP =  513, \fBIPPORT_ROUTESERVER\fP =  520, \fBIPPORT_RESERVED\fP =  1024, \fBIPPORT_USERRESERVED\fP =  5000 }"
.br
.ti -1c
.RI "enum \fB__itimer_which\fP { \fBITIMER_REAL\fP =  0, \fBITIMER_VIRTUAL\fP =  1, \fBITIMER_PROF\fP =  2, \fBITIMER_REAL\fP =  0, \fBITIMER_VIRTUAL\fP =  1, \fBITIMER_PROF\fP =  2 }"
.br
.ti -1c
.RI "enum { \fBDT_UNKNOWN\fP =  0, \fBDT_FIFO\fP =  1, \fBDT_CHR\fP =  2, \fBDT_DIR\fP =  4, \fBDT_BLK\fP =  6, \fBDT_REG\fP =  8, \fBDT_LNK\fP =  10, \fBDT_SOCK\fP =  12, \fBDT_WHT\fP =  14 }"
.br
.ti -1c
.RI "enum { \fB__GCONV_OK\fP =  0, \fB__GCONV_NOCONV\fP, \fB__GCONV_NODB\fP, \fB__GCONV_NOMEM\fP, \fB__GCONV_EMPTY_INPUT\fP, \fB__GCONV_FULL_OUTPUT\fP, \fB__GCONV_ILLEGAL_INPUT\fP, \fB__GCONV_INCOMPLETE_INPUT\fP, \fB__GCONV_ILLEGAL_DESCRIPTOR\fP, \fB__GCONV_INTERNAL_ERROR\fP }"
.br
.ti -1c
.RI "enum { \fB__GCONV_IS_LAST\fP =  0x0001, \fB__GCONV_IGNORE_ERRORS\fP =  0x0002 }"
.br
.ti -1c
.RI "enum \fB__codecvt_result\fP { \fB__codecvt_ok\fP, \fB__codecvt_partial\fP, \fB__codecvt_error\fP, \fB__codecvt_noconv\fP, \fB__codecvt_ok\fP, \fB__codecvt_partial\fP, \fB__codecvt_error\fP, \fB__codecvt_noconv\fP }"
.br
.ti -1c
.RI "enum \fBupk_state_t\fP { \fBUPK_STATE_UNDEFINED\fP, \fBUPK_STATE_RUNNING\fP, \fBUPK_STATE_STOPPED\fP, \fBUPK_STATE_SHUTDOWN\fP, \fBUPK_STATE_UNDEFINED\fP, \fBUPK_STATE_RUNNING\fP, \fBUPK_STATE_STOPPED\fP, \fBUPK_STATE_SHUTDOWN\fP, \fBUPK_STATE_UNDEFINED\fP, \fBUPK_STATE_RUNNING\fP, \fBUPK_STATE_STOPPED\fP, \fBUPK_STATE_SHUTDOWN\fP }"
.br
.ti -1c
.RI "enum \fBupk_signal_t\fP { \fBUPK_SIG_HUP\fP =  1, \fBUPK_SIG_INT\fP =  2, \fBUPK_SIG_QUIT\fP =  3, \fBUPK_SIG_ILL\fP =  4, \fBUPK_SIG_TRAP\fP =  5, \fBUPK_SIG_ABRT\fP =  6, \fBUPK_SIG_BUS\fP =  7, \fBUPK_SIG_FPE\fP =  8, \fBUPK_SIG_KILL\fP =  9, \fBUPK_SIG_USR1\fP =  10, \fBUPK_SIG_SEGV\fP =  11, \fBUPK_SIG_USR2\fP =  12, \fBUPK_SIG_PIPE\fP =  13, \fBUPK_SIG_ALRM\fP =  14, \fBUPK_SIG_TERM\fP =  15, \fBUPK_SIG_STKFLT\fP =  16, \fBUPK_SIG_CHLD\fP =  17, \fBUPK_SIG_CONT\fP =  18, \fBUPK_SIG_STOP\fP =  19, \fBUPK_SIG_TSTP\fP =  20, \fBUPK_SIG_TTIN\fP =  21, \fBUPK_SIG_TTOU\fP =  22, \fBUPK_SIG_URG\fP =  23, \fBUPK_SIG_XCPU\fP =  24, \fBUPK_SIG_XFSZ\fP =  25, \fBUPK_SIG_VTALRM\fP =  26, \fBUPK_SIG_PROF\fP =  27, \fBUPK_SIG_WINCH\fP =  28, \fBUPK_SIG_IO\fP =  29, \fBUPK_SIG_PWR\fP =  30, \fBUPK_SIG_SYS\fP =  31, \fBUPK_SIG_HUP\fP =  1, \fBUPK_SIG_INT\fP =  2, \fBUPK_SIG_QUIT\fP =  3, \fBUPK_SIG_ILL\fP =  4, \fBUPK_SIG_TRAP\fP =  5, \fBUPK_SIG_ABRT\fP =  6, \fBUPK_SIG_BUS\fP =  7, \fBUPK_SIG_FPE\fP =  8, \fBUPK_SIG_KILL\fP =  9, \fBUPK_SIG_USR1\fP =  10, \fBUPK_SIG_SEGV\fP =  11, \fBUPK_SIG_USR2\fP =  12, \fBUPK_SIG_PIPE\fP =  13, \fBUPK_SIG_ALRM\fP =  14, \fBUPK_SIG_TERM\fP =  15, \fBUPK_SIG_STKFLT\fP =  16, \fBUPK_SIG_CHLD\fP =  17, \fBUPK_SIG_CONT\fP =  18, \fBUPK_SIG_STOP\fP =  19, \fBUPK_SIG_TSTP\fP =  20, \fBUPK_SIG_TTIN\fP =  21, \fBUPK_SIG_TTOU\fP =  22, \fBUPK_SIG_URG\fP =  23, \fBUPK_SIG_XCPU\fP =  24, \fBUPK_SIG_XFSZ\fP =  25, \fBUPK_SIG_VTALRM\fP =  26, \fBUPK_SIG_PROF\fP =  27, \fBUPK_SIG_WINCH\fP =  28, \fBUPK_SIG_IO\fP =  29, \fBUPK_SIG_PWR\fP =  30, \fBUPK_SIG_SYS\fP =  31, \fBUPK_SIG_HUP\fP =  1, \fBUPK_SIG_INT\fP =  2, \fBUPK_SIG_QUIT\fP =  3, \fBUPK_SIG_ILL\fP =  4, \fBUPK_SIG_TRAP\fP =  5, \fBUPK_SIG_ABRT\fP =  6, \fBUPK_SIG_BUS\fP =  7, \fBUPK_SIG_FPE\fP =  8, \fBUPK_SIG_KILL\fP =  9, \fBUPK_SIG_USR1\fP =  10, \fBUPK_SIG_SEGV\fP =  11, \fBUPK_SIG_USR2\fP =  12, \fBUPK_SIG_PIPE\fP =  13, \fBUPK_SIG_ALRM\fP =  14, \fBUPK_SIG_TERM\fP =  15, \fBUPK_SIG_STKFLT\fP =  16, \fBUPK_SIG_CHLD\fP =  17, \fBUPK_SIG_CONT\fP =  18, \fBUPK_SIG_STOP\fP =  19, \fBUPK_SIG_TSTP\fP =  20, \fBUPK_SIG_TTIN\fP =  21, \fBUPK_SIG_TTOU\fP =  22, \fBUPK_SIG_URG\fP =  23, \fBUPK_SIG_XCPU\fP =  24, \fBUPK_SIG_XFSZ\fP =  25, \fBUPK_SIG_VTALRM\fP =  26, \fBUPK_SIG_PROF\fP =  27, \fBUPK_SIG_WINCH\fP =  28, \fBUPK_SIG_IO\fP =  29, \fBUPK_SIG_PWR\fP =  30, \fBUPK_SIG_SYS\fP =  31 }"
.br
.ti -1c
.RI "enum \fBupk_diaglvl_t\fP { \fBUPK_DIAGLVL_FATAL\fP =  0, \fBUPK_DIAGLVL_ALERT\fP, \fBUPK_DIAGLVL_CRIT\fP, \fBUPK_DIAGLVL_ERROR\fP, \fBUPK_DIAGLVL_WARN\fP, \fBUPK_DIAGLVL_NOTICE\fP, \fBUPK_DIAGLVL_VERBOSE\fP, \fBUPK_DIAGLVL_INFO\fP, \fBUPK_DIAGLVL_DEBUG0\fP, \fBUPK_DIAGLVL_DEBUG1\fP, \fBUPK_DIAGLVL_FATAL\fP =  0, \fBUPK_DIAGLVL_ALERT\fP, \fBUPK_DIAGLVL_CRIT\fP, \fBUPK_DIAGLVL_ERROR\fP, \fBUPK_DIAGLVL_WARN\fP, \fBUPK_DIAGLVL_NOTICE\fP, \fBUPK_DIAGLVL_VERBOSE\fP, \fBUPK_DIAGLVL_INFO\fP, \fBUPK_DIAGLVL_DEBUG0\fP, \fBUPK_DIAGLVL_DEBUG1\fP, \fBUPK_DIAGLVL_FATAL\fP =  0, \fBUPK_DIAGLVL_ALERT\fP, \fBUPK_DIAGLVL_CRIT\fP, \fBUPK_DIAGLVL_ERROR\fP, \fBUPK_DIAGLVL_WARN\fP, \fBUPK_DIAGLVL_NOTICE\fP, \fBUPK_DIAGLVL_VERBOSE\fP, \fBUPK_DIAGLVL_INFO\fP, \fBUPK_DIAGLVL_DEBUG0\fP, \fBUPK_DIAGLVL_DEBUG1\fP }"
.br
.ti -1c
.RI "enum \fBupk_errlevel_t\fP { \fBUPK_ERRLVL_ERROR\fP, \fBUPK_ERRLVL_ERROR\fP, \fBUPK_ERRLVL_ERROR\fP }"
.br
.ti -1c
.RI "enum \fBupk_errno_t\fP { \fBUPK_ERR_UNKNOWN\fP =  0, \fBUPK_ERR_UNSUP\fP, \fBUPK_ERR_INVALID_PKT\fP, \fBUPK_SOCKET_FAILURE\fP, \fBUPK_JSON_PARSE_ERROR\fP, \fBUPK_SQL_ERROR\fP, \fBUPK_CONF_ERROR\fP, \fBUPK_ERR_UNKNOWN\fP =  0, \fBUPK_ERR_UNSUP\fP, \fBUPK_ERR_INVALID_PKT\fP, \fBUPK_SOCKET_FAILURE\fP, \fBUPK_JSON_PARSE_ERROR\fP, \fBUPK_SQL_ERROR\fP, \fBUPK_CONF_ERROR\fP, \fBUPK_ERR_UNKNOWN\fP =  0, \fBUPK_ERR_UNSUP\fP, \fBUPK_ERR_INVALID_PKT\fP, \fBUPK_SOCKET_FAILURE\fP, \fBUPK_JSON_PARSE_ERROR\fP, \fBUPK_SQL_ERROR\fP, \fBUPK_CONF_ERROR\fP }"
.br
.ti -1c
.RI "enum \fBupk_pkttype_t\fP { \fBPKT_REQUEST\fP =  1, \fBPKT_REPLY\fP, \fBPKT_PUBMSG\fP, \fBPKT_V0_PROTO_LIMIT\fP, \fBPKT_REQUEST\fP =  1, \fBPKT_REPLY\fP, \fBPKT_PUBMSG\fP, \fBPKT_V0_PROTO_LIMIT\fP, \fBPKT_REQUEST\fP =  1, \fBPKT_REPLY\fP, \fBPKT_PUBMSG\fP, \fBPKT_V0_PROTO_LIMIT\fP }"
.br
.ti -1c
.RI "enum \fB_upk_msgtype\fP { \fBUPK_REQ_ORIGIN\fP =  1, \fBUPK_REQ_PREAMBLE\fP =  1, \fBUPK_REQ_SEQ_START\fP, \fBUPK_REQ_SEQ_END\fP, \fBUPK_REQ_ACTION\fP, \fBUPK_REQ_SIGNAL\fP, \fBUPK_REQ_LIST\fP, \fBUPK_REQ_STATUS\fP, \fBUPK_REQ_SUBSCRIBE\fP, \fBUPK_REQ_UNSUBSCRIBE\fP, \fBUPK_REQ_DISCONNECT\fP, \fBUPK_REQ_V0_PROTO_LIMIT\fP, \fBUPK_REQ_LIMIT\fP, \fBUPK_REPL_ORIGIN\fP =  4096, \fBUPK_REPL_PREAMBLE\fP =  4096, \fBUPK_REPL_SEQ_START\fP, \fBUPK_REPL_SEQ_END\fP, \fBUPK_REPL_RESULT\fP, \fBUPK_REPL_LISTING\fP, \fBUPK_REPL_SVCINFO\fP, \fBUPK_REPL_ACK\fP, \fBUPK_REPL_ERROR\fP, \fBUPK_REPL_V0_PROTO_LIMIT\fP, \fBUPK_REPL_LIMIT\fP, \fBUPK_PUB_ORIGIN\fP =  8192, \fBUPK_PUB_PUBLICATION\fP =  8192, \fBUPK_PUB_CANCELATION\fP, \fBUPK_PUB_V0_PROTO_LIMIT\fP, \fBUPK_PUB_LIMIT\fP, \fBUPK_REQ_ORIGIN\fP =  1, \fBUPK_REQ_PREAMBLE\fP =  1, \fBUPK_REQ_SEQ_START\fP, \fBUPK_REQ_SEQ_END\fP, \fBUPK_REQ_ACTION\fP, \fBUPK_REQ_SIGNAL\fP, \fBUPK_REQ_LIST\fP, \fBUPK_REQ_STATUS\fP, \fBUPK_REQ_SUBSCRIBE\fP, \fBUPK_REQ_UNSUBSCRIBE\fP, \fBUPK_REQ_DISCONNECT\fP, \fBUPK_REQ_V0_PROTO_LIMIT\fP, \fBUPK_REQ_LIMIT\fP, \fBUPK_REPL_ORIGIN\fP =  4096, \fBUPK_REPL_PREAMBLE\fP =  4096, \fBUPK_REPL_SEQ_START\fP, \fBUPK_REPL_SEQ_END\fP, \fBUPK_REPL_RESULT\fP, \fBUPK_REPL_LISTING\fP, \fBUPK_REPL_SVCINFO\fP, \fBUPK_REPL_ACK\fP, \fBUPK_REPL_ERROR\fP, \fBUPK_REPL_V0_PROTO_LIMIT\fP, \fBUPK_REPL_LIMIT\fP, \fBUPK_PUB_ORIGIN\fP =  8192, \fBUPK_PUB_PUBLICATION\fP =  8192, \fBUPK_PUB_CANCELATION\fP, \fBUPK_PUB_V0_PROTO_LIMIT\fP, \fBUPK_PUB_LIMIT\fP, \fBUPK_REQ_ORIGIN\fP =  1, \fBUPK_REQ_PREAMBLE\fP =  1, \fBUPK_REQ_SEQ_START\fP, \fBUPK_REQ_SEQ_END\fP, \fBUPK_REQ_ACTION\fP, \fBUPK_REQ_SIGNAL\fP, \fBUPK_REQ_LIST\fP, \fBUPK_REQ_STATUS\fP, \fBUPK_REQ_SUBSCRIBE\fP, \fBUPK_REQ_UNSUBSCRIBE\fP, \fBUPK_REQ_DISCONNECT\fP, \fBUPK_REQ_V0_PROTO_LIMIT\fP, \fBUPK_REQ_LIMIT\fP, \fBUPK_REPL_ORIGIN\fP =  4096, \fBUPK_REPL_PREAMBLE\fP =  4096, \fBUPK_REPL_SEQ_START\fP, \fBUPK_REPL_SEQ_END\fP, \fBUPK_REPL_RESULT\fP, \fBUPK_REPL_LISTING\fP, \fBUPK_REPL_SVCINFO\fP, \fBUPK_REPL_ACK\fP, \fBUPK_REPL_ERROR\fP, \fBUPK_REPL_V0_PROTO_LIMIT\fP, \fBUPK_REPL_LIMIT\fP, \fBUPK_PUB_ORIGIN\fP =  8192, \fBUPK_PUB_PUBLICATION\fP =  8192, \fBUPK_PUB_CANCELATION\fP, \fBUPK_PUB_V0_PROTO_LIMIT\fP, \fBUPK_PUB_LIMIT\fP }"
.br
.ti -1c
.RI "enum \fB_buddy_cmnd\fP { \fBUPK_CTRL_NONE\fP =  0, \fBUPK_CTRL_ACK\fP =  1, \fBUPK_CTRL_SHUTDOWN\fP, \fBUPK_CTRL_STATUS_REQ\fP, \fBUPK_CTRL_ACTION_START\fP, \fBUPK_CTRL_ACTION_STOP\fP, \fBUPK_CTRL_ACTION_RELOAD\fP, \fBUPK_CTRL_ACTION_RUNONCE\fP, \fBUPK_CTRL_CUSTOM_ACTION_00\fP, \fBUPK_CTRL_CUSTOM_ACTION_01\fP, \fBUPK_CTRL_CUSTOM_ACTION_02\fP, \fBUPK_CTRL_CUSTOM_ACTION_03\fP, \fBUPK_CTRL_CUSTOM_ACTION_04\fP, \fBUPK_CTRL_CUSTOM_ACTION_05\fP, \fBUPK_CTRL_CUSTOM_ACTION_06\fP, \fBUPK_CTRL_CUSTOM_ACTION_07\fP, \fBUPK_CTRL_CUSTOM_ACTION_08\fP, \fBUPK_CTRL_CUSTOM_ACTION_09\fP, \fBUPK_CTRL_CUSTOM_ACTION_10\fP, \fBUPK_CTRL_CUSTOM_ACTION_11\fP, \fBUPK_CTRL_CUSTOM_ACTION_12\fP, \fBUPK_CTRL_CUSTOM_ACTION_13\fP, \fBUPK_CTRL_CUSTOM_ACTION_14\fP, \fBUPK_CTRL_CUSTOM_ACTION_15\fP, \fBUPK_CTRL_CUSTOM_ACTION_16\fP, \fBUPK_CTRL_CUSTOM_ACTION_17\fP, \fBUPK_CTRL_CUSTOM_ACTION_18\fP, \fBUPK_CTRL_CUSTOM_ACTION_19\fP, \fBUPK_CTRL_CUSTOM_ACTION_20\fP, \fBUPK_CTRL_CUSTOM_ACTION_21\fP, \fBUPK_CTRL_CUSTOM_ACTION_22\fP, \fBUPK_CTRL_CUSTOM_ACTION_23\fP, \fBUPK_CTRL_CUSTOM_ACTION_24\fP, \fBUPK_CTRL_CUSTOM_ACTION_25\fP, \fBUPK_CTRL_CUSTOM_ACTION_26\fP, \fBUPK_CTRL_CUSTOM_ACTION_27\fP, \fBUPK_CTRL_CUSTOM_ACTION_28\fP, \fBUPK_CTRL_CUSTOM_ACTION_29\fP, \fBUPK_CTRL_CUSTOM_ACTION_30\fP, \fBUPK_CTRL_CUSTOM_ACTION_31\fP, \fBUPK_CTRL_SIGNAL_01\fP, \fBUPK_CTRL_SIGNAL_02\fP, \fBUPK_CTRL_SIGNAL_03\fP, \fBUPK_CTRL_SIGNAL_04\fP, \fBUPK_CTRL_SIGNAL_05\fP, \fBUPK_CTRL_SIGNAL_06\fP, \fBUPK_CTRL_SIGNAL_07\fP, \fBUPK_CTRL_SIGNAL_08\fP, \fBUPK_CTRL_SIGNAL_09\fP, \fBUPK_CTRL_SIGNAL_10\fP, \fBUPK_CTRL_SIGNAL_11\fP, \fBUPK_CTRL_SIGNAL_12\fP, \fBUPK_CTRL_SIGNAL_13\fP, \fBUPK_CTRL_SIGNAL_14\fP, \fBUPK_CTRL_SIGNAL_15\fP, \fBUPK_CTRL_SIGNAL_16\fP, \fBUPK_CTRL_SIGNAL_17\fP, \fBUPK_CTRL_SIGNAL_18\fP, \fBUPK_CTRL_SIGNAL_19\fP, \fBUPK_CTRL_SIGNAL_20\fP, \fBUPK_CTRL_SIGNAL_21\fP, \fBUPK_CTRL_SIGNAL_22\fP, \fBUPK_CTRL_SIGNAL_23\fP, \fBUPK_CTRL_SIGNAL_24\fP, \fBUPK_CTRL_SIGNAL_25\fP, \fBUPK_CTRL_SIGNAL_26\fP, \fBUPK_CTRL_SIGNAL_27\fP, \fBUPK_CTRL_SIGNAL_28\fP, \fBUPK_CTRL_SIGNAL_29\fP, \fBUPK_CTRL_SIGNAL_30\fP, \fBUPK_CTRL_SIGNAL_31\fP, \fBUPK_CTRL_SIGNAL_32\fP, \fBUPK_CTRL_NONE\fP =  0, \fBUPK_CTRL_ACK\fP =  1, \fBUPK_CTRL_SHUTDOWN\fP, \fBUPK_CTRL_STATUS_REQ\fP, \fBUPK_CTRL_ACTION_START\fP, \fBUPK_CTRL_ACTION_STOP\fP, \fBUPK_CTRL_ACTION_RELOAD\fP, \fBUPK_CTRL_ACTION_RUNONCE\fP, \fBUPK_CTRL_CUSTOM_ACTION_00\fP, \fBUPK_CTRL_CUSTOM_ACTION_01\fP, \fBUPK_CTRL_CUSTOM_ACTION_02\fP, \fBUPK_CTRL_CUSTOM_ACTION_03\fP, \fBUPK_CTRL_CUSTOM_ACTION_04\fP, \fBUPK_CTRL_CUSTOM_ACTION_05\fP, \fBUPK_CTRL_CUSTOM_ACTION_06\fP, \fBUPK_CTRL_CUSTOM_ACTION_07\fP, \fBUPK_CTRL_CUSTOM_ACTION_08\fP, \fBUPK_CTRL_CUSTOM_ACTION_09\fP, \fBUPK_CTRL_CUSTOM_ACTION_10\fP, \fBUPK_CTRL_CUSTOM_ACTION_11\fP, \fBUPK_CTRL_CUSTOM_ACTION_12\fP, \fBUPK_CTRL_CUSTOM_ACTION_13\fP, \fBUPK_CTRL_CUSTOM_ACTION_14\fP, \fBUPK_CTRL_CUSTOM_ACTION_15\fP, \fBUPK_CTRL_CUSTOM_ACTION_16\fP, \fBUPK_CTRL_CUSTOM_ACTION_17\fP, \fBUPK_CTRL_CUSTOM_ACTION_18\fP, \fBUPK_CTRL_CUSTOM_ACTION_19\fP, \fBUPK_CTRL_CUSTOM_ACTION_20\fP, \fBUPK_CTRL_CUSTOM_ACTION_21\fP, \fBUPK_CTRL_CUSTOM_ACTION_22\fP, \fBUPK_CTRL_CUSTOM_ACTION_23\fP, \fBUPK_CTRL_CUSTOM_ACTION_24\fP, \fBUPK_CTRL_CUSTOM_ACTION_25\fP, \fBUPK_CTRL_CUSTOM_ACTION_26\fP, \fBUPK_CTRL_CUSTOM_ACTION_27\fP, \fBUPK_CTRL_CUSTOM_ACTION_28\fP, \fBUPK_CTRL_CUSTOM_ACTION_29\fP, \fBUPK_CTRL_CUSTOM_ACTION_30\fP, \fBUPK_CTRL_CUSTOM_ACTION_31\fP, \fBUPK_CTRL_SIGNAL_01\fP, \fBUPK_CTRL_SIGNAL_02\fP, \fBUPK_CTRL_SIGNAL_03\fP, \fBUPK_CTRL_SIGNAL_04\fP, \fBUPK_CTRL_SIGNAL_05\fP, \fBUPK_CTRL_SIGNAL_06\fP, \fBUPK_CTRL_SIGNAL_07\fP, \fBUPK_CTRL_SIGNAL_08\fP, \fBUPK_CTRL_SIGNAL_09\fP, \fBUPK_CTRL_SIGNAL_10\fP, \fBUPK_CTRL_SIGNAL_11\fP, \fBUPK_CTRL_SIGNAL_12\fP, \fBUPK_CTRL_SIGNAL_13\fP, \fBUPK_CTRL_SIGNAL_14\fP, \fBUPK_CTRL_SIGNAL_15\fP, \fBUPK_CTRL_SIGNAL_16\fP, \fBUPK_CTRL_SIGNAL_17\fP, \fBUPK_CTRL_SIGNAL_18\fP, \fBUPK_CTRL_SIGNAL_19\fP, \fBUPK_CTRL_SIGNAL_20\fP, \fBUPK_CTRL_SIGNAL_21\fP, \fBUPK_CTRL_SIGNAL_22\fP, \fBUPK_CTRL_SIGNAL_23\fP, \fBUPK_CTRL_SIGNAL_24\fP, \fBUPK_CTRL_SIGNAL_25\fP, \fBUPK_CTRL_SIGNAL_26\fP, \fBUPK_CTRL_SIGNAL_27\fP, \fBUPK_CTRL_SIGNAL_28\fP, \fBUPK_CTRL_SIGNAL_29\fP, \fBUPK_CTRL_SIGNAL_30\fP, \fBUPK_CTRL_SIGNAL_31\fP, \fBUPK_CTRL_SIGNAL_32\fP, \fBUPK_CTRL_NONE\fP =  0, \fBUPK_CTRL_ACK\fP =  1, \fBUPK_CTRL_SHUTDOWN\fP, \fBUPK_CTRL_STATUS_REQ\fP, \fBUPK_CTRL_ACTION_START\fP, \fBUPK_CTRL_ACTION_STOP\fP, \fBUPK_CTRL_ACTION_RELOAD\fP, \fBUPK_CTRL_ACTION_RUNONCE\fP, \fBUPK_CTRL_CUSTOM_ACTION_00\fP, \fBUPK_CTRL_CUSTOM_ACTION_01\fP, \fBUPK_CTRL_CUSTOM_ACTION_02\fP, \fBUPK_CTRL_CUSTOM_ACTION_03\fP, \fBUPK_CTRL_CUSTOM_ACTION_04\fP, \fBUPK_CTRL_CUSTOM_ACTION_05\fP, \fBUPK_CTRL_CUSTOM_ACTION_06\fP, \fBUPK_CTRL_CUSTOM_ACTION_07\fP, \fBUPK_CTRL_CUSTOM_ACTION_08\fP, \fBUPK_CTRL_CUSTOM_ACTION_09\fP, \fBUPK_CTRL_CUSTOM_ACTION_10\fP, \fBUPK_CTRL_CUSTOM_ACTION_11\fP, \fBUPK_CTRL_CUSTOM_ACTION_12\fP, \fBUPK_CTRL_CUSTOM_ACTION_13\fP, \fBUPK_CTRL_CUSTOM_ACTION_14\fP, \fBUPK_CTRL_CUSTOM_ACTION_15\fP, \fBUPK_CTRL_CUSTOM_ACTION_16\fP, \fBUPK_CTRL_CUSTOM_ACTION_17\fP, \fBUPK_CTRL_CUSTOM_ACTION_18\fP, \fBUPK_CTRL_CUSTOM_ACTION_19\fP, \fBUPK_CTRL_CUSTOM_ACTION_20\fP, \fBUPK_CTRL_CUSTOM_ACTION_21\fP, \fBUPK_CTRL_CUSTOM_ACTION_22\fP, \fBUPK_CTRL_CUSTOM_ACTION_23\fP, \fBUPK_CTRL_CUSTOM_ACTION_24\fP, \fBUPK_CTRL_CUSTOM_ACTION_25\fP, \fBUPK_CTRL_CUSTOM_ACTION_26\fP, \fBUPK_CTRL_CUSTOM_ACTION_27\fP, \fBUPK_CTRL_CUSTOM_ACTION_28\fP, \fBUPK_CTRL_CUSTOM_ACTION_29\fP, \fBUPK_CTRL_CUSTOM_ACTION_30\fP, \fBUPK_CTRL_CUSTOM_ACTION_31\fP, \fBUPK_CTRL_SIGNAL_01\fP, \fBUPK_CTRL_SIGNAL_02\fP, \fBUPK_CTRL_SIGNAL_03\fP, \fBUPK_CTRL_SIGNAL_04\fP, \fBUPK_CTRL_SIGNAL_05\fP, \fBUPK_CTRL_SIGNAL_06\fP, \fBUPK_CTRL_SIGNAL_07\fP, \fBUPK_CTRL_SIGNAL_08\fP, \fBUPK_CTRL_SIGNAL_09\fP, \fBUPK_CTRL_SIGNAL_10\fP, \fBUPK_CTRL_SIGNAL_11\fP, \fBUPK_CTRL_SIGNAL_12\fP, \fBUPK_CTRL_SIGNAL_13\fP, \fBUPK_CTRL_SIGNAL_14\fP, \fBUPK_CTRL_SIGNAL_15\fP, \fBUPK_CTRL_SIGNAL_16\fP, \fBUPK_CTRL_SIGNAL_17\fP, \fBUPK_CTRL_SIGNAL_18\fP, \fBUPK_CTRL_SIGNAL_19\fP, \fBUPK_CTRL_SIGNAL_20\fP, \fBUPK_CTRL_SIGNAL_21\fP, \fBUPK_CTRL_SIGNAL_22\fP, \fBUPK_CTRL_SIGNAL_23\fP, \fBUPK_CTRL_SIGNAL_24\fP, \fBUPK_CTRL_SIGNAL_25\fP, \fBUPK_CTRL_SIGNAL_26\fP, \fBUPK_CTRL_SIGNAL_27\fP, \fBUPK_CTRL_SIGNAL_28\fP, \fBUPK_CTRL_SIGNAL_29\fP, \fBUPK_CTRL_SIGNAL_30\fP, \fBUPK_CTRL_SIGNAL_31\fP, \fBUPK_CTRL_SIGNAL_32\fP }"
.br
.ti -1c
.RI "enum \fBbuddy_runstate_t\fP { \fBBUDDY_UNKNOWN\fP =  0, \fBBUDDY_STOPPED\fP =  1, \fBBUDDY_RUNNING\fP, \fBBUDDY_RANONCE\fP, \fBBUDDY_UNKNOWN\fP =  0, \fBBUDDY_STOPPED\fP =  1, \fBBUDDY_RUNNING\fP, \fBBUDDY_RANONCE\fP, \fBBUDDY_UNKNOWN\fP =  0, \fBBUDDY_STOPPED\fP =  1, \fBBUDDY_RUNNING\fP, \fBBUDDY_RANONCE\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBselect\fP (int __nfds, \fBfd_set\fP *__restrict __readfds, \fBfd_set\fP *__restrict __writefds, \fBfd_set\fP *__restrict __exceptfds, struct \fBtimeval\fP *__restrict __timeout)"
.br
.ti -1c
.RI "int \fBpselect\fP (int __nfds, \fBfd_set\fP *__restrict __readfds, \fBfd_set\fP *__restrict __writefds, \fBfd_set\fP *__restrict __exceptfds, const struct \fBtimespec\fP *__restrict __timeout, const \fB__sigset_t\fP *__restrict __sigmask)"
.br
.ti -1c
.RI "__extension__ __inline unsigned int \fBgnu_dev_major\fP (unsigned long long int __dev) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "__extension__ __inline unsigned int \fBgnu_dev_minor\fP (unsigned long long int __dev) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "__extension__ __inline unsigned long long int \fBgnu_dev_makedev\fP (unsigned int __major, unsigned int __minor) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "__extension__ __inline unsigned int \fB__attribute__\fP ((__nothrow__))"
.br
.ti -1c
.RI "\fBsize_t\fP \fB__ctype_get_mb_cur_max\fP (void)"
.br
.ti -1c
.RI "long int \fBstrtol_l\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __base, \fB__locale_t\fP __loc) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "long int unsigned long int \fBstrtoul_l\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __base, \fB__locale_t\fP __loc) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "long int unsigned long int __extension__ long long int \fBstrtoll_l\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __base, \fB__locale_t\fP __loc) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "long int unsigned long int __extension__ long long int __extension__ unsigned long long int \fBstrtoull_l\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __base, \fB__locale_t\fP __loc) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "long int unsigned long int __extension__ long long int __extension__ unsigned long long int double \fBstrtod_l\fP (__const char *__restrict __nptr, char **__restrict __endptr, \fB__locale_t\fP __loc) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "long int unsigned long int __extension__ long long int __extension__ unsigned long long int double float \fBstrtof_l\fP (__const char *__restrict __nptr, char **__restrict __endptr, \fB__locale_t\fP __loc) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "long int unsigned long int __extension__ long long int __extension__ unsigned long long int double float long double \fBstrtold_l\fP (__const char *__restrict __nptr, char **__restrict __endptr, \fB__locale_t\fP __loc) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "long int unsigned long int __extension__ long long int __extension__ unsigned long long int double float long double double \fB__strtod_internal\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __group) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "float \fB__strtof_internal\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __group) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "long double \fB__strtold_internal\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __group) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "long int \fB__strtol_internal\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __base, int __group) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "unsigned long int \fB__strtoul_internal\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __base, int __group) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "__extension__ long long int \fB__strtoll_internal\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __base, int __group) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "__extension__ unsigned long long int \fB__strtoull_internal\fP (__const char *__restrict __nptr, char **__restrict __endptr, int __base, int __group) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "char * \fBl64a\fP (long int __n) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "long int \fBa64l\fP (__const char *__s) __attribute__((__nothrow__)) __attribute__((__pure__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "long int \fBrandom\fP (void)"
.br
.ti -1c
.RI "int \fBrandom_r\fP (struct random_data *__restrict __buf, int32_t *__restrict __result) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int \fBsrandom_r\fP (unsigned int __seed, struct random_data *__buf) __attribute__((__nothrow__)) __attribute__((__nonnull__(2)))"
.br
.ti -1c
.RI "int \fBinitstate_r\fP (unsigned int __seed, char *__restrict __statebuf, \fBsize_t\fP __statelen, struct random_data *__restrict __buf) __attribute__((__nothrow__)) __attribute__((__nonnull__(2"
.br
.ti -1c
.RI "int int \fBsetstate_r\fP (char *__restrict __statebuf, struct random_data *__restrict __buf) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int \fBrand\fP (void)"
.br
.ti -1c
.RI "int \fBdrand48_r\fP (struct drand48_data *__restrict __buffer, double *__restrict __result) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int \fBerand48_r\fP (unsigned short int __xsubi[3], struct drand48_data *__restrict __buffer, double *__restrict __result) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int \fBlrand48_r\fP (struct drand48_data *__restrict __buffer, long int *__restrict __result) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int \fBnrand48_r\fP (unsigned short int __xsubi[3], struct drand48_data *__restrict __buffer, long int *__restrict __result) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int int \fBmrand48_r\fP (struct drand48_data *__restrict __buffer, long int *__restrict __result) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int int int \fBjrand48_r\fP (unsigned short int __xsubi[3], struct drand48_data *__restrict __buffer, long int *__restrict __result) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int int int int \fBsrand48_r\fP (long int __seedval, struct drand48_data *__buffer) __attribute__((__nothrow__)) __attribute__((__nonnull__(2)))"
.br
.ti -1c
.RI "int \fBseed48_r\fP (unsigned short int __seed16v[3], struct drand48_data *__buffer) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int \fBlcong48_r\fP (unsigned short int __param[7], struct drand48_data *__buffer) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int void * \fBmalloc\fP (\fBsize_t\fP __size) __attribute__((__nothrow__)) __attribute__((__malloc__))"
.br
.ti -1c
.RI "void * \fBcalloc\fP (\fBsize_t\fP __nmemb, \fBsize_t\fP __size) __attribute__((__nothrow__)) __attribute__((__malloc__))"
.br
.ti -1c
.RI "void * \fBrealloc\fP (void *__ptr, \fBsize_t\fP __size) __attribute__((__nothrow__)) __attribute__((__malloc__)) __attribute__((__warn_unused_result__))"
.br
.ti -1c
.RI "void \fBfree\fP (void *__ptr) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "void \fBcfree\fP (void *__ptr) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "void * \fBalloca\fP (\fBsize_t\fP __size) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "void * \fBvalloc\fP (\fBsize_t\fP __size) __attribute__((__nothrow__)) __attribute__((__malloc__))"
.br
.ti -1c
.RI "int \fBposix_memalign\fP (void **__memptr, \fBsize_t\fP __alignment, \fBsize_t\fP __size) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "void \fBabort\fP (extern inton_exit((*__func)(int __status void)"
.br
.ti -1c
.RI "long int \fBpathconf\fP (__const char *__path, int __name) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "long int \fBfpathconf\fP (int __fd, int __name) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "long int \fBsysconf\fP (int __name) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fBsize_t\fP \fBconfstr\fP (int __name, char *__buf, \fBsize_t\fP __len) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fB__pid_t\fP \fBgetpid\fP (void)"
.br
.ti -1c
.RI "int \fBsigemptyset\fP (\fBsigset_t\fP *__set) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigfillset\fP (\fBsigset_t\fP *__set) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigaddset\fP (\fBsigset_t\fP *__set, int __signo) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigdelset\fP (\fBsigset_t\fP *__set, int __signo) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigismember\fP (__const \fBsigset_t\fP *__set, int __signo) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigisemptyset\fP (__const \fBsigset_t\fP *__set) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigandset\fP (\fBsigset_t\fP *__set, __const \fBsigset_t\fP *__left, __const \fBsigset_t\fP *__right) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int \fBsigorset\fP (\fBsigset_t\fP *__set, __const \fBsigset_t\fP *__left, __const \fBsigset_t\fP *__right) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int \fBsigprocmask\fP (int __how, __const \fBsigset_t\fP *__restrict __set, \fBsigset_t\fP *__restrict __oset) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsigsuspend\fP (__const \fBsigset_t\fP *__set) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigaction\fP (int __sig, __const struct \fBsigaction\fP *__restrict __act, struct \fBsigaction\fP *__restrict __oact) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsigpending\fP (\fBsigset_t\fP *__set) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigwait\fP (__const \fBsigset_t\fP *__restrict __set, int *__restrict __sig) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int \fBsigwaitinfo\fP (__const \fBsigset_t\fP *__restrict __set, \fBsiginfo_t\fP *__restrict __info) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigtimedwait\fP (__const \fBsigset_t\fP *__restrict __set, \fBsiginfo_t\fP *__restrict __info, __const struct \fBtimespec\fP *__restrict __timeout) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsigqueue\fP (\fB__pid_t\fP __pid, int __sig, __const union sigval __val) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsigvec\fP (int __sig, __const struct \fBsigvec\fP *__vec, struct \fBsigvec\fP *__ovec) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsigreturn\fP (struct \fBsigcontext\fP *__scp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsiginterrupt\fP (int __sig, int __interrupt) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsigstack\fP (struct \fBsigstack\fP *__ss, struct \fBsigstack\fP *__oss) __attribute__((__nothrow__)) __attribute__((__deprecated__))"
.br
.ti -1c
.RI "int \fBsigaltstack\fP (__const struct \fBsigaltstack\fP *__restrict __ss, struct \fBsigaltstack\fP *__restrict __oss) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsighold\fP (int __sig) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsigrelse\fP (int __sig) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsigignore\fP (int __sig) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "__sighandler_t \fBsigset\fP (int __sig, __sighandler_t __disp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBpthread_sigmask\fP (int __how, __const \fB__sigset_t\fP *__restrict __newmask, \fB__sigset_t\fP *__restrict __oldmask) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBpthread_kill\fP (\fBpthread_t\fP __threadid, int __signo) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fB__libc_current_sigrtmin\fP (void)"
.br
.ti -1c
.RI "int \fBgetrlimit\fP (\fB__rlimit_resource_t\fP __resource, struct \fBrlimit\fP *__rlimits) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBgetrlimit64\fP (\fB__rlimit_resource_t\fP __resource, struct \fBrlimit64\fP *__rlimits) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsetrlimit\fP (\fB__rlimit_resource_t\fP __resource, __const struct \fBrlimit\fP *__rlimits) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsetrlimit64\fP (\fB__rlimit_resource_t\fP __resource, __const struct \fBrlimit64\fP *__rlimits) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBgetrusage\fP (\fB__rusage_who_t\fP __who, struct \fBrusage\fP *__usage) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBgetpriority\fP (\fB__priority_which_t\fP __which, \fBid_t\fP __who) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsetpriority\fP (\fB__priority_which_t\fP __which, \fBid_t\fP __who, int __prio) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fB__pid_t\fP \fBwait\fP (\fB__WAIT_STATUS\fP __stat_loc)"
.br
.ti -1c
.RI "\fB__pid_t\fP \fBwaitpid\fP (\fB__pid_t\fP __pid, int *__stat_loc, int __options)"
.br
.ti -1c
.RI "int \fBwaitid\fP (\fBidtype_t\fP __idtype, \fB__id_t\fP __id, \fBsiginfo_t\fP *__infop, int __options)"
.br
.ti -1c
.RI "\fB__pid_t\fP \fBwait3\fP (\fB__WAIT_STATUS\fP __stat_loc, int __options, struct \fBrusage\fP *__usage) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fB__pid_t\fP \fBwait4\fP (\fB__pid_t\fP __pid, \fB__WAIT_STATUS\fP __stat_loc, int __options, struct \fBrusage\fP *__usage) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fBssize_t\fP \fBreadv\fP (int __fd, __const struct \fBiovec\fP *__iovec, int __count)"
.br
.ti -1c
.RI "\fBssize_t\fP \fBwritev\fP (int __fd, __const struct \fBiovec\fP *__iovec, int __count)"
.br
.ti -1c
.RI "struct \fBcmsghdr\fP * \fB__cmsg_nxthdr\fP (struct \fBmsghdr\fP *__mhdr, struct \fBcmsghdr\fP *__cmsg) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsocket\fP (int __domain, int __type, int __protocol) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsocketpair\fP (int __domain, int __type, int __protocol, int __fds[2]) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBbind\fP (int __fd, \fB__CONST_SOCKADDR_ARG\fP __addr, socklen_t __len) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBgetsockname\fP (int __fd, \fB__SOCKADDR_ARG\fP __addr, socklen_t *__restrict __len) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBconnect\fP (int __fd, \fB__CONST_SOCKADDR_ARG\fP __addr, socklen_t __len)"
.br
.ti -1c
.RI "int \fBgetpeername\fP (int __fd, \fB__SOCKADDR_ARG\fP __addr, socklen_t *__restrict __len) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fBssize_t\fP \fBsend\fP (int __fd, __const void *__buf, \fBsize_t\fP __n, int __flags)"
.br
.ti -1c
.RI "\fBssize_t\fP \fBrecv\fP (int __fd, void *__buf, \fBsize_t\fP __n, int __flags)"
.br
.ti -1c
.RI "\fBssize_t\fP \fBsendto\fP (int __fd, __const void *__buf, \fBsize_t\fP __n, int __flags, \fB__CONST_SOCKADDR_ARG\fP __addr, socklen_t __addr_len)"
.br
.ti -1c
.RI "\fBssize_t\fP \fBrecvfrom\fP (int __fd, void *__restrict __buf, \fBsize_t\fP __n, int __flags, \fB__SOCKADDR_ARG\fP __addr, socklen_t *__restrict __addr_len)"
.br
.ti -1c
.RI "\fBssize_t\fP \fBsendmsg\fP (int __fd, __const struct \fBmsghdr\fP *__message, int __flags)"
.br
.ti -1c
.RI "\fBssize_t\fP \fBrecvmsg\fP (int __fd, struct \fBmsghdr\fP *__message, int __flags)"
.br
.ti -1c
.RI "int \fBgetsockopt\fP (int __fd, int __level, int __optname, void *__restrict __optval, socklen_t *__restrict __optlen) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsetsockopt\fP (int __fd, int __level, int __optname, __const void *__optval, socklen_t __optlen) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBlisten\fP (int __fd, int __n) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBaccept\fP (int __fd, \fB__SOCKADDR_ARG\fP __addr, socklen_t *__restrict __addr_len)"
.br
.ti -1c
.RI "int \fBshutdown\fP (int __fd, int __how) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsockatmark\fP (int __fd) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBisfdtype\fP (int __fd, int __fdtype) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fBuint32_t\fP \fBntohl\fP (\fBuint32_t\fP __netlong) __attribute__((__nothrow__)) __attribute__((__const__))"
.br
.ti -1c
.RI "\fBuint16_t\fP \fBntohs\fP (\fBuint16_t\fP __netshort) __attribute__((__nothrow__)) __attribute__((__const__))"
.br
.ti -1c
.RI "\fBuint32_t\fP \fBhtonl\fP (\fBuint32_t\fP __hostlong) __attribute__((__nothrow__)) __attribute__((__const__))"
.br
.ti -1c
.RI "\fBuint16_t\fP \fBhtons\fP (\fBuint16_t\fP __hostshort) __attribute__((__nothrow__)) __attribute__((__const__))"
.br
.ti -1c
.RI "int \fBbindresvport\fP (int __sockfd, struct \fBsockaddr_in\fP *__sock_in) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBbindresvport6\fP (int __sockfd, struct \fBsockaddr_in6\fP *__sock_in) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_option_space\fP (int __nbytes) __attribute__((__nothrow__)) __attribute__((__deprecated__))"
.br
.ti -1c
.RI "int \fBinet6_option_init\fP (void *__bp, struct \fBcmsghdr\fP **__cmsgp, int __type) __attribute__((__nothrow__)) __attribute__((__deprecated__))"
.br
.ti -1c
.RI "int \fBinet6_option_append\fP (struct \fBcmsghdr\fP *__cmsg, __const \fBuint8_t\fP *__typep, int __multx, int __plusy) __attribute__((__nothrow__)) __attribute__((__deprecated__))"
.br
.ti -1c
.RI "\fBuint8_t\fP * \fBinet6_option_alloc\fP (struct \fBcmsghdr\fP *__cmsg, int __datalen, int __multx, int __plusy) __attribute__((__nothrow__)) __attribute__((__deprecated__))"
.br
.ti -1c
.RI "int \fBinet6_option_next\fP (__const struct \fBcmsghdr\fP *__cmsg, \fBuint8_t\fP **__tptrp) __attribute__((__nothrow__)) __attribute__((__deprecated__))"
.br
.ti -1c
.RI "int \fBinet6_option_find\fP (__const struct \fBcmsghdr\fP *__cmsg, \fBuint8_t\fP **__tptrp, int __type) __attribute__((__nothrow__)) __attribute__((__deprecated__))"
.br
.ti -1c
.RI "int \fBinet6_opt_init\fP (void *__extbuf, socklen_t __extlen) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_opt_append\fP (void *__extbuf, socklen_t __extlen, int __offset, \fBuint8_t\fP __type, socklen_t __len, \fBuint8_t\fP __align, void **__databufp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_opt_finish\fP (void *__extbuf, socklen_t __extlen, int __offset) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_opt_set_val\fP (void *__databuf, int __offset, void *__val, socklen_t __vallen) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_opt_next\fP (void *__extbuf, socklen_t __extlen, int __offset, \fBuint8_t\fP *__typep, socklen_t *__lenp, void **__databufp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_opt_find\fP (void *__extbuf, socklen_t __extlen, int __offset, \fBuint8_t\fP __type, socklen_t *__lenp, void **__databufp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_opt_get_val\fP (void *__databuf, int __offset, void *__val, socklen_t __vallen) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "socklen_t \fBinet6_rth_space\fP (int __type, int __segments) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "void * \fBinet6_rth_init\fP (void *__bp, socklen_t __bp_len, int __type, int __segments) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_rth_add\fP (void *__bp, __const struct \fBin6_addr\fP *__addr) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_rth_reverse\fP (__const void *__in, void *__out) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet6_rth_segments\fP (__const void *__bp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "struct \fBin6_addr\fP * \fBinet6_rth_getaddr\fP (__const void *__bp, int __index) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBgetipv4sourcefilter\fP (int __s, struct \fBin_addr\fP __interface_addr, struct \fBin_addr\fP __group, \fBuint32_t\fP *__fmode, \fBuint32_t\fP *__numsrc, struct \fBin_addr\fP *__slist) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsetipv4sourcefilter\fP (int __s, struct \fBin_addr\fP __interface_addr, struct \fBin_addr\fP __group, \fBuint32_t\fP __fmode, \fBuint32_t\fP __numsrc, __const struct \fBin_addr\fP *__slist) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBgetsourcefilter\fP (int __s, \fBuint32_t\fP __interface_addr, __const struct \fBsockaddr\fP *__group, socklen_t __grouplen, \fBuint32_t\fP *__fmode, \fBuint32_t\fP *__numsrc, struct \fBsockaddr_storage\fP *__slist) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsetsourcefilter\fP (int __s, \fBuint32_t\fP __interface_addr, __const struct \fBsockaddr\fP *__group, socklen_t __grouplen, \fBuint32_t\fP __fmode, \fBuint32_t\fP __numsrc, __const struct \fBsockaddr_storage\fP *__slist) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fBin_addr_t\fP \fBinet_addr\fP (__const char *__cp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fBin_addr_t\fP \fBinet_lnaof\fP (struct \fBin_addr\fP __in) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "struct \fBin_addr\fP \fBinet_makeaddr\fP (\fBin_addr_t\fP __net, \fBin_addr_t\fP __host) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fBin_addr_t\fP \fBinet_netof\fP (struct \fBin_addr\fP __in) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fBin_addr_t\fP \fBinet_network\fP (__const char *__cp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "char * \fBinet_ntoa\fP (struct \fBin_addr\fP __in) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet_pton\fP (int __af, __const char *__restrict __cp, void *__restrict __buf) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "__const char * \fBinet_ntop\fP (int __af, __const void *__restrict __cp, char *__restrict __buf, socklen_t __len) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet_aton\fP (__const char *__cp, struct \fBin_addr\fP *__inp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "char * \fBinet_neta\fP (\fBin_addr_t\fP __net, char *__buf, \fBsize_t\fP __len) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "char * \fBinet_net_ntop\fP (int __af, __const void *__cp, int __bits, char *__buf, \fBsize_t\fP __len) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBinet_net_pton\fP (int __af, __const char *__cp, void *__buf, \fBsize_t\fP __len) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "unsigned int \fBinet_nsap_addr\fP (__const char *__cp, unsigned char *__buf, int __len) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "char * \fBinet_nsap_ntoa\fP (int __len, __const unsigned char *__cp, char *__buf) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBgettimeofday\fP (struct \fBtimeval\fP *__restrict __tv, \fB__timezone_ptr_t\fP __tz) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBsettimeofday\fP (__const struct \fBtimeval\fP *__tv, __const struct \fBtimezone\fP *__tz) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBadjtime\fP (__const struct \fBtimeval\fP *__delta, struct \fBtimeval\fP *__olddelta) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBgetitimer\fP (\fB__itimer_which_t\fP __which, struct \fBitimerval\fP *__value) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsetitimer\fP (\fB__itimer_which_t\fP __which, __const struct \fBitimerval\fP *__restrict __new, struct \fBitimerval\fP *__restrict __old) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fButimes\fP (__const char *__file, __const struct \fBtimeval\fP __tvp[2]) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBlutimes\fP (__const char *__file, __const struct \fBtimeval\fP __tvp[2]) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBfutimes\fP (int __fd, __const struct \fBtimeval\fP __tvp[2]) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBfutimesat\fP (int __fd, __const char *__file, __const struct \fBtimeval\fP __tvp[2]) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fBssize_t\fP \fBreadahead\fP (int __fd, \fB__off64_t\fP __offset, \fBsize_t\fP __count) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBsync_file_range\fP (int __fd, \fB__off64_t\fP __from, \fB__off64_t\fP __to, unsigned int __flags)"
.br
.ti -1c
.RI "int \fBvmsplice\fP (int __fdout, const struct \fBiovec\fP *__iov, \fBsize_t\fP __count, unsigned int __flags)"
.br
.ti -1c
.RI "int \fBsplice\fP (int __fdin, \fB__off64_t\fP *__offin, int __fdout, \fB__off64_t\fP *__offout, \fBsize_t\fP __len, unsigned int __flags) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBtee\fP (int __fdin, int __fdout, \fBsize_t\fP __len, unsigned int __flags) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBstat\fP (__const char *__restrict __file, struct \fBstat\fP *__restrict __buf) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int \fBfstat\fP (int __fd, struct \fBstat\fP *__buf) __attribute__((__nothrow__)) __attribute__((__nonnull__(2)))"
.br
.ti -1c
.RI "int \fBstat64\fP (__const char *__restrict __file, struct \fBstat64\fP *__restrict __buf) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int \fBfstat64\fP (int __fd, struct \fBstat64\fP *__buf) __attribute__((__nothrow__)) __attribute__((__nonnull__(2)))"
.br
.ti -1c
.RI "int \fBfstatat\fP (int __fd, __const char *__restrict __file, struct \fBstat\fP *__restrict __buf, int __flag) __attribute__((__nothrow__)) __attribute__((__nonnull__(2"
.br
.ti -1c
.RI "int int \fBfstatat64\fP (int __fd, __const char *__restrict __file, struct \fBstat64\fP *__restrict __buf, int __flag) __attribute__((__nothrow__)) __attribute__((__nonnull__(2"
.br
.ti -1c
.RI "int int int \fBlstat\fP (__const char *__restrict __file, struct \fBstat\fP *__restrict __buf) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int \fBlstat64\fP (__const char *__restrict __file, struct \fBstat64\fP *__restrict __buf) __attribute__((__nothrow__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int int \fBchmod\fP (__const char *__file, \fB__mode_t\fP __mode) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBlchmod\fP (__const char *__file, \fB__mode_t\fP __mode) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBfchmod\fP (int __fd, \fB__mode_t\fP __mode) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBfchmodat\fP (int __fd, __const char *__file, \fB__mode_t\fP mode, int __flag) __attribute__((__nothrow__)) __attribute__((__nonnull__(2)))"
.br
.ti -1c
.RI "\fB__mode_t\fP \fBumask\fP (\fB__mode_t\fP __mask) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "\fB__mode_t\fP \fBgetumask\fP (void)"
.br
.ti -1c
.RI "int \fBfcntl\fP (int __fd, int __cmd,...)"
.br
.ti -1c
.RI "int \fBopen\fP (__const char *__file, int __oflag,...) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBopen64\fP (__const char *__file, int __oflag,...) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBopenat\fP (int __fd, __const char *__file, int __oflag,...) __attribute__((__nonnull__(2)))"
.br
.ti -1c
.RI "int \fBopenat64\fP (int __fd, __const char *__file, int __oflag,...) __attribute__((__nonnull__(2)))"
.br
.ti -1c
.RI "int \fBcreat\fP (__const char *__file, \fB__mode_t\fP __mode) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBcreat64\fP (__const char *__file, \fB__mode_t\fP __mode) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBposix_fadvise\fP (int __fd, \fB__off_t\fP __offset, \fB__off_t\fP __len, int __advise) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBposix_fadvise64\fP (int __fd, \fB__off64_t\fP __offset, \fB__off64_t\fP __len, int __advise) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBposix_fallocate\fP (int __fd, \fB__off_t\fP __offset, \fB__off_t\fP __len)"
.br
.ti -1c
.RI "int \fBposix_fallocate64\fP (int __fd, \fB__off64_t\fP __offset, \fB__off64_t\fP __len)"
.br
.ti -1c
.RI "int \fBflock\fP (int __fd, int __operation) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "void \fB__assert_fail\fP (__const char *__assertion, __const char *__file, unsigned int __line, __const char *__function) __attribute__((__nothrow__)) __attribute__((__noreturn__))"
.br
.ti -1c
.RI "void \fB__assert_perror_fail\fP (int __errnum, __const char *__file, unsigned int __line, __const char *__function) __attribute__((__nothrow__)) __attribute__((__noreturn__))"
.br
.ti -1c
.RI "void \fB__assert\fP (const char *__assertion, const char *__file, int __line) __attribute__((__nothrow__)) __attribute__((__noreturn__))"
.br
.ti -1c
.RI "int * \fB__errno_location\fP (void)"
.br
.ti -1c
.RI "__const unsigned short int ** \fB__ctype_b_loc\fP (void)"
.br
.ti -1c
.RI "\fBDIR\fP * \fBopendir\fP (__const char *__name) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "\fBDIR\fP * \fBfdopendir\fP (int __fd)"
.br
.ti -1c
.RI "int \fBclosedir\fP (\fBDIR\fP *__dirp) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "struct dirent * \fBreaddir\fP (\fBDIR\fP *__dirp) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "struct \fBdirent64\fP * \fBreaddir64\fP (\fBDIR\fP *__dirp) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBreaddir_r\fP (\fBDIR\fP *__restrict __dirp, struct dirent *__restrict __entry, struct dirent **__restrict __result) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int \fBreaddir64_r\fP (\fBDIR\fP *__restrict __dirp, struct \fBdirent64\fP *__restrict __entry, struct \fBdirent64\fP **__restrict __result) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int void \fBrewinddir\fP (\fBDIR\fP *__dirp) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "void \fBseekdir\fP (\fBDIR\fP *__dirp, long int __pos) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "long int \fBtelldir\fP (\fBDIR\fP *__dirp) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBdirfd\fP (\fBDIR\fP *__dirp) __attribute__((__nothrow__)) __attribute__((__nonnull__(1)))"
.br
.ti -1c
.RI "int \fBscandir\fP (__const char *__restrict __dir, struct dirent ***__restrict __namelist, int(*__selector)(__const struct dirent *), int(*__cmp)(__const void *, __const void *)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int \fBscandir64\fP (__const char *__restrict __dir, struct \fBdirent64\fP ***__restrict __namelist, int(*__selector)(__const struct \fBdirent64\fP *), int(*__cmp)(__const void *, __const void *)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int \fBalphasort\fP (__const void *__e1, __const void *__e2) __attribute__((__nothrow__)) __attribute__((__pure__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int \fBalphasort64\fP (__const void *__e1, __const void *__e2) __attribute__((__nothrow__)) __attribute__((__pure__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int int \fBversionsort\fP (__const void *__e1, __const void *__e2) __attribute__((__nothrow__)) __attribute__((__pure__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int int int \fBversionsort64\fP (__const void *__e1, __const void *__e2) __attribute__((__nothrow__)) __attribute__((__pure__)) __attribute__((__nonnull__(1"
.br
.ti -1c
.RI "int int int int int int \fB__ssize_t\fP \fBgetdirentries\fP (int __fd, char *__restrict __buf, \fBsize_t\fP __nbytes, \fB__off_t\fP *__restrict __basep) __attribute__((__nothrow__)) __attribute__((__nonnull__(2"
.br
.ti -1c
.RI "int int int int int int \fB__ssize_t\fP \fB__ssize_t\fP \fBgetdirentries64\fP (int __fd, char *__restrict __buf, \fBsize_t\fP __nbytes, \fB__off64_t\fP *__restrict __basep) __attribute__((__nothrow__)) __attribute__((__nonnull__(2"
.br
.ti -1c
.RI "int int int int int int \fB__ssize_t\fP \fB__ssize_t\fP char * \fBdirname\fP (char *__path) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "char * \fB__xpg_basename\fP (char *__path) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "void \fB_IO_cookie_init\fP (struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, \fB_IO_cookie_io_functions_t\fP __fns)"
.br
.ti -1c
.RI "int \fB__underflow\fP (\fB_IO_FILE\fP *)"
.br
.ti -1c
.RI "int \fB__uflow\fP (\fB_IO_FILE\fP *)"
.br
.ti -1c
.RI "int \fB__overflow\fP (\fB_IO_FILE\fP *, int)"
.br
.ti -1c
.RI "\fBwint_t\fP \fB__wunderflow\fP (\fB_IO_FILE\fP *)"
.br
.ti -1c
.RI "\fBwint_t\fP \fB__wuflow\fP (\fB_IO_FILE\fP *)"
.br
.ti -1c
.RI "\fBwint_t\fP \fB__woverflow\fP (\fB_IO_FILE\fP *, \fBwint_t\fP)"
.br
.ti -1c
.RI "int \fB_IO_getc\fP (\fB_IO_FILE\fP *__fp)"
.br
.ti -1c
.RI "int \fB_IO_putc\fP (int __c, \fB_IO_FILE\fP *__fp)"
.br
.ti -1c
.RI "int \fB_IO_feof\fP (\fB_IO_FILE\fP *__fp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fB_IO_ferror\fP (\fB_IO_FILE\fP *__fp) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fB_IO_peekc_locked\fP (\fB_IO_FILE\fP *__fp)"
.br
.ti -1c
.RI "void \fB_IO_flockfile\fP (\fB_IO_FILE\fP *)"
.br
.ti -1c
.RI "void \fBsetpwent\fP (void)"
.br
.ti -1c
.RI "void \fBendpwent\fP (void)"
.br
.ti -1c
.RI "struct passwd * \fBgetpwent\fP (void)"
.br
.ti -1c
.RI "struct passwd * \fBfgetpwent\fP (\fBFILE\fP *__stream)"
.br
.ti -1c
.RI "int \fBputpwent\fP (__const struct passwd *__restrict __p, \fBFILE\fP *__restrict __f)"
.br
.ti -1c
.RI "struct passwd * \fBgetpwuid\fP (\fB__uid_t\fP __uid)"
.br
.ti -1c
.RI "struct passwd * \fBgetpwnam\fP (__const char *__name)"
.br
.ti -1c
.RI "int \fBgetpwent_r\fP (struct passwd *__restrict __resultbuf, char *__restrict __buffer, \fBsize_t\fP __buflen, struct passwd **__restrict __result)"
.br
.ti -1c
.RI "int \fBgetpwuid_r\fP (\fB__uid_t\fP __uid, struct passwd *__restrict __resultbuf, char *__restrict __buffer, \fBsize_t\fP __buflen, struct passwd **__restrict __result)"
.br
.ti -1c
.RI "int \fBgetpwnam_r\fP (__const char *__restrict __name, struct passwd *__restrict __resultbuf, char *__restrict __buffer, \fBsize_t\fP __buflen, struct passwd **__restrict __result)"
.br
.ti -1c
.RI "int \fBfgetpwent_r\fP (\fBFILE\fP *__restrict __stream, struct passwd *__restrict __resultbuf, char *__restrict __buffer, \fBsize_t\fP __buflen, struct passwd **__restrict __result)"
.br
.ti -1c
.RI "int \fBgetpw\fP (\fB__uid_t\fP __uid, char *__buffer)"
.br
.ti -1c
.RI "void \fBupk_uuid_seed_random\fP (void)"
.br
.RI "\fIseed random number pool used by upk_gen_uuid_bytes. \fP"
.ti -1c
.RI "int \fBupk_uuid_open_random\fP (void)"
.br
.RI "\fIopen random device, prefering /dev/urandom, but also trying /dev/random if urandom is unavailable. \fP"
.ti -1c
.RI "void \fBupk_gen_uuid_bytes\fP (\fBupk_uuid_t\fP *buf)"
.br
.RI "\fIcollect and/or generate 16 bytes of random data. \fP"
.ti -1c
.RI "void \fBupk_uuid_to_string\fP (char *buf, const \fBupk_uuid_t\fP *uuid)"
.br
.RI "\fIconvert uuid to string and place in buf. \fP"
.ti -1c
.RI "_Bool \fBis_valid_upk_uuid_string\fP (const char *string)"
.br
.RI "\fItest if a given string is a valid uuid string. \fP"
.ti -1c
.RI "void \fBupk_string_to_uuid\fP (\fBupk_uuid_t\fP *uuid, const char *string)"
.br
.RI "\fIconvert uuid string into uuid structure. \fP"
.ti -1c
.RI "const char * \fBupk_strerror\fP (\fBupk_errno_t\fP err)"
.br
.ti -1c
.RI "void \fBupk_report_error\fP (\fBupk_errno_t\fP err)"
.br
.ti -1c
.RI "void \fBupk_report_error_msg\fP (\fBupk_errno_t\fP err, const char *msg)"
.br
.ti -1c
.RI "\fBerr_rpt_callback_t\fP \fBupk_reg_error_callback\fP (\fBerr_rpt_callback_t\fP func)"
.br
.ti -1c
.RI "\fBerr_rpt_msg_callback_t\fP \fBupk_reg_err_msg_callback\fP (\fBerr_rpt_msg_callback_t\fP func)"
.br
.ti -1c
.RI "\fBdiag_output_callback_t\fP \fBupk_reg_diag_callback\fP (\fBdiag_output_callback_t\fP func)"
.br
.ti -1c
.RI "int32_t \fB_upk_fatal\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "int32_t \fB_upk_alert\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "int32_t \fB_upk_crit\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "int32_t \fB_upk_error\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "int32_t \fB_upk_warn\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "int32_t \fB_upk_notice\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "int32_t \fB_upk_info\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "int32_t \fB_upk_verbose\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "int32_t \fB_upk_debug0\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "int32_t \fB_upk_debug1\fP (const char *loc, const char *fmt,...)"
.br
.ti -1c
.RI "void \fBupk_svc_desc_free\fP (\fBupk_svc_desc_t\fP *svc)"
.br
.ti -1c
.RI "void \fBupk_svclist_free\fP (\fBupk_svc_desc_meta_t\fP *svclist)"
.br
.ti -1c
.RI "void \fBupk_ctrlconf_free\fP (\fBupk_controller_config_t\fP *cfg)"
.br
.ti -1c
.RI "void \fBupk_ctrl_free_config\fP (void)"
.br
.ti -1c
.RI "void \fBupk_svcconf_pack\fP (\fBupk_controller_config_t\fP *cfg, const char *json_string)"
.br
.ti -1c
.RI "void \fBupk_ctrl_load_config\fP (void)"
.br
.ti -1c
.RI "void \fBupk_svc_desc_clear\fP (\fBupk_svc_desc_t\fP *svc)"
.br
.ti -1c
.RI "char * \fBupk_concat_svcid\fP (char *dest, const char *pkg, const char *name)"
.br
.ti -1c
.RI "char * \fBupk_svc_id\fP (char *dest, \fBupk_svc_desc_t\fP *svc)"
.br
.ti -1c
.RI "void \fBupk_parse_svc_id\fP (char *key, \fBupk_svc_desc_t\fP *svc)"
.br
.ti -1c
.RI "struct json_object * \fBupk_svclist_to_json_obj\fP (\fBupk_svc_desc_meta_t\fP *svclist)"
.br
.ti -1c
.RI "struct json_object * \fBupk_svc_desc_to_json_obj\fP (\fBupk_svc_desc_t\fP *svc)"
.br
.ti -1c
.RI "char * \fBupk_json_serialize_svc_config\fP (\fBupk_svc_desc_t\fP *svc, \fBupk_json_data_output_opts_t\fP opts)"
.br
.ti -1c
.RI "void \fBupk_overlay_svcconf_values\fP (\fBupk_svc_desc_t\fP *dest, \fBupk_svc_desc_t\fP *high)"
.br
.ti -1c
.RI "void \fBupk_overlay_ctrlconf_values\fP (\fBupk_controller_config_t\fP *dest, \fBupk_controller_config_t\fP *high)"
.br
.ti -1c
.RI "void \fBupk_finalize_svc_desc\fP (\fBupk_svc_desc_t\fP *dest, \fBupk_svc_desc_t\fP *orig)"
.br
.ti -1c
.RI "void \fBupk_load_runtime_service_file\fP (const char *filename)"
.br
.ti -1c
.RI "void \fBupk_load_runtime_services\fP (void)"
.br
.ti -1c
.RI "void \fBupk_create_crc32_table\fP (\fBuint32_t\fP crc_table[256])"
.br
.ti -1c
.RI "\fBuint32_t\fP \fBupk_crc32\fP (unsigned char *block, \fBuint32_t\fP len)"
.br
.ti -1c
.RI "_Bool \fBupk_verify_crc32\fP (unsigned char *block, \fBuint32_t\fP crc32, \fBuint32_t\fP len)"
.br
.ti -1c
.RI "\fBupk_pkt_buf_t\fP * \fBupk_serialize_packet\fP (\fBupk_packet_t\fP *__upk_data_ptr)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_deserialize_packet\fP (\fBupk_pkt_buf_t\fP *__upk_buf)"
.br
.ti -1c
.RI "void * \fBupk_deserialize_req_preamble\fP (\fBupk_pkt_buf_t\fP *__upk_buf)"
.br
.ti -1c
.RI "\fBupk_pkt_buf_t\fP * \fBupk_serialize_req_preamble\fP (void *__upk_data_ptr, \fBsize_t\fP __upk_data_len)"
.br
.ti -1c
.RI "void * \fBupk_deserialize_repl_preamble\fP (\fBupk_pkt_buf_t\fP *__upk_buf)"
.br
.ti -1c
.RI "\fBupk_pkt_buf_t\fP * \fBupk_serialize_repl_preamble\fP (void *__upk_data_ptr, \fBsize_t\fP __upk_data_len)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_pkt\fP (void *payload, \fBuint32_t\fP payload_len, \fBupk_pkttype_t\fP pkttype, \fBuint32_t\fP proto_ver)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_preamble\fP (\fBupk_protocol_handle_t\fP *handle, char *client_name)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_seq_start\fP (\fBupk_protocol_handle_t\fP *handle, \fBupk_msgtype_t\fP seq_type, \fBuint32_t\fP count)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_seq_end\fP (\fBupk_protocol_handle_t\fP *handle, _Bool commit)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_action\fP (\fBupk_protocol_handle_t\fP *handle, char *svc_id, char *action)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_signal\fP (\fBupk_protocol_handle_t\fP *handle, char *svc_id, \fBupk_signal_t\fP signal, _Bool signal_sid, _Bool signal_pgrp)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_list\fP (\fBupk_protocol_handle_t\fP *handle)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_status\fP (\fBupk_protocol_handle_t\fP *handle, char *svc_id, \fBuint32_t\fP restart_window_seconds)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_subscribe\fP (\fBupk_protocol_handle_t\fP *handle, char *svc_id, _Bool all_svcs)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_unsubscribe\fP (\fBupk_protocol_handle_t\fP *handle, char *svc_id, _Bool all_svcs)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_req_disconnect\fP (\fBupk_protocol_handle_t\fP *handle)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_repl_preamble\fP (\fBupk_protocol_handle_t\fP *handle, \fBuint32_t\fP best_version)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_repl_seq_start\fP (\fBupk_protocol_handle_t\fP *handle, \fBupk_msgtype_t\fP seq_type, \fBuint32_t\fP count)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_repl_seq_end\fP (\fBupk_protocol_handle_t\fP *handle, _Bool commit)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_repl_result\fP (\fBupk_protocol_handle_t\fP *handle, char *msg, _Bool successful)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_repl_listing\fP (\fBupk_protocol_handle_t\fP *handle, char *svc_id)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_repl_svcinfo\fP (\fBupk_protocol_handle_t\fP *handle, char *svc_id, \fBupk_svcinfo_t\fP *svcinfo)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_repl_ack\fP (\fBupk_protocol_handle_t\fP *handle)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_repl_error\fP (\fBupk_protocol_handle_t\fP *handle, char *svc_id, \fBupk_errno_t\fP uerrno, char *errmsg, \fBupk_errlevel_t\fP errlvl)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_pub_publication\fP (\fBupk_protocol_handle_t\fP *handle)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBupk_create_pub_cancelation\fP (\fBupk_protocol_handle_t\fP *handle)"
.br
.ti -1c
.RI "void \fBupk_pkt_free\fP (\fBupk_packet_t\fP *pkt)"
.br
.ti -1c
.RI "\fBupk_msgtype_t\fP \fBupk_get_msgtype\fP (\fBupk_packet_t\fP *pkt)"
.br
.ti -1c
.RI "\fBsize_t\fP \fBupk_get_msgsize\fP (\fBupk_msgtype_t\fP type)"
.br
.ti -1c
.RI "\fBupk_pkt_buf_t\fP * \fBv0_serialize_payload\fP (\fBupk_packet_t\fP *pkt)"
.br
.ti -1c
.RI "void * \fBv0_deserialize_payload\fP (\fBupk_pkt_buf_t\fP *__upk_buf, \fBupk_pkttype_t\fP pkttype)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_seq_start\fP (\fBupk_msgtype_t\fP msg_seq_type, \fBuint32_t\fP msg_seq_count)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_seq_end\fP (_Bool commit)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_action\fP (char *svc_id, char *action)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_signal\fP (char *svc_id, \fBupk_signal_t\fP signal, _Bool signal_sid, _Bool signal_pgrp)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_list\fP (void)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_status\fP (char *svc_id, \fBuint32_t\fP restart_window_seconds)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_subscribe\fP (char *svc_id, _Bool all_svcs)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_unsubscribe\fP (char *svc_id, _Bool all_svcs)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_disconnect\fP (void)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_repl_seq_start\fP (\fBupk_msgtype_t\fP msg_seq_type, \fBuint32_t\fP msg_seq_count)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_repl_seq_end\fP (_Bool commit)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_repl_result\fP (char *msg, _Bool successful)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_repl_listing\fP (char *svc_id)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_repl_svcinfo\fP (char *svc_id, \fBv0_svcinfo_t\fP *svcinfo)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_repl_ack\fP (void)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_repl_error\fP (char *svc_id, \fBupk_errno_t\fP uerrno, char *errmsg, \fBupk_errlevel_t\fP errlvl)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_pub_publication\fP (void)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_pub_cancelation\fP (void)"
.br
.ti -1c
.RI "void \fBv0_free_payload\fP (\fBupk_packet_t\fP *pkt)"
.br
.ti -1c
.RI "int \fBupk_domain_socket_connect\fP (const char *sockpath)"
.br
.RI "\fIconnect to a domain socket. \fP"
.ti -1c
.RI "void \fBupk_read_packets\fP (\fBupk_conn_handle_meta_t\fP *handles)"
.br
.RI "\fIread any packets from the handle handles->thisp, and call read-callbacks. \fP"
.ti -1c
.RI "void \fBupk_queue_packet\fP (\fBupk_conn_handle_meta_t\fP *handles, \fBupk_conn_handle_t\fP *handle, \fBupk_packet_t\fP *pkt, \fBupk_net_callback_t\fP after_write_callback)"
.br
.RI "\fIenqueue a packet for sending \fP"
.ti -1c
.RI "void \fBupk_write_packets\fP (\fBupk_conn_handle_meta_t\fP *handles)"
.br
.RI "\fIwrite the packets in the writeq for handles->thisp, and call any write callbacks \fP"
.ti -1c
.RI "void \fBupk_disconnect_handle\fP (\fBupk_conn_handle_meta_t\fP *handles)"
.br
.RI "\fIdisconnect the ->thisp handle in handles. \fP"
.ti -1c
.RI "_Bool \fBupk_net_add_socket_handle\fP (\fBupk_conn_handle_meta_t\fP *handles, int fd)"
.br
.RI "\fIadd a new socket handle to the handles list \fP"
.ti -1c
.RI "void \fBupk_net_event_dispatcher\fP (\fBupk_conn_handle_meta_t\fP *handles, double poll_ival)"
.br
.RI "\fIThe event dispatcher, called via an event-loop. \fP"
.ti -1c
.RI "void \fBupk_net_flush_closed_sockets\fP (\fBupk_conn_handle_meta_t\fP *handles)"
.br
.RI "\fIiterate through the list of handles, and prune any that are no longer valid. \fP"
.ti -1c
.RI "int \fBupk_net_block_until_msg\fP (\fBupk_conn_handle_meta_t\fP *handles, double poll_ival, struct \fBtimeval\fP *\fBtimeout\fP)"
.br
.RI "\fIblock until a complete message is received, up to timeout. \fP"
.ti -1c
.RI "\fBupk_conn_handle_meta_t\fP * \fBupk_net_conn_handles_init\fP (void *userdata, void(*userdata_free_func)(void *ptr))"
.br
.RI "\fIinitialize connection handles \fP"
.ti -1c
.RI "void \fBupk_net_shutdown_callback\fP (\fBupk_conn_handle_meta_t\fP *handles, \fBupk_payload_t\fP *msg)"
.br
.RI "\fIwrapper around upk-disconnect_handle for use as a callback. \fP"
.ti -1c
.RI "\fBupk_net_state_t\fP * \fBupk_net_get_global_state\fP (\fBupk_conn_handle_meta_t\fP *handles)"
.br
.RI "\fIextract the nested global_state component from the generic (void *) userdata element \fP"
.ti -1c
.RI "void \fBupk_callback_stack_push\fP (\fBupk_conn_handle_t\fP *handle, \fBupk_net_cb_stk_t\fP *state)"
.br
.RI "\fIpush a callback-stack state element onto the callback stack for a handle. \fP"
.ti -1c
.RI "void \fBupk_callback_stack_pop\fP (\fBupk_conn_handle_t\fP *handle)"
.br
.RI "\fIpop the top element off the callback-stack for a handle. \fP"
.ti -1c
.RI "\fBupk_payload_t\fP * \fBupk_clnet_serial_request\fP (\fBupk_conn_handle_meta_t\fP *ctrl, \fBupk_packet_t\fP *pkt)"
.br
.ti -1c
.RI "void \fBupk_clnet_req_preamble\fP (\fBupk_conn_handle_meta_t\fP *ctrl)"
.br
.ti -1c
.RI "\fBupk_conn_handle_meta_t\fP * \fBupk_clnet_ctrl_connect\fP (void)"
.br
.ti -1c
.RI "void \fBupk_clnet_req_disconnect\fP (\fBupk_conn_handle_meta_t\fP *ctrl)"
.br
.ti -1c
.RI "void \fBupk_clnet_ctrl_disconnect\fP (\fBupk_conn_handle_meta_t\fP *ctrl)"
.br
.ti -1c
.RI "_Bool \fBupk_clnet_req_action\fP (\fBupk_conn_handle_meta_t\fP *ctrl, char *svc_id, char *action)"
.br
.ti -1c
.RI "_Bool \fBupkeeper_action_request\fP (char *service_id, char *action_name)"
.br
.ti -1c
.RI "_Bool \fBupkeeper_signal_request\fP (char *service_id, \fBupk_signal_t\fP signal)"
.br
.ti -1c
.RI "\fBupk_svcid_t\fP * \fBupkeeper_list_services\fP (void)"
.br
.ti -1c
.RI "\fBupk_svcinfo_t\fP \fBupkeeper_get_status\fP (char *service_id)"
.br
.ti -1c
.RI "_Bool \fBupkeeper_subscribe\fP (const char *svc_id)"
.br
.ti -1c
.RI "_Bool \fBupkeeper_subscribe_all\fP (void)"
.br
.ti -1c
.RI "char * \fBupk_clientid\fP (void)"
.br
.ti -1c
.RI "_Bool \fBupk_numeric_string\fP (const char *string, long *num)"
.br
.ti -1c
.RI "_Bool \fBupk_boolean_string\fP (const char *string, _Bool *val)"
.br
.ti -1c
.RI "void \fBupk_replace_string\fP (char **haystack, const char *needle, const char *repl)"
.br
.ti -1c
.RI "struct \fBtimeval\fP \fBupk_double_to_timeval\fP (long double rational)"
.br
.ti -1c
.RI "int \fBupk_rm_rf\fP (char *start_path)"
.br
.ti -1c
.RI "int \fBupk_mkdir_p\fP (const char *path)"
.br
.RI "\fIcreate a directory and any path components leading up to it. \fP"
.ti -1c
.RI "\fBclock_t\fP \fBclock\fP (void)"
.br
.ti -1c
.RI "void \fBsetgrent\fP (void)"
.br
.ti -1c
.RI "void \fBendgrent\fP (void)"
.br
.ti -1c
.RI "struct group * \fBgetgrent\fP (void)"
.br
.ti -1c
.RI "struct group * \fBfgetgrent\fP (\fBFILE\fP *__stream)"
.br
.ti -1c
.RI "int \fBputgrent\fP (__const struct group *__restrict __p, \fBFILE\fP *__restrict __f)"
.br
.ti -1c
.RI "struct group * \fBgetgrgid\fP (\fB__gid_t\fP __gid)"
.br
.ti -1c
.RI "struct group * \fBgetgrnam\fP (__const char *__name)"
.br
.ti -1c
.RI "int \fBgetgrent_r\fP (struct group *__restrict __resultbuf, char *__restrict __buffer, \fBsize_t\fP __buflen, struct group **__restrict __result)"
.br
.ti -1c
.RI "int \fBgetgrgid_r\fP (\fB__gid_t\fP __gid, struct group *__restrict __resultbuf, char *__restrict __buffer, \fBsize_t\fP __buflen, struct group **__restrict __result)"
.br
.ti -1c
.RI "int \fBgetgrnam_r\fP (__const char *__restrict __name, struct group *__restrict __resultbuf, char *__restrict __buffer, \fBsize_t\fP __buflen, struct group **__restrict __result)"
.br
.ti -1c
.RI "int \fBfgetgrent_r\fP (\fBFILE\fP *__restrict __stream, struct group *__restrict __resultbuf, char *__restrict __buffer, \fBsize_t\fP __buflen, struct group **__restrict __result)"
.br
.ti -1c
.RI "int \fBsetgroups\fP (\fBsize_t\fP __n, __const \fB__gid_t\fP *__groups) __attribute__((__nothrow__))"
.br
.ti -1c
.RI "int \fBgetgrouplist\fP (__const char *__user, \fB__gid_t\fP __group, \fB__gid_t\fP *__groups, int *__ngroups)"
.br
.ti -1c
.RI "int \fBinitgroups\fP (__const char *__user, \fB__gid_t\fP __group)"
.br
.ti -1c
.RI "const char * \fBsqlite3_libversion\fP (void)"
.br
.ti -1c
.RI "int \fBsqlite3_libversion_number\fP (void)"
.br
.ti -1c
.RI "int \fBsqlite3_close\fP (\fBsqlite3\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_exec\fP (\fBsqlite3\fP *, const char *sql, \fBsqlite3_callback\fP, void *, char **errmsg)"
.br
.ti -1c
.RI "\fBsqlite_int64\fP \fBsqlite3_last_insert_rowid\fP (\fBsqlite3\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_changes\fP (\fBsqlite3\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_total_changes\fP (\fBsqlite3\fP *)"
.br
.ti -1c
.RI "void \fBsqlite3_interrupt\fP (\fBsqlite3\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_complete\fP (const char *sql)"
.br
.ti -1c
.RI "int \fBsqlite3_complete16\fP (const void *sql)"
.br
.ti -1c
.RI "int \fBsqlite3_busy_handler\fP (\fBsqlite3\fP *, int(*)(void *, int), void *)"
.br
.ti -1c
.RI "int \fBsqlite3_busy_timeout\fP (\fBsqlite3\fP *, int ms)"
.br
.ti -1c
.RI "int \fBsqlite3_get_table\fP (\fBsqlite3\fP *, const char *sql, char ***resultp, int *nrow, int *ncolumn, char **errmsg)"
.br
.ti -1c
.RI "void \fBsqlite3_free_table\fP (char **result)"
.br
.ti -1c
.RI "char * \fBsqlite3_mprintf\fP (const char *,...)"
.br
.ti -1c
.RI "char * \fBsqlite3_vmprintf\fP (const char *, va_list)"
.br
.ti -1c
.RI "void \fBsqlite3_free\fP (char *z)"
.br
.ti -1c
.RI "char * \fBsqlite3_snprintf\fP (int, char *, const char *,...)"
.br
.ti -1c
.RI "int \fBsqlite3_set_authorizer\fP (\fBsqlite3\fP *, int(*xAuth)(void *, int, const char *, const char *, const char *, const char *), void *pUserData)"
.br
.ti -1c
.RI "void * \fBsqlite3_trace\fP (\fBsqlite3\fP *, void(*xTrace)(void *, const char *), void *)"
.br
.ti -1c
.RI "void * \fBsqlite3_profile\fP (\fBsqlite3\fP *, void(*xProfile)(void *, const char *, \fBsqlite_uint64\fP), void *)"
.br
.ti -1c
.RI "void \fBsqlite3_progress_handler\fP (\fBsqlite3\fP *, int, int(*)(void *), void *)"
.br
.ti -1c
.RI "void * \fBsqlite3_commit_hook\fP (\fBsqlite3\fP *, int(*)(void *), void *)"
.br
.ti -1c
.RI "int \fBsqlite3_open\fP (const char *filename, \fBsqlite3\fP **ppDb)"
.br
.ti -1c
.RI "int \fBsqlite3_open16\fP (const void *filename, \fBsqlite3\fP **ppDb)"
.br
.ti -1c
.RI "int \fBsqlite3_errcode\fP (\fBsqlite3\fP *db)"
.br
.ti -1c
.RI "const char * \fBsqlite3_errmsg\fP (\fBsqlite3\fP *)"
.br
.ti -1c
.RI "const void * \fBsqlite3_errmsg16\fP (\fBsqlite3\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_prepare\fP (\fBsqlite3\fP *db, const char *zSql, int nBytes, \fBsqlite3_stmt\fP **ppStmt, const char **pzTail)"
.br
.ti -1c
.RI "int \fBsqlite3_prepare16\fP (\fBsqlite3\fP *db, const void *zSql, int nBytes, \fBsqlite3_stmt\fP **ppStmt, const void **pzTail)"
.br
.ti -1c
.RI "int \fBsqlite3_bind_blob\fP (\fBsqlite3_stmt\fP *, int, const void *, int n, void(*)(void *))"
.br
.ti -1c
.RI "int \fBsqlite3_bind_double\fP (\fBsqlite3_stmt\fP *, int, double)"
.br
.ti -1c
.RI "int \fBsqlite3_bind_int\fP (\fBsqlite3_stmt\fP *, int, int)"
.br
.ti -1c
.RI "int \fBsqlite3_bind_int64\fP (\fBsqlite3_stmt\fP *, int, \fBsqlite_int64\fP)"
.br
.ti -1c
.RI "int \fBsqlite3_bind_null\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "int \fBsqlite3_bind_text\fP (\fBsqlite3_stmt\fP *, int, const char *, int n, void(*)(void *))"
.br
.ti -1c
.RI "int \fBsqlite3_bind_text16\fP (\fBsqlite3_stmt\fP *, int, const void *, int, void(*)(void *))"
.br
.ti -1c
.RI "int \fBsqlite3_bind_value\fP (\fBsqlite3_stmt\fP *, int, const \fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_bind_parameter_count\fP (\fBsqlite3_stmt\fP *)"
.br
.ti -1c
.RI "const char * \fBsqlite3_bind_parameter_name\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "int \fBsqlite3_bind_parameter_index\fP (\fBsqlite3_stmt\fP *, const char *zName)"
.br
.ti -1c
.RI "int \fBsqlite3_clear_bindings\fP (\fBsqlite3_stmt\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_column_count\fP (\fBsqlite3_stmt\fP *pStmt)"
.br
.ti -1c
.RI "const char * \fBsqlite3_column_name\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "const void * \fBsqlite3_column_name16\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "const char * \fBsqlite3_column_database_name\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "const void * \fBsqlite3_column_database_name16\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "const char * \fBsqlite3_column_table_name\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "const void * \fBsqlite3_column_table_name16\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "const char * \fBsqlite3_column_origin_name\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "const void * \fBsqlite3_column_origin_name16\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "const char * \fBsqlite3_column_decltype\fP (\fBsqlite3_stmt\fP *, int i)"
.br
.ti -1c
.RI "const void * \fBsqlite3_column_decltype16\fP (\fBsqlite3_stmt\fP *, int)"
.br
.ti -1c
.RI "int \fBsqlite3_step\fP (\fBsqlite3_stmt\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_data_count\fP (\fBsqlite3_stmt\fP *pStmt)"
.br
.ti -1c
.RI "const void * \fBsqlite3_column_blob\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "int \fBsqlite3_column_bytes\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "int \fBsqlite3_column_bytes16\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "double \fBsqlite3_column_double\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "int \fBsqlite3_column_int\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "\fBsqlite_int64\fP \fBsqlite3_column_int64\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "const unsigned char * \fBsqlite3_column_text\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "const void * \fBsqlite3_column_text16\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "int \fBsqlite3_column_type\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "int \fBsqlite3_column_numeric_type\fP (\fBsqlite3_stmt\fP *, int iCol)"
.br
.ti -1c
.RI "int \fBsqlite3_finalize\fP (\fBsqlite3_stmt\fP *pStmt)"
.br
.ti -1c
.RI "int \fBsqlite3_reset\fP (\fBsqlite3_stmt\fP *pStmt)"
.br
.ti -1c
.RI "int \fBsqlite3_create_function\fP (\fBsqlite3\fP *, const char *zFunctionName, int nArg, int eTextRep, void *, void(*xFunc)(\fBsqlite3_context\fP *, int, \fBsqlite3_value\fP **), void(*xStep)(\fBsqlite3_context\fP *, int, \fBsqlite3_value\fP **), void(*xFinal)(\fBsqlite3_context\fP *))"
.br
.ti -1c
.RI "int \fBsqlite3_create_function16\fP (\fBsqlite3\fP *, const void *zFunctionName, int nArg, int eTextRep, void *, void(*xFunc)(\fBsqlite3_context\fP *, int, \fBsqlite3_value\fP **), void(*xStep)(\fBsqlite3_context\fP *, int, \fBsqlite3_value\fP **), void(*xFinal)(\fBsqlite3_context\fP *))"
.br
.ti -1c
.RI "int \fBsqlite3_aggregate_count\fP (\fBsqlite3_context\fP *)"
.br
.ti -1c
.RI "const void * \fBsqlite3_value_blob\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_value_bytes\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_value_bytes16\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "double \fBsqlite3_value_double\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_value_int\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "\fBsqlite_int64\fP \fBsqlite3_value_int64\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "const unsigned char * \fBsqlite3_value_text\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "const void * \fBsqlite3_value_text16\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "const void * \fBsqlite3_value_text16le\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "const void * \fBsqlite3_value_text16be\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_value_type\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_value_numeric_type\fP (\fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "void * \fBsqlite3_aggregate_context\fP (\fBsqlite3_context\fP *, int nBytes)"
.br
.ti -1c
.RI "void * \fBsqlite3_user_data\fP (\fBsqlite3_context\fP *)"
.br
.ti -1c
.RI "void * \fBsqlite3_get_auxdata\fP (\fBsqlite3_context\fP *, int)"
.br
.ti -1c
.RI "void \fBsqlite3_set_auxdata\fP (\fBsqlite3_context\fP *, int, void *, void(*)(void *))"
.br
.ti -1c
.RI "void \fBsqlite3_result_blob\fP (\fBsqlite3_context\fP *, const void *, int, void(*)(void *))"
.br
.ti -1c
.RI "void \fBsqlite3_result_double\fP (\fBsqlite3_context\fP *, double)"
.br
.ti -1c
.RI "void \fBsqlite3_result_error\fP (\fBsqlite3_context\fP *, const char *, int)"
.br
.ti -1c
.RI "void \fBsqlite3_result_error16\fP (\fBsqlite3_context\fP *, const void *, int)"
.br
.ti -1c
.RI "void \fBsqlite3_result_int\fP (\fBsqlite3_context\fP *, int)"
.br
.ti -1c
.RI "void \fBsqlite3_result_int64\fP (\fBsqlite3_context\fP *, \fBsqlite_int64\fP)"
.br
.ti -1c
.RI "void \fBsqlite3_result_null\fP (\fBsqlite3_context\fP *)"
.br
.ti -1c
.RI "void \fBsqlite3_result_text\fP (\fBsqlite3_context\fP *, const char *, int, void(*)(void *))"
.br
.ti -1c
.RI "void \fBsqlite3_result_text16\fP (\fBsqlite3_context\fP *, const void *, int, void(*)(void *))"
.br
.ti -1c
.RI "void \fBsqlite3_result_text16le\fP (\fBsqlite3_context\fP *, const void *, int, void(*)(void *))"
.br
.ti -1c
.RI "void \fBsqlite3_result_text16be\fP (\fBsqlite3_context\fP *, const void *, int, void(*)(void *))"
.br
.ti -1c
.RI "void \fBsqlite3_result_value\fP (\fBsqlite3_context\fP *, \fBsqlite3_value\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_create_collation\fP (\fBsqlite3\fP *, const char *zName, int eTextRep, void *, int(*xCompare)(void *, int, const void *, int, const void *))"
.br
.ti -1c
.RI "int \fBsqlite3_create_collation16\fP (\fBsqlite3\fP *, const char *zName, int eTextRep, void *, int(*xCompare)(void *, int, const void *, int, const void *))"
.br
.ti -1c
.RI "int \fBsqlite3_collation_needed\fP (\fBsqlite3\fP *, void *, void(*)(void *, \fBsqlite3\fP *, int eTextRep, const char *))"
.br
.ti -1c
.RI "int \fBsqlite3_collation_needed16\fP (\fBsqlite3\fP *, void *, void(*)(void *, \fBsqlite3\fP *, int eTextRep, const void *))"
.br
.ti -1c
.RI "int \fBsqlite3_key\fP (\fBsqlite3\fP *db, const void *pKey, int nKey)"
.br
.ti -1c
.RI "int \fBsqlite3_rekey\fP (\fBsqlite3\fP *db, const void *pKey, int nKey)"
.br
.ti -1c
.RI "int \fBsqlite3_sleep\fP (int)"
.br
.ti -1c
.RI "int \fBsqlite3_expired\fP (\fBsqlite3_stmt\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_transfer_bindings\fP (\fBsqlite3_stmt\fP *, \fBsqlite3_stmt\fP *)"
.br
.ti -1c
.RI "int \fBsqlite3_global_recover\fP (void)"
.br
.ti -1c
.RI "int \fBsqlite3_get_autocommit\fP (\fBsqlite3\fP *)"
.br
.ti -1c
.RI "\fBsqlite3\fP * \fBsqlite3_db_handle\fP (\fBsqlite3_stmt\fP *)"
.br
.ti -1c
.RI "void * \fBsqlite3_update_hook\fP (\fBsqlite3\fP *, void(*)(void *, int, char const *, char const *, \fBsqlite_int64\fP), void *)"
.br
.ti -1c
.RI "void * \fBsqlite3_rollback_hook\fP (\fBsqlite3\fP *, void(*)(void *), void *)"
.br
.ti -1c
.RI "int \fBsqlite3_enable_shared_cache\fP (int)"
.br
.ti -1c
.RI "int \fBsqlite3_release_memory\fP (int)"
.br
.ti -1c
.RI "void \fBsqlite3_soft_heap_limit\fP (int)"
.br
.ti -1c
.RI "void \fBsqlite3_thread_cleanup\fP (void)"
.br
.ti -1c
.RI "int \fBsqlite3_table_column_metadata\fP (\fBsqlite3\fP *db, const char *zDbName, const char *zTableName, const char *zColumnName, char const **pzDataType, char const **pzCollSeq, int *pNotNull, int *pPrimaryKey, int *pAutoinc)"
.br
.ti -1c
.RI "int \fBsocket_setup\fP (const char *sock_path)"
.br
.ti -1c
.RI "void \fBhandle_signals\fP (void)"
.br
.RI "\fIdeal with signals pending action in signal_queue. \fP"
.ti -1c
.RI "void \fBhandle_buddies\fP (void)"
.br
.ti -1c
.RI "int32_t \fBctrl_sock_setup\fP (void)"
.br
.RI "\fIsetup controller's socket \fP"
.ti -1c
.RI "void \fBevent_loop\fP (int32_t listen_sock)"
.br
.RI "\fIthe main event loop. \fP"
.ti -1c
.RI "int \fBupk_ctrl_init\fP (void)"
.br
.ti -1c
.RI "void \fBcreate_buddy\fP (\fBupk_svc_desc_t\fP *buddy)"
.br
.ti -1c
.RI "void \fBremove_buddy\fP (\fBupk_svc_desc_t\fP *buddy)"
.br
.ti -1c
.RI "int \fBbuddy_connect\fP (const char *sockpath)"
.br
.ti -1c
.RI "\fBbuddy_info_t\fP * \fBbuddy_readstate\fP (int fd)"
.br
.ti -1c
.RI "_Bool \fBkill_buddy\fP (\fBupk_svc_desc_t\fP *buddy)"
.br
.ti -1c
.RI "_Bool \fBstart_buddy_svc\fP (\fBupk_svc_desc_t\fP *buddy)"
.br
.ti -1c
.RI "_Bool \fBstop_buddy_svc\fP (\fBupk_svc_desc_t\fP *buddy)"
.br
.ti -1c
.RI "_Bool \fBreload_buddy_svc\fP (\fBupk_svc_desc_t\fP *buddy)"
.br
.ti -1c
.RI "int \fBupk_db_get_single_text\fP (\fBsqlite3\fP *dbh, char *value, const char *sql,...)"
.br
.RI "\fIlookup a table_id from the schema table. \fP"
.ti -1c
.RI "static int \fBupk_db_get_table_id\fP (\fBsqlite3\fP *dbh, const char *db, const char *table_name, char *table_id)"
.br
.ti -1c
.RI "int \fBupk_db_get_audit_service_table\fP (\fBsqlite3\fP *dbh, char *table_id)"
.br
.RI "\fIlookup the table_id for upk_audit.service from the schema table. \fP"
.ti -1c
.RI "int \fBupk_db_get_cfg_services_table\fP (\fBsqlite3\fP *dbh, char *table_id)"
.br
.RI "\fIlookup the table_id for upk_cfg.services from the schema table. \fP"
.ti -1c
.RI "int \fBupk_db_get_cfg_svc_options_table\fP (\fBsqlite3\fP *dbh, char *table_id)"
.br
.RI "\fIlookup the table_id for upk_cfg.svc_optionsfrom the schema table. \fP"
.ti -1c
.RI "char * \fBupk_db_svc_uuid_lookup\fP (\fBsqlite3\fP *dbh, const char *svcid, const char *package)"
.br
.RI "\fIlookup a service <package>-<name> \fP"
.ti -1c
.RI "char * \fBupk_db_gen_uuid\fP (\fBsqlite3\fP *dbh)"
.br
.ti -1c
.RI "_Bool \fBupk_db_add_new_service\fP (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc)"
.br
.ti -1c
.RI "static int \fBupk_db_try_insert\fP (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc, int type, char *optkey, void *optval, \fBsize_t\fP len)"
.br
.ti -1c
.RI "static int \fBupk_db_try_update\fP (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc, int type, char *optkey, void *optval, \fBsize_t\fP len)"
.br
.ti -1c
.RI "_Bool \fBupk_db_upsert\fP (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc, int type, char *optkey, void *optval, \fBsize_t\fP len)"
.br
.ti -1c
.RI "_Bool \fBupk_db_upsert_options\fP (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc)"
.br
.ti -1c
.RI "_Bool \fBupk_db_insert_cfg\fP (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc)"
.br
.RI "\fIInsert a configuration into the database. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char * \fB__progname\fP"
.br
.ti -1c
.RI "* \fB__locale_t\fP"
.br
.ti -1c
.RI "\fBsigval_t\fP"
.br
.ti -1c
.RI "__const char *__const \fB_sys_siglist\fP [65]"
.br
.ti -1c
.RI "__const char *__const \fBsys_siglist\fP [65]"
.br
.ti -1c
.RI "struct \fBin6_addr\fP \fBin6addr_any\fP"
.br
.ti -1c
.RI "struct \fBin6_addr\fP \fBin6addr_loopback\fP"
.br
.ti -1c
.RI "struct _IO_FILE_plus \fB_IO_2_1_stdin_\fP"
.br
.ti -1c
.RI "struct _IO_FILE_plus \fB_IO_2_1_stdout_\fP"
.br
.ti -1c
.RI "struct _IO_FILE_plus \fB_IO_2_1_stderr_\fP"
.br
.ti -1c
.RI "static const char \fBupk_diag_label_idx\fP [][16]"
.br
.ti -1c
.RI "static const char \fB__upk_errors\fP [][128]"
.br
.ti -1c
.RI "char \fB__upk_err_buf\fP [4096]"
.br
.ti -1c
.RI "\fBupk_errno_t\fP \fB__upk_errno_type\fP"
.br
.ti -1c
.RI "int32_t \fBupk_diag_verbosity\fP"
.br
.ti -1c
.RI "char \fBlabel_idx\fP [][16]"
.br
.ti -1c
.RI "char \fBupk_ctrl_configuration_file\fP [8192]"
.br
.ti -1c
.RI "const char \fBupk_default_configuration_str\fP []"
.br
.ti -1c
.RI "\fBupk_controller_config_t\fP \fBupk_default_configuration\fP"
.br
.ti -1c
.RI "\fBupk_controller_config_t\fP \fBupk_file_configuration\fP"
.br
.ti -1c
.RI "\fBupk_controller_config_t\fP \fBupk_runtime_configuration\fP"
.br
.ti -1c
.RI "const char \fBsqlite3_version\fP []"
.br
.ti -1c
.RI "char * \fBsqlite3_temp_directory\fP"
.br
.ti -1c
.RI "\fBsqlite3\fP * \fBctrl_dbh\fP"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef unsigned int _G_uint32_t __attribute__((__mode__(__SI__)))"
.SS "typedef long int \fB__blkcnt64_t\fP"
.SS "typedef long int \fB__blkcnt_t\fP"
.SS "typedef long int \fB__blksize_t\fP"
.SS "typedef char* \fB__caddr_t\fP"
.SS "typedef long int \fB__clock_t\fP"
.SS "typedef int \fB__clockid_t\fP"
.SS "typedef int \fB__daddr_t\fP"
.SS "typedef unsigned long int \fB__dev_t\fP"
.SS "typedef long int \fB__fd_mask\fP"
.SS "typedef struct \fB_IO_FILE\fP \fB__FILE\fP"
.SS "typedef unsigned long int \fB__fsblkcnt64_t\fP"
.SS "typedef unsigned long int \fB__fsblkcnt_t\fP"
.SS "typedef unsigned long int \fB__fsfilcnt64_t\fP"
.SS "typedef unsigned long int \fB__fsfilcnt_t\fP"
.SS "typedef \fBwint_t\fP(* \fB__gconv_btowc_fct\fP)(struct \fB__gconv_step\fP *, unsigned char)"
.SS "typedef void(* \fB__gconv_end_fct\fP)(struct \fB__gconv_step\fP *)"
.SS "typedef int(* \fB__gconv_fct\fP)(struct \fB__gconv_step\fP *, struct \fB__gconv_step_data\fP *, __const unsigned char **, __const unsigned char *, unsigned char **, \fBsize_t\fP *, int, int)"
.SS "typedef int(* \fB__gconv_init_fct\fP)(struct \fB__gconv_step\fP *)"
.SS "typedef struct \fB__gconv_info\fP                      * \fB__gconv_t\fP"
.SS "typedef int(* \fB__gconv_trans_context_fct\fP)(void *, __const unsigned char *, __const unsigned char *, unsigned char *, unsigned char *)"
.SS "typedef void(* \fB__gconv_trans_end_fct\fP)(void *)"
.SS "typedef int(* \fB__gconv_trans_fct\fP)(struct \fB__gconv_step\fP *, struct \fB__gconv_step_data\fP *, void *, __const unsigned char *, __const unsigned char **, __const unsigned char *, unsigned char **, \fBsize_t\fP *)"
.SS "typedef int(* \fB__gconv_trans_init_fct\fP)(void **, const char *)"
.SS "typedef int(* \fB__gconv_trans_query_fct\fP)(__const char *, __const char ***, \fBsize_t\fP *)"
.SS "typedef unsigned int \fB__gid_t\fP"
.SS "typedef __builtin_va_list \fB__gnuc_va_list\fP"
.SS "typedef unsigned int \fB__id_t\fP"
.SS "typedef unsigned long int \fB__ino64_t\fP"
.SS "typedef unsigned long int \fB__ino_t\fP"
.SS "typedef signed short int \fB__int16_t\fP"
.SS "typedef signed int \fB__int32_t\fP"
.SS "typedef signed long int \fB__int64_t\fP"
.SS "typedef signed char \fB__int8_t\fP"
.SS "typedef long int \fB__intptr_t\fP"
.SS "typedef int \fB__io_close_fn\fP(void *__cookie)"
.SS "typedef \fB__ssize_t\fP \fB__io_read_fn\fP(void *__cookie, char *__buf, \fBsize_t\fP __nbytes)"
.SS "typedef int \fB__io_seek_fn\fP(void *__cookie, \fB__off64_t\fP *__pos, int __w)"
.SS "typedef \fB__ssize_t\fP \fB__io_write_fn\fP(void *__cookie, __const char *__buf, \fBsize_t\fP __n)"
.SS "typedef enum \fB__itimer_which\fP \fB__itimer_which_t\fP"
.SS "typedef int \fB__key_t\fP"
.SS "typedef \fB__off64_t\fP \fB__loff_t\fP"
.SS "typedef unsigned int \fB__mode_t\fP"
.SS "typedef unsigned long int \fB__nlink_t\fP"
.SS "typedef long int \fB__off64_t\fP"
.SS "typedef long int \fB__off_t\fP"
.SS "typedef int \fB__pid_t\fP"
.SS "typedef enum \fB__priority_which\fP \fB__priority_which_t\fP"
.SS "typedef struct \fB__pthread_internal_list\fP  \fB__pthread_list_t\fP"
.SS "typedef \fB__quad_t\fP* \fB__qaddr_t\fP"
.SS "typedef long int \fB__quad_t\fP"
.SS "typedef unsigned long int \fB__rlim64_t\fP"
.SS "typedef unsigned long int \fB__rlim_t\fP"
.SS "typedef enum __rlimit_resource \fB__rlimit_resource_t\fP"
.SS "typedef enum \fB__rusage_who\fP \fB__rusage_who_t\fP"
.SS "typedef int \fB__sig_atomic_t\fP"
.SS "typedef unsigned int \fB__socklen_t\fP"
.SS "typedef long int \fB__ssize_t\fP"
.SS "typedef long int \fB__suseconds_t\fP"
.SS "typedef long int \fB__swblk_t\fP"
.SS "typedef long int \fB__time_t\fP"
.SS "typedef void* \fB__timer_t\fP"
.SS "typedef struct \fBtimezone\fP* __restrict \fB__timezone_ptr_t\fP"
.SS "typedef unsigned char \fB__u_char\fP"
.SS "typedef unsigned int \fB__u_int\fP"
.SS "typedef unsigned long int \fB__u_long\fP"
.SS "typedef unsigned long int \fB__u_quad_t\fP"
.SS "typedef unsigned short int \fB__u_short\fP"
.SS "typedef unsigned int \fB__uid_t\fP"
.SS "typedef unsigned short int \fB__uint16_t\fP"
.SS "typedef unsigned int \fB__uint32_t\fP"
.SS "typedef unsigned long int \fB__uint64_t\fP"
.SS "typedef unsigned char \fB__uint8_t\fP"
.SS "typedef unsigned int \fB__useconds_t\fP"
.SS "typedef struct \fB_IO_FILE\fP \fB_IO_FILE\fP"
.SS "typedef void \fB_IO_lock_t\fP"
.SS "typedef \fB__blkcnt64_t\fP \fBblkcnt64_t\fP"
.SS "typedef \fB__blkcnt_t\fP \fBblkcnt_t\fP"
.SS "typedef \fB__blksize_t\fP \fBblksize_t\fP"
.SS "typedef enum \fB_buddy_cmnd\fP  \fBbuddy_cmnd_t\fP"
.SS "typedef struct \fB_buddy_info\fP \fBbuddy_info_t\fP"
.SS "typedef \fB__caddr_t\fP \fBcaddr_t\fP"
.SS "typedef \fB__clock_t\fP \fBclock_t\fP"
.SS "typedef \fB__clockid_t\fP \fBclockid_t\fP"
.SS "typedef \fB__io_close_fn\fP \fBcookie_close_function_t\fP"
.SS "typedef \fB_IO_cookie_io_functions_t\fP \fBcookie_io_functions_t\fP"
.SS "typedef \fB__io_read_fn\fP \fBcookie_read_function_t\fP"
.SS "typedef \fB__io_seek_fn\fP \fBcookie_seek_function_t\fP"
.SS "typedef \fB__io_write_fn\fP \fBcookie_write_function_t\fP"
.SS "typedef  struct \fBctrl_sigqueue_meta_p\fP  \fBctrl_sigqueue_meta_t\fP"
.SS "typedef struct \fB_ctrl_sigqueue\fP \fBctrl_sigqueue_t\fP"
.SS "typedef \fB__daddr_t\fP \fBdaddr_t\fP"
.SS "typedef \fB__dev_t\fP \fBdev_t\fP"
.SS "typedef void(* \fBdiag_output_callback_t\fP)(\fBupk_diaglvl_t\fP diaglvl, const char *label, const char *loc, const char *fmt, va_list ap)"
.SS "typedef struct __dirstream \fBDIR\fP"
.SS "typedef void(* \fBerr_rpt_callback_t\fP)(\fBupk_errno_t\fP)"
.SS "typedef void(* \fBerr_rpt_msg_callback_t\fP)(\fBupk_errno_t\fP, const char *)"
.SS "typedef \fB__fd_mask\fP \fBfd_mask\fP"
.SS "typedef struct \fB_IO_FILE\fP \fBFILE\fP"
.SS "typedef struct \fB_libc_fpstate\fP* \fBfpregset_t\fP"
.SS "typedef \fB__fsblkcnt64_t\fP \fBfsblkcnt64_t\fP"
.SS "typedef \fB__fsblkcnt_t\fP \fBfsblkcnt_t\fP"
.SS "typedef \fB__fsfilcnt64_t\fP \fBfsfilcnt64_t\fP"
.SS "typedef \fB__fsfilcnt_t\fP \fBfsfilcnt_t\fP"
.SS "typedef \fB__fsid_t\fP \fBfsid_t\fP"
.SS "typedef \fB__gid_t\fP \fBgid_t\fP"
.SS "typedef long int \fBgreg_t\fP"
.SS "typedef \fBgreg_t\fP \fBgregset_t\fP[23]"
.SS "typedef \fB__id_t\fP \fBid_t\fP"
.SS "typedef \fBuint32_t\fP \fBin_addr_t\fP"
.SS "typedef \fBuint16_t\fP \fBin_port_t\fP"
.SS "typedef \fB__ino64_t\fP \fBino64_t\fP"
.SS "typedef \fB__ino_t\fP \fBino_t\fP"
.SS "typedef long int \fBint_fast16_t\fP"
.SS "typedef long int \fBint_fast32_t\fP"
.SS "typedef long int \fBint_fast64_t\fP"
.SS "typedef signed char \fBint_fast8_t\fP"
.SS "typedef short int \fBint_least16_t\fP"
.SS "typedef int \fBint_least32_t\fP"
.SS "typedef long int \fBint_least64_t\fP"
.SS "typedef signed char \fBint_least8_t\fP"
.SS "typedef long int \fBintmax_t\fP"
.SS "typedef long int \fBintptr_t\fP"
.SS "typedef \fB__key_t\fP \fBkey_t\fP"
.SS "typedef \fB__loff_t\fP \fBloff_t\fP"
.SS "typedef \fB__mode_t\fP \fBmode_t\fP"
.SS "typedef \fB__nlink_t\fP \fBnlink_t\fP"
.SS "typedef \fB__off64_t\fP \fBoff64_t\fP"
.SS "typedef \fB__off_t\fP \fBoff_t\fP"
.SS "typedef \fB__pid_t\fP \fBpid_t\fP"
.SS "typedef unsigned int \fBpthread_key_t\fP"
.SS "typedef int \fBpthread_once_t\fP"
.SS "typedef volatile int \fBpthread_spinlock_t\fP"
.SS "typedef unsigned long int \fBpthread_t\fP"
.SS "typedef \fB__quad_t\fP \fBquad_t\fP"
.SS "typedef \fB__rlim64_t\fP \fBrlim64_t\fP"
.SS "typedef \fB__rlim_t\fP \fBrlim_t\fP"
.SS "typedef unsigned short int \fBsa_family_t\fP"
.SS "typedef struct \fBsigevent\fP  \fBsigevent_t\fP"
.SS "typedef struct \fBsiginfo\fP  \fBsiginfo_t\fP"
.SS "typedef \fB__sigset_t\fP \fBsigset_t\fP"
.SS "typedef long unsigned int \fBsize_t\fP"
.SS "typedef struct \fBsqlite3\fP \fBsqlite3\fP"
.SS "typedef int(* \fBsqlite3_callback\fP)(void *, int, char **, char **)"
.SS "typedef struct \fBsqlite3_context\fP \fBsqlite3_context\fP"
.SS "typedef struct \fBsqlite3_stmt\fP \fBsqlite3_stmt\fP"
.SS "typedef struct Mem \fBsqlite3_value\fP"
.SS "typedef long long int \fBsqlite_int64\fP"
.SS "typedef unsigned long long int \fBsqlite_uint64\fP"
.SS "typedef \fB__ssize_t\fP \fBssize_t\fP"
.SS "typedef struct \fBsigaltstack\fP  \fBstack_t\fP"
.SS "typedef \fB__suseconds_t\fP \fBsuseconds_t\fP"
.SS "typedef \fB__time_t\fP \fBtime_t\fP"
.SS "typedef \fB__timer_t\fP \fBtimer_t\fP"
.SS "typedef \fB__u_char\fP \fBu_char\fP"
.SS "typedef \fB__u_int\fP \fBu_int\fP"
.SS "typedef \fB__u_long\fP \fBu_long\fP"
.SS "typedef \fB__u_quad_t\fP \fBu_quad_t\fP"
.SS "typedef \fB__u_short\fP \fBu_short\fP"
.SS "typedef struct \fBucontext\fP  \fBucontext_t\fP"
.SS "typedef \fB__uid_t\fP \fBuid_t\fP"
.SS "typedef unsigned int \fBuint\fP"
.SS "typedef unsigned short int \fBuint16_t\fP"
.SS "typedef unsigned int \fBuint32_t\fP"
.SS "typedef unsigned long int \fBuint64_t\fP"
.SS "typedef unsigned char \fBuint8_t\fP"
.SS "typedef unsigned long int \fBuint_fast16_t\fP"
.SS "typedef unsigned long int \fBuint_fast32_t\fP"
.SS "typedef unsigned long int \fBuint_fast64_t\fP"
.SS "typedef unsigned char \fBuint_fast8_t\fP"
.SS "typedef unsigned short int \fBuint_least16_t\fP"
.SS "typedef unsigned int \fBuint_least32_t\fP"
.SS "typedef unsigned long int \fBuint_least64_t\fP"
.SS "typedef unsigned char \fBuint_least8_t\fP"
.SS "typedef unsigned long int \fBuintmax_t\fP"
.SS "typedef unsigned long int \fBuintptr_t\fP"
.SS "typedef unsigned long int \fBulong\fP"
.SS "typedef  struct \fBupk_conn_handle_meta_p\fP  \fBupk_conn_handle_meta_t\fP"
.SS "typedef struct \fB_upk_conn_handle\fP \fBupk_conn_handle_t\fP"
.SS "typedef struct \fB_upk_controller_config\fP  \fBupk_controller_config_t\fP"
.SS "typedef struct \fB_upk_cust_actscr_list\fP \fBupk_cust_actscr_list_t\fP"
.SS "typedef  struct \fB_upk_cust_actscr_meta_p\fP  \fBupk_cust_actscr_meta_t\fP"
.SS "typedef struct \fB_upk_json_data_output_options\fP  \fBupk_json_data_output_opts_t\fP"
.SS "typedef enum \fB_upk_msgtype\fP  \fBupk_msgtype_t\fP"
.SS "typedef void(* \fBupk_net_callback_t\fP)(\fBupk_conn_handle_meta_t\fP *handles, \fBupk_payload_t\fP *msg)"
.SS "typedef  struct \fBupk_net_cb_stk_meta_p\fP  \fBupk_net_cb_stk_meta_t\fP"
.SS "typedef struct \fB_upk_net_cb_stk\fP \fBupk_net_cb_stk_t\fP"
.SS "typedef struct \fB_upk_net_state\fP \fBupk_net_state_t\fP"
.SS "typedef  struct \fBupk_netmsg_queue_meta_p\fP  \fBupk_netmsg_queue_meta_t\fP"
.SS "typedef struct \fB_upk_netmsg_queue\fP \fBupk_netmsg_queue_t\fP"
.SS "typedef struct \fB_upk_payload\fP  \fBupk_payload_t\fP"
.SS "typedef union \fB_upk_payload_types\fP  \fBupk_payload_types_u\fP"
.SS "typedef unsigned char \fBupk_pkt_buf_t\fP"
.SS "typedef \fBupk_conn_handle_t\fP \fBupk_protocol_handle_t\fP"
.SS "typedef  struct \fB_upk_stringlist_meta_p\fP  \fBupk_stringlist_meta_t\fP"
.SS "typedef struct \fB_upk_stringlist\fP \fBupk_stringlist_t\fP"
.SS "typedef  struct \fBupk_svc_desc_meta_p\fP  \fBupk_svc_desc_meta_t\fP"
.SS "typedef struct \fB_upk_svc_desc\fP \fBupk_svc_desc_t\fP"
.SS "typedef  struct \fB_upk_svcid_meta_p\fP  \fBupk_svcid_meta_t\fP"
.SS "typedef struct \fB_upk_svcid\fP \fBupk_svcid_t\fP"
.SS "typedef struct \fB_upk_svcinfo\fP  \fBupk_svcinfo_t\fP"
.SS "typedef struct \fB_upk_uuid\fP  \fBupk_uuid_t\fP"
.SS "typedef struct \fB_upklist_userdata_state_partition\fP \fBupklist_userdata_state_partition_t\fP"
.SS "typedef \fB__useconds_t\fP \fBuseconds_t\fP"
.SS "typedef unsigned short int \fBushort\fP"
.SS "typedef int \fBwchar_t\fP"
.SS "typedef unsigned int \fBwint_t\fP"
.SH "Enumeration Type Documentation"
.PP 
.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fI_SC_ARG_MAX \fP\fP
.TP
\fB\fI_SC_CHILD_MAX \fP\fP
.TP
\fB\fI_SC_CLK_TCK \fP\fP
.TP
\fB\fI_SC_NGROUPS_MAX \fP\fP
.TP
\fB\fI_SC_OPEN_MAX \fP\fP
.TP
\fB\fI_SC_STREAM_MAX \fP\fP
.TP
\fB\fI_SC_TZNAME_MAX \fP\fP
.TP
\fB\fI_SC_JOB_CONTROL \fP\fP
.TP
\fB\fI_SC_SAVED_IDS \fP\fP
.TP
\fB\fI_SC_REALTIME_SIGNALS \fP\fP
.TP
\fB\fI_SC_PRIORITY_SCHEDULING \fP\fP
.TP
\fB\fI_SC_TIMERS \fP\fP
.TP
\fB\fI_SC_ASYNCHRONOUS_IO \fP\fP
.TP
\fB\fI_SC_PRIORITIZED_IO \fP\fP
.TP
\fB\fI_SC_SYNCHRONIZED_IO \fP\fP
.TP
\fB\fI_SC_FSYNC \fP\fP
.TP
\fB\fI_SC_MAPPED_FILES \fP\fP
.TP
\fB\fI_SC_MEMLOCK \fP\fP
.TP
\fB\fI_SC_MEMLOCK_RANGE \fP\fP
.TP
\fB\fI_SC_MEMORY_PROTECTION \fP\fP
.TP
\fB\fI_SC_MESSAGE_PASSING \fP\fP
.TP
\fB\fI_SC_SEMAPHORES \fP\fP
.TP
\fB\fI_SC_SHARED_MEMORY_OBJECTS \fP\fP
.TP
\fB\fI_SC_AIO_LISTIO_MAX \fP\fP
.TP
\fB\fI_SC_AIO_MAX \fP\fP
.TP
\fB\fI_SC_AIO_PRIO_DELTA_MAX \fP\fP
.TP
\fB\fI_SC_DELAYTIMER_MAX \fP\fP
.TP
\fB\fI_SC_MQ_OPEN_MAX \fP\fP
.TP
\fB\fI_SC_MQ_PRIO_MAX \fP\fP
.TP
\fB\fI_SC_VERSION \fP\fP
.TP
\fB\fI_SC_PAGESIZE \fP\fP
.TP
\fB\fI_SC_RTSIG_MAX \fP\fP
.TP
\fB\fI_SC_SEM_NSEMS_MAX \fP\fP
.TP
\fB\fI_SC_SEM_VALUE_MAX \fP\fP
.TP
\fB\fI_SC_SIGQUEUE_MAX \fP\fP
.TP
\fB\fI_SC_TIMER_MAX \fP\fP
.TP
\fB\fI_SC_BC_BASE_MAX \fP\fP
.TP
\fB\fI_SC_BC_DIM_MAX \fP\fP
.TP
\fB\fI_SC_BC_SCALE_MAX \fP\fP
.TP
\fB\fI_SC_BC_STRING_MAX \fP\fP
.TP
\fB\fI_SC_COLL_WEIGHTS_MAX \fP\fP
.TP
\fB\fI_SC_EQUIV_CLASS_MAX \fP\fP
.TP
\fB\fI_SC_EXPR_NEST_MAX \fP\fP
.TP
\fB\fI_SC_LINE_MAX \fP\fP
.TP
\fB\fI_SC_RE_DUP_MAX \fP\fP
.TP
\fB\fI_SC_CHARCLASS_NAME_MAX \fP\fP
.TP
\fB\fI_SC_2_VERSION \fP\fP
.TP
\fB\fI_SC_2_C_BIND \fP\fP
.TP
\fB\fI_SC_2_C_DEV \fP\fP
.TP
\fB\fI_SC_2_FORT_DEV \fP\fP
.TP
\fB\fI_SC_2_FORT_RUN \fP\fP
.TP
\fB\fI_SC_2_SW_DEV \fP\fP
.TP
\fB\fI_SC_2_LOCALEDEF \fP\fP
.TP
\fB\fI_SC_PII \fP\fP
.TP
\fB\fI_SC_PII_XTI \fP\fP
.TP
\fB\fI_SC_PII_SOCKET \fP\fP
.TP
\fB\fI_SC_PII_INTERNET \fP\fP
.TP
\fB\fI_SC_PII_OSI \fP\fP
.TP
\fB\fI_SC_POLL \fP\fP
.TP
\fB\fI_SC_SELECT \fP\fP
.TP
\fB\fI_SC_UIO_MAXIOV \fP\fP
.TP
\fB\fI_SC_IOV_MAX \fP\fP
.TP
\fB\fI_SC_PII_INTERNET_STREAM \fP\fP
.TP
\fB\fI_SC_PII_INTERNET_DGRAM \fP\fP
.TP
\fB\fI_SC_PII_OSI_COTS \fP\fP
.TP
\fB\fI_SC_PII_OSI_CLTS \fP\fP
.TP
\fB\fI_SC_PII_OSI_M \fP\fP
.TP
\fB\fI_SC_T_IOV_MAX \fP\fP
.TP
\fB\fI_SC_THREADS \fP\fP
.TP
\fB\fI_SC_THREAD_SAFE_FUNCTIONS \fP\fP
.TP
\fB\fI_SC_GETGR_R_SIZE_MAX \fP\fP
.TP
\fB\fI_SC_GETPW_R_SIZE_MAX \fP\fP
.TP
\fB\fI_SC_LOGIN_NAME_MAX \fP\fP
.TP
\fB\fI_SC_TTY_NAME_MAX \fP\fP
.TP
\fB\fI_SC_THREAD_DESTRUCTOR_ITERATIONS \fP\fP
.TP
\fB\fI_SC_THREAD_KEYS_MAX \fP\fP
.TP
\fB\fI_SC_THREAD_STACK_MIN \fP\fP
.TP
\fB\fI_SC_THREAD_THREADS_MAX \fP\fP
.TP
\fB\fI_SC_THREAD_ATTR_STACKADDR \fP\fP
.TP
\fB\fI_SC_THREAD_ATTR_STACKSIZE \fP\fP
.TP
\fB\fI_SC_THREAD_PRIORITY_SCHEDULING \fP\fP
.TP
\fB\fI_SC_THREAD_PRIO_INHERIT \fP\fP
.TP
\fB\fI_SC_THREAD_PRIO_PROTECT \fP\fP
.TP
\fB\fI_SC_THREAD_PROCESS_SHARED \fP\fP
.TP
\fB\fI_SC_NPROCESSORS_CONF \fP\fP
.TP
\fB\fI_SC_NPROCESSORS_ONLN \fP\fP
.TP
\fB\fI_SC_PHYS_PAGES \fP\fP
.TP
\fB\fI_SC_AVPHYS_PAGES \fP\fP
.TP
\fB\fI_SC_ATEXIT_MAX \fP\fP
.TP
\fB\fI_SC_PASS_MAX \fP\fP
.TP
\fB\fI_SC_XOPEN_VERSION \fP\fP
.TP
\fB\fI_SC_XOPEN_XCU_VERSION \fP\fP
.TP
\fB\fI_SC_XOPEN_UNIX \fP\fP
.TP
\fB\fI_SC_XOPEN_CRYPT \fP\fP
.TP
\fB\fI_SC_XOPEN_ENH_I18N \fP\fP
.TP
\fB\fI_SC_XOPEN_SHM \fP\fP
.TP
\fB\fI_SC_2_CHAR_TERM \fP\fP
.TP
\fB\fI_SC_2_C_VERSION \fP\fP
.TP
\fB\fI_SC_2_UPE \fP\fP
.TP
\fB\fI_SC_XOPEN_XPG2 \fP\fP
.TP
\fB\fI_SC_XOPEN_XPG3 \fP\fP
.TP
\fB\fI_SC_XOPEN_XPG4 \fP\fP
.TP
\fB\fI_SC_CHAR_BIT \fP\fP
.TP
\fB\fI_SC_CHAR_MAX \fP\fP
.TP
\fB\fI_SC_CHAR_MIN \fP\fP
.TP
\fB\fI_SC_INT_MAX \fP\fP
.TP
\fB\fI_SC_INT_MIN \fP\fP
.TP
\fB\fI_SC_LONG_BIT \fP\fP
.TP
\fB\fI_SC_WORD_BIT \fP\fP
.TP
\fB\fI_SC_MB_LEN_MAX \fP\fP
.TP
\fB\fI_SC_NZERO \fP\fP
.TP
\fB\fI_SC_SSIZE_MAX \fP\fP
.TP
\fB\fI_SC_SCHAR_MAX \fP\fP
.TP
\fB\fI_SC_SCHAR_MIN \fP\fP
.TP
\fB\fI_SC_SHRT_MAX \fP\fP
.TP
\fB\fI_SC_SHRT_MIN \fP\fP
.TP
\fB\fI_SC_UCHAR_MAX \fP\fP
.TP
\fB\fI_SC_UINT_MAX \fP\fP
.TP
\fB\fI_SC_ULONG_MAX \fP\fP
.TP
\fB\fI_SC_USHRT_MAX \fP\fP
.TP
\fB\fI_SC_NL_ARGMAX \fP\fP
.TP
\fB\fI_SC_NL_LANGMAX \fP\fP
.TP
\fB\fI_SC_NL_MSGMAX \fP\fP
.TP
\fB\fI_SC_NL_NMAX \fP\fP
.TP
\fB\fI_SC_NL_SETMAX \fP\fP
.TP
\fB\fI_SC_NL_TEXTMAX \fP\fP
.TP
\fB\fI_SC_XBS5_ILP32_OFF32 \fP\fP
.TP
\fB\fI_SC_XBS5_ILP32_OFFBIG \fP\fP
.TP
\fB\fI_SC_XBS5_LP64_OFF64 \fP\fP
.TP
\fB\fI_SC_XBS5_LPBIG_OFFBIG \fP\fP
.TP
\fB\fI_SC_XOPEN_LEGACY \fP\fP
.TP
\fB\fI_SC_XOPEN_REALTIME \fP\fP
.TP
\fB\fI_SC_XOPEN_REALTIME_THREADS \fP\fP
.TP
\fB\fI_SC_ADVISORY_INFO \fP\fP
.TP
\fB\fI_SC_BARRIERS \fP\fP
.TP
\fB\fI_SC_BASE \fP\fP
.TP
\fB\fI_SC_C_LANG_SUPPORT \fP\fP
.TP
\fB\fI_SC_C_LANG_SUPPORT_R \fP\fP
.TP
\fB\fI_SC_CLOCK_SELECTION \fP\fP
.TP
\fB\fI_SC_CPUTIME \fP\fP
.TP
\fB\fI_SC_THREAD_CPUTIME \fP\fP
.TP
\fB\fI_SC_DEVICE_IO \fP\fP
.TP
\fB\fI_SC_DEVICE_SPECIFIC \fP\fP
.TP
\fB\fI_SC_DEVICE_SPECIFIC_R \fP\fP
.TP
\fB\fI_SC_FD_MGMT \fP\fP
.TP
\fB\fI_SC_FIFO \fP\fP
.TP
\fB\fI_SC_PIPE \fP\fP
.TP
\fB\fI_SC_FILE_ATTRIBUTES \fP\fP
.TP
\fB\fI_SC_FILE_LOCKING \fP\fP
.TP
\fB\fI_SC_FILE_SYSTEM \fP\fP
.TP
\fB\fI_SC_MONOTONIC_CLOCK \fP\fP
.TP
\fB\fI_SC_MULTI_PROCESS \fP\fP
.TP
\fB\fI_SC_SINGLE_PROCESS \fP\fP
.TP
\fB\fI_SC_NETWORKING \fP\fP
.TP
\fB\fI_SC_READER_WRITER_LOCKS \fP\fP
.TP
\fB\fI_SC_SPIN_LOCKS \fP\fP
.TP
\fB\fI_SC_REGEXP \fP\fP
.TP
\fB\fI_SC_REGEX_VERSION \fP\fP
.TP
\fB\fI_SC_SHELL \fP\fP
.TP
\fB\fI_SC_SIGNALS \fP\fP
.TP
\fB\fI_SC_SPAWN \fP\fP
.TP
\fB\fI_SC_SPORADIC_SERVER \fP\fP
.TP
\fB\fI_SC_THREAD_SPORADIC_SERVER \fP\fP
.TP
\fB\fI_SC_SYSTEM_DATABASE \fP\fP
.TP
\fB\fI_SC_SYSTEM_DATABASE_R \fP\fP
.TP
\fB\fI_SC_TIMEOUTS \fP\fP
.TP
\fB\fI_SC_TYPED_MEMORY_OBJECTS \fP\fP
.TP
\fB\fI_SC_USER_GROUPS \fP\fP
.TP
\fB\fI_SC_USER_GROUPS_R \fP\fP
.TP
\fB\fI_SC_2_PBS \fP\fP
.TP
\fB\fI_SC_2_PBS_ACCOUNTING \fP\fP
.TP
\fB\fI_SC_2_PBS_LOCATE \fP\fP
.TP
\fB\fI_SC_2_PBS_MESSAGE \fP\fP
.TP
\fB\fI_SC_2_PBS_TRACK \fP\fP
.TP
\fB\fI_SC_SYMLOOP_MAX \fP\fP
.TP
\fB\fI_SC_STREAMS \fP\fP
.TP
\fB\fI_SC_2_PBS_CHECKPOINT \fP\fP
.TP
\fB\fI_SC_V6_ILP32_OFF32 \fP\fP
.TP
\fB\fI_SC_V6_ILP32_OFFBIG \fP\fP
.TP
\fB\fI_SC_V6_LP64_OFF64 \fP\fP
.TP
\fB\fI_SC_V6_LPBIG_OFFBIG \fP\fP
.TP
\fB\fI_SC_HOST_NAME_MAX \fP\fP
.TP
\fB\fI_SC_TRACE \fP\fP
.TP
\fB\fI_SC_TRACE_EVENT_FILTER \fP\fP
.TP
\fB\fI_SC_TRACE_INHERIT \fP\fP
.TP
\fB\fI_SC_TRACE_LOG \fP\fP
.TP
\fB\fI_SC_LEVEL1_ICACHE_SIZE \fP\fP
.TP
\fB\fI_SC_LEVEL1_ICACHE_ASSOC \fP\fP
.TP
\fB\fI_SC_LEVEL1_ICACHE_LINESIZE \fP\fP
.TP
\fB\fI_SC_LEVEL1_DCACHE_SIZE \fP\fP
.TP
\fB\fI_SC_LEVEL1_DCACHE_ASSOC \fP\fP
.TP
\fB\fI_SC_LEVEL1_DCACHE_LINESIZE \fP\fP
.TP
\fB\fI_SC_LEVEL2_CACHE_SIZE \fP\fP
.TP
\fB\fI_SC_LEVEL2_CACHE_ASSOC \fP\fP
.TP
\fB\fI_SC_LEVEL2_CACHE_LINESIZE \fP\fP
.TP
\fB\fI_SC_LEVEL3_CACHE_SIZE \fP\fP
.TP
\fB\fI_SC_LEVEL3_CACHE_ASSOC \fP\fP
.TP
\fB\fI_SC_LEVEL3_CACHE_LINESIZE \fP\fP
.TP
\fB\fI_SC_LEVEL4_CACHE_SIZE \fP\fP
.TP
\fB\fI_SC_LEVEL4_CACHE_ASSOC \fP\fP
.TP
\fB\fI_SC_LEVEL4_CACHE_LINESIZE \fP\fP
.TP
\fB\fI_SC_IPV6 \fP\fP
.TP
\fB\fI_SC_RAW_SOCKETS \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fI_CS_PATH \fP\fP
.TP
\fB\fI_CS_V6_WIDTH_RESTRICTED_ENVS \fP\fP
.TP
\fB\fI_CS_GNU_LIBC_VERSION \fP\fP
.TP
\fB\fI_CS_GNU_LIBPTHREAD_VERSION \fP\fP
.TP
\fB\fI_CS_LFS_CFLAGS \fP\fP
.TP
\fB\fI_CS_LFS_LDFLAGS \fP\fP
.TP
\fB\fI_CS_LFS_LIBS \fP\fP
.TP
\fB\fI_CS_LFS_LINTFLAGS \fP\fP
.TP
\fB\fI_CS_LFS64_CFLAGS \fP\fP
.TP
\fB\fI_CS_LFS64_LDFLAGS \fP\fP
.TP
\fB\fI_CS_LFS64_LIBS \fP\fP
.TP
\fB\fI_CS_LFS64_LINTFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_ILP32_OFF32_CFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_ILP32_OFF32_LDFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_ILP32_OFF32_LIBS \fP\fP
.TP
\fB\fI_CS_XBS5_ILP32_OFF32_LINTFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_ILP32_OFFBIG_CFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_ILP32_OFFBIG_LDFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_ILP32_OFFBIG_LIBS \fP\fP
.TP
\fB\fI_CS_XBS5_ILP32_OFFBIG_LINTFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_LP64_OFF64_CFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_LP64_OFF64_LDFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_LP64_OFF64_LIBS \fP\fP
.TP
\fB\fI_CS_XBS5_LP64_OFF64_LINTFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_LPBIG_OFFBIG_CFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_LPBIG_OFFBIG_LDFLAGS \fP\fP
.TP
\fB\fI_CS_XBS5_LPBIG_OFFBIG_LIBS \fP\fP
.TP
\fB\fI_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_ILP32_OFF32_CFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_ILP32_OFF32_LDFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_ILP32_OFF32_LIBS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_ILP32_OFFBIG_LIBS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_LP64_OFF64_CFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_LP64_OFF64_LDFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_LP64_OFF64_LIBS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_LP64_OFF64_LINTFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_LPBIG_OFFBIG_LIBS \fP\fP
.TP
\fB\fI_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fISI_ASYNCNL \fP\fP
.TP
\fB\fISI_TKILL \fP\fP
.TP
\fB\fISI_SIGIO \fP\fP
.TP
\fB\fISI_ASYNCIO \fP\fP
.TP
\fB\fISI_MESGQ \fP\fP
.TP
\fB\fISI_TIMER \fP\fP
.TP
\fB\fISI_QUEUE \fP\fP
.TP
\fB\fISI_USER \fP\fP
.TP
\fB\fISI_KERNEL \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIILL_ILLOPC \fP\fP
.TP
\fB\fIILL_ILLOPN \fP\fP
.TP
\fB\fIILL_ILLADR \fP\fP
.TP
\fB\fIILL_ILLTRP \fP\fP
.TP
\fB\fIILL_PRVOPC \fP\fP
.TP
\fB\fIILL_PRVREG \fP\fP
.TP
\fB\fIILL_COPROC \fP\fP
.TP
\fB\fIILL_BADSTK \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIFPE_INTDIV \fP\fP
.TP
\fB\fIFPE_INTOVF \fP\fP
.TP
\fB\fIFPE_FLTDIV \fP\fP
.TP
\fB\fIFPE_FLTOVF \fP\fP
.TP
\fB\fIFPE_FLTUND \fP\fP
.TP
\fB\fIFPE_FLTRES \fP\fP
.TP
\fB\fIFPE_FLTINV \fP\fP
.TP
\fB\fIFPE_FLTSUB \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fISEGV_MAPERR \fP\fP
.TP
\fB\fISEGV_ACCERR \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIBUS_ADRALN \fP\fP
.TP
\fB\fIBUS_ADRERR \fP\fP
.TP
\fB\fIBUS_OBJERR \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fITRAP_BRKPT \fP\fP
.TP
\fB\fITRAP_TRACE \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fICLD_EXITED \fP\fP
.TP
\fB\fICLD_KILLED \fP\fP
.TP
\fB\fICLD_DUMPED \fP\fP
.TP
\fB\fICLD_TRAPPED \fP\fP
.TP
\fB\fICLD_STOPPED \fP\fP
.TP
\fB\fICLD_CONTINUED \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIPOLL_IN \fP\fP
.TP
\fB\fIPOLL_OUT \fP\fP
.TP
\fB\fIPOLL_MSG \fP\fP
.TP
\fB\fIPOLL_ERR \fP\fP
.TP
\fB\fIPOLL_PRI \fP\fP
.TP
\fB\fIPOLL_HUP \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fISIGEV_SIGNAL \fP\fP
.TP
\fB\fISIGEV_NONE \fP\fP
.TP
\fB\fISIGEV_THREAD \fP\fP
.TP
\fB\fISIGEV_THREAD_ID \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fISS_ONSTACK \fP\fP
.TP
\fB\fISS_DISABLE \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIREG_R8 \fP\fP
.TP
\fB\fIREG_R9 \fP\fP
.TP
\fB\fIREG_R10 \fP\fP
.TP
\fB\fIREG_R11 \fP\fP
.TP
\fB\fIREG_R12 \fP\fP
.TP
\fB\fIREG_R13 \fP\fP
.TP
\fB\fIREG_R14 \fP\fP
.TP
\fB\fIREG_R15 \fP\fP
.TP
\fB\fIREG_RDI \fP\fP
.TP
\fB\fIREG_RSI \fP\fP
.TP
\fB\fIREG_RBP \fP\fP
.TP
\fB\fIREG_RBX \fP\fP
.TP
\fB\fIREG_RDX \fP\fP
.TP
\fB\fIREG_RAX \fP\fP
.TP
\fB\fIREG_RCX \fP\fP
.TP
\fB\fIREG_RSP \fP\fP
.TP
\fB\fIREG_RIP \fP\fP
.TP
\fB\fIREG_EFL \fP\fP
.TP
\fB\fIREG_CSGSFS \fP\fP
.TP
\fB\fIREG_ERR \fP\fP
.TP
\fB\fIREG_TRAPNO \fP\fP
.TP
\fB\fIREG_OLDMASK \fP\fP
.TP
\fB\fIREG_CR2 \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIMSG_OOB \fP\fP
.TP
\fB\fIMSG_PEEK \fP\fP
.TP
\fB\fIMSG_DONTROUTE \fP\fP
.TP
\fB\fIMSG_TRYHARD \fP\fP
.TP
\fB\fIMSG_CTRUNC \fP\fP
.TP
\fB\fIMSG_PROXY \fP\fP
.TP
\fB\fIMSG_TRUNC \fP\fP
.TP
\fB\fIMSG_DONTWAIT \fP\fP
.TP
\fB\fIMSG_EOR \fP\fP
.TP
\fB\fIMSG_WAITALL \fP\fP
.TP
\fB\fIMSG_FIN \fP\fP
.TP
\fB\fIMSG_SYN \fP\fP
.TP
\fB\fIMSG_CONFIRM \fP\fP
.TP
\fB\fIMSG_RST \fP\fP
.TP
\fB\fIMSG_ERRQUEUE \fP\fP
.TP
\fB\fIMSG_NOSIGNAL \fP\fP
.TP
\fB\fIMSG_MORE \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fISCM_RIGHTS \fP\fP
.TP
\fB\fISCM_CREDENTIALS \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fISHUT_RD \fP\fP
.TP
\fB\fISHUT_WR \fP\fP
.TP
\fB\fISHUT_RDWR \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIIPPROTO_IP \fP\fP
.TP
\fB\fIIPPROTO_HOPOPTS \fP\fP
.TP
\fB\fIIPPROTO_ICMP \fP\fP
.TP
\fB\fIIPPROTO_IGMP \fP\fP
.TP
\fB\fIIPPROTO_IPIP \fP\fP
.TP
\fB\fIIPPROTO_TCP \fP\fP
.TP
\fB\fIIPPROTO_EGP \fP\fP
.TP
\fB\fIIPPROTO_PUP \fP\fP
.TP
\fB\fIIPPROTO_UDP \fP\fP
.TP
\fB\fIIPPROTO_IDP \fP\fP
.TP
\fB\fIIPPROTO_TP \fP\fP
.TP
\fB\fIIPPROTO_IPV6 \fP\fP
.TP
\fB\fIIPPROTO_ROUTING \fP\fP
.TP
\fB\fIIPPROTO_FRAGMENT \fP\fP
.TP
\fB\fIIPPROTO_RSVP \fP\fP
.TP
\fB\fIIPPROTO_GRE \fP\fP
.TP
\fB\fIIPPROTO_ESP \fP\fP
.TP
\fB\fIIPPROTO_AH \fP\fP
.TP
\fB\fIIPPROTO_ICMPV6 \fP\fP
.TP
\fB\fIIPPROTO_NONE \fP\fP
.TP
\fB\fIIPPROTO_DSTOPTS \fP\fP
.TP
\fB\fIIPPROTO_MTP \fP\fP
.TP
\fB\fIIPPROTO_ENCAP \fP\fP
.TP
\fB\fIIPPROTO_PIM \fP\fP
.TP
\fB\fIIPPROTO_COMP \fP\fP
.TP
\fB\fIIPPROTO_SCTP \fP\fP
.TP
\fB\fIIPPROTO_RAW \fP\fP
.TP
\fB\fIIPPROTO_MAX \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIIPPORT_ECHO \fP\fP
.TP
\fB\fIIPPORT_DISCARD \fP\fP
.TP
\fB\fIIPPORT_SYSTAT \fP\fP
.TP
\fB\fIIPPORT_DAYTIME \fP\fP
.TP
\fB\fIIPPORT_NETSTAT \fP\fP
.TP
\fB\fIIPPORT_FTP \fP\fP
.TP
\fB\fIIPPORT_TELNET \fP\fP
.TP
\fB\fIIPPORT_SMTP \fP\fP
.TP
\fB\fIIPPORT_TIMESERVER \fP\fP
.TP
\fB\fIIPPORT_NAMESERVER \fP\fP
.TP
\fB\fIIPPORT_WHOIS \fP\fP
.TP
\fB\fIIPPORT_MTP \fP\fP
.TP
\fB\fIIPPORT_TFTP \fP\fP
.TP
\fB\fIIPPORT_RJE \fP\fP
.TP
\fB\fIIPPORT_FINGER \fP\fP
.TP
\fB\fIIPPORT_TTYLINK \fP\fP
.TP
\fB\fIIPPORT_SUPDUP \fP\fP
.TP
\fB\fIIPPORT_EXECSERVER \fP\fP
.TP
\fB\fIIPPORT_LOGINSERVER \fP\fP
.TP
\fB\fIIPPORT_CMDSERVER \fP\fP
.TP
\fB\fIIPPORT_EFSSERVER \fP\fP
.TP
\fB\fIIPPORT_BIFFUDP \fP\fP
.TP
\fB\fIIPPORT_WHOSERVER \fP\fP
.TP
\fB\fIIPPORT_ROUTESERVER \fP\fP
.TP
\fB\fIIPPORT_RESERVED \fP\fP
.TP
\fB\fIIPPORT_USERRESERVED \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIDT_UNKNOWN \fP\fP
.TP
\fB\fIDT_FIFO \fP\fP
.TP
\fB\fIDT_CHR \fP\fP
.TP
\fB\fIDT_DIR \fP\fP
.TP
\fB\fIDT_BLK \fP\fP
.TP
\fB\fIDT_REG \fP\fP
.TP
\fB\fIDT_LNK \fP\fP
.TP
\fB\fIDT_SOCK \fP\fP
.TP
\fB\fIDT_WHT \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fI__GCONV_OK \fP\fP
.TP
\fB\fI__GCONV_NOCONV \fP\fP
.TP
\fB\fI__GCONV_NODB \fP\fP
.TP
\fB\fI__GCONV_NOMEM \fP\fP
.TP
\fB\fI__GCONV_EMPTY_INPUT \fP\fP
.TP
\fB\fI__GCONV_FULL_OUTPUT \fP\fP
.TP
\fB\fI__GCONV_ILLEGAL_INPUT \fP\fP
.TP
\fB\fI__GCONV_INCOMPLETE_INPUT \fP\fP
.TP
\fB\fI__GCONV_ILLEGAL_DESCRIPTOR \fP\fP
.TP
\fB\fI__GCONV_INTERNAL_ERROR \fP\fP

.SS "anonymous enum"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fI__GCONV_IS_LAST \fP\fP
.TP
\fB\fI__GCONV_IGNORE_ERRORS \fP\fP

.SS "enum \fB__codecvt_result\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fI__codecvt_ok \fP\fP
.TP
\fB\fI__codecvt_partial \fP\fP
.TP
\fB\fI__codecvt_error \fP\fP
.TP
\fB\fI__codecvt_noconv \fP\fP
.TP
\fB\fI__codecvt_ok \fP\fP
.TP
\fB\fI__codecvt_partial \fP\fP
.TP
\fB\fI__codecvt_error \fP\fP
.TP
\fB\fI__codecvt_noconv \fP\fP

.SS "enum \fB__itimer_which\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIITIMER_REAL \fP\fP
.TP
\fB\fIITIMER_VIRTUAL \fP\fP
.TP
\fB\fIITIMER_PROF \fP\fP
.TP
\fB\fIITIMER_REAL \fP\fP
.TP
\fB\fIITIMER_VIRTUAL \fP\fP
.TP
\fB\fIITIMER_PROF \fP\fP

.SS "enum \fB__priority_which\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIPRIO_PROCESS \fP\fP
.TP
\fB\fIPRIO_PGRP \fP\fP
.TP
\fB\fIPRIO_USER \fP\fP
.TP
\fB\fIPRIO_PROCESS \fP\fP
.TP
\fB\fIPRIO_PGRP \fP\fP
.TP
\fB\fIPRIO_USER \fP\fP

.SS "enum \fB__rusage_who\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIRUSAGE_SELF \fP\fP
.TP
\fB\fIRUSAGE_CHILDREN \fP\fP
.TP
\fB\fIRUSAGE_THREAD \fP\fP
.TP
\fB\fIRUSAGE_SELF \fP\fP
.TP
\fB\fIRUSAGE_CHILDREN \fP\fP
.TP
\fB\fIRUSAGE_THREAD \fP\fP

.SS "enum \fB__socket_type\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fISOCK_STREAM \fP\fP
.TP
\fB\fISOCK_DGRAM \fP\fP
.TP
\fB\fISOCK_RAW \fP\fP
.TP
\fB\fISOCK_RDM \fP\fP
.TP
\fB\fISOCK_SEQPACKET \fP\fP
.TP
\fB\fISOCK_PACKET \fP\fP
.TP
\fB\fISOCK_STREAM \fP\fP
.TP
\fB\fISOCK_DGRAM \fP\fP
.TP
\fB\fISOCK_RAW \fP\fP
.TP
\fB\fISOCK_RDM \fP\fP
.TP
\fB\fISOCK_SEQPACKET \fP\fP
.TP
\fB\fISOCK_PACKET \fP\fP

.SS "enum \fB_buddy_cmnd\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIUPK_CTRL_NONE \fP\fP
unset 
.TP
\fB\fIUPK_CTRL_ACK \fP\fP
controller received the last msg buddy sent it 
.TP
\fB\fIUPK_CTRL_SHUTDOWN \fP\fP
buddy shutdown 
.TP
\fB\fIUPK_CTRL_STATUS_REQ \fP\fP
report status to controller 
.TP
\fB\fIUPK_CTRL_ACTION_START \fP\fP
.TP
\fB\fIUPK_CTRL_ACTION_STOP \fP\fP
run stop script, which should kill the monitored process 
.TP
\fB\fIUPK_CTRL_ACTION_RELOAD \fP\fP
run reload script, which could, for example, send SIGHUP 
.TP
\fB\fIUPK_CTRL_ACTION_RUNONCE \fP\fP
run a monitored process in a restarter... only once... ??? 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_00 \fP\fP
run user-defined action 00 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_01 \fP\fP
run user-defined action 01 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_02 \fP\fP
run user-defined action 02 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_03 \fP\fP
run user-defined action 03 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_04 \fP\fP
run user-defined action 04 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_05 \fP\fP
run user-defined action 05 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_06 \fP\fP
run user-defined action 06 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_07 \fP\fP
run user-defined action 07 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_08 \fP\fP
run user-defined action 08 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_09 \fP\fP
run user-defined action 09 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_10 \fP\fP
run user-defined action 10 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_11 \fP\fP
run user-defined action 11 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_12 \fP\fP
run user-defined action 12 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_13 \fP\fP
run user-defined action 13 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_14 \fP\fP
run user-defined action 14 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_15 \fP\fP
run user-defined action 15 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_16 \fP\fP
run user-defined action 16 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_17 \fP\fP
run user-defined action 17 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_18 \fP\fP
run user-defined action 18 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_19 \fP\fP
run user-defined action 19 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_20 \fP\fP
run user-defined action 20 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_21 \fP\fP
run user-defined action 21 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_22 \fP\fP
run user-defined action 22 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_23 \fP\fP
run user-defined action 23 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_24 \fP\fP
run user-defined action 24 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_25 \fP\fP
run user-defined action 25 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_26 \fP\fP
run user-defined action 26 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_27 \fP\fP
run user-defined action 27 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_28 \fP\fP
run user-defined action 28 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_29 \fP\fP
run user-defined action 29 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_30 \fP\fP
run user-defined action 30 
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_31 \fP\fP
run user-defined action 31 
.TP
\fB\fIUPK_CTRL_SIGNAL_01 \fP\fP
send managed process signal 01 
.TP
\fB\fIUPK_CTRL_SIGNAL_02 \fP\fP
send managed process signal 02 
.TP
\fB\fIUPK_CTRL_SIGNAL_03 \fP\fP
send managed process signal 03 
.TP
\fB\fIUPK_CTRL_SIGNAL_04 \fP\fP
send managed process signal 04 
.TP
\fB\fIUPK_CTRL_SIGNAL_05 \fP\fP
send managed process signal 05 
.TP
\fB\fIUPK_CTRL_SIGNAL_06 \fP\fP
send managed process signal 06 
.TP
\fB\fIUPK_CTRL_SIGNAL_07 \fP\fP
send managed process signal 07 
.TP
\fB\fIUPK_CTRL_SIGNAL_08 \fP\fP
send managed process signal 08 
.TP
\fB\fIUPK_CTRL_SIGNAL_09 \fP\fP
send managed process signal 09 
.TP
\fB\fIUPK_CTRL_SIGNAL_10 \fP\fP
send managed process signal 10 
.TP
\fB\fIUPK_CTRL_SIGNAL_11 \fP\fP
send managed process signal 11 
.TP
\fB\fIUPK_CTRL_SIGNAL_12 \fP\fP
send managed process signal 12 
.TP
\fB\fIUPK_CTRL_SIGNAL_13 \fP\fP
send managed process signal 13 
.TP
\fB\fIUPK_CTRL_SIGNAL_14 \fP\fP
send managed process signal 14 
.TP
\fB\fIUPK_CTRL_SIGNAL_15 \fP\fP
send managed process signal 15 
.TP
\fB\fIUPK_CTRL_SIGNAL_16 \fP\fP
send managed process signal 16 
.TP
\fB\fIUPK_CTRL_SIGNAL_17 \fP\fP
send managed process signal 17 
.TP
\fB\fIUPK_CTRL_SIGNAL_18 \fP\fP
send managed process signal 18 
.TP
\fB\fIUPK_CTRL_SIGNAL_19 \fP\fP
send managed process signal 19 
.TP
\fB\fIUPK_CTRL_SIGNAL_20 \fP\fP
send managed process signal 20 
.TP
\fB\fIUPK_CTRL_SIGNAL_21 \fP\fP
send managed process signal 21 
.TP
\fB\fIUPK_CTRL_SIGNAL_22 \fP\fP
send managed process signal 22 
.TP
\fB\fIUPK_CTRL_SIGNAL_23 \fP\fP
send managed process signal 23 
.TP
\fB\fIUPK_CTRL_SIGNAL_24 \fP\fP
send managed process signal 24 
.TP
\fB\fIUPK_CTRL_SIGNAL_25 \fP\fP
send managed process signal 25 
.TP
\fB\fIUPK_CTRL_SIGNAL_26 \fP\fP
send managed process signal 26 
.TP
\fB\fIUPK_CTRL_SIGNAL_27 \fP\fP
send managed process signal 27 
.TP
\fB\fIUPK_CTRL_SIGNAL_28 \fP\fP
send managed process signal 28 
.TP
\fB\fIUPK_CTRL_SIGNAL_29 \fP\fP
send managed process signal 29 
.TP
\fB\fIUPK_CTRL_SIGNAL_30 \fP\fP
send managed process signal 30 
.TP
\fB\fIUPK_CTRL_SIGNAL_31 \fP\fP
send managed process signal 31 
.TP
\fB\fIUPK_CTRL_SIGNAL_32 \fP\fP
send managed process signal 32 
.TP
\fB\fIUPK_CTRL_NONE \fP\fP
.TP
\fB\fIUPK_CTRL_ACK \fP\fP
.TP
\fB\fIUPK_CTRL_SHUTDOWN \fP\fP
.TP
\fB\fIUPK_CTRL_STATUS_REQ \fP\fP
.TP
\fB\fIUPK_CTRL_ACTION_START \fP\fP
.TP
\fB\fIUPK_CTRL_ACTION_STOP \fP\fP
.TP
\fB\fIUPK_CTRL_ACTION_RELOAD \fP\fP
.TP
\fB\fIUPK_CTRL_ACTION_RUNONCE \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_00 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_01 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_02 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_03 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_04 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_05 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_06 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_07 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_08 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_09 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_10 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_11 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_12 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_13 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_14 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_15 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_16 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_17 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_18 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_19 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_20 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_21 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_22 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_23 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_24 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_25 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_26 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_27 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_28 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_29 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_30 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_31 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_01 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_02 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_03 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_04 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_05 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_06 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_07 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_08 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_09 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_10 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_11 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_12 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_13 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_14 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_15 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_16 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_17 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_18 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_19 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_20 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_21 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_22 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_23 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_24 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_25 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_26 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_27 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_28 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_29 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_30 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_31 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_32 \fP\fP
.TP
\fB\fIUPK_CTRL_NONE \fP\fP
.TP
\fB\fIUPK_CTRL_ACK \fP\fP
.TP
\fB\fIUPK_CTRL_SHUTDOWN \fP\fP
.TP
\fB\fIUPK_CTRL_STATUS_REQ \fP\fP
.TP
\fB\fIUPK_CTRL_ACTION_START \fP\fP
.TP
\fB\fIUPK_CTRL_ACTION_STOP \fP\fP
.TP
\fB\fIUPK_CTRL_ACTION_RELOAD \fP\fP
.TP
\fB\fIUPK_CTRL_ACTION_RUNONCE \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_00 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_01 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_02 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_03 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_04 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_05 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_06 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_07 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_08 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_09 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_10 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_11 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_12 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_13 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_14 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_15 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_16 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_17 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_18 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_19 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_20 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_21 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_22 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_23 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_24 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_25 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_26 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_27 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_28 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_29 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_30 \fP\fP
.TP
\fB\fIUPK_CTRL_CUSTOM_ACTION_31 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_01 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_02 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_03 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_04 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_05 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_06 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_07 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_08 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_09 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_10 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_11 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_12 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_13 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_14 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_15 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_16 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_17 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_18 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_19 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_20 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_21 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_22 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_23 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_24 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_25 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_26 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_27 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_28 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_29 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_30 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_31 \fP\fP
.TP
\fB\fIUPK_CTRL_SIGNAL_32 \fP\fP

.SS "enum \fB_upk_msgtype\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIUPK_REQ_ORIGIN \fP\fP
.TP
\fB\fIUPK_REQ_PREAMBLE \fP\fP
.TP
\fB\fIUPK_REQ_SEQ_START \fP\fP
.TP
\fB\fIUPK_REQ_SEQ_END \fP\fP
.TP
\fB\fIUPK_REQ_ACTION \fP\fP
.TP
\fB\fIUPK_REQ_SIGNAL \fP\fP
.TP
\fB\fIUPK_REQ_LIST \fP\fP
.TP
\fB\fIUPK_REQ_STATUS \fP\fP
.TP
\fB\fIUPK_REQ_SUBSCRIBE \fP\fP
.TP
\fB\fIUPK_REQ_UNSUBSCRIBE \fP\fP
.TP
\fB\fIUPK_REQ_DISCONNECT \fP\fP
.TP
\fB\fIUPK_REQ_V0_PROTO_LIMIT \fP\fP
.TP
\fB\fIUPK_REQ_LIMIT \fP\fP
.TP
\fB\fIUPK_REPL_ORIGIN \fP\fP
.TP
\fB\fIUPK_REPL_PREAMBLE \fP\fP
.TP
\fB\fIUPK_REPL_SEQ_START \fP\fP
.TP
\fB\fIUPK_REPL_SEQ_END \fP\fP
.TP
\fB\fIUPK_REPL_RESULT \fP\fP
.TP
\fB\fIUPK_REPL_LISTING \fP\fP
.TP
\fB\fIUPK_REPL_SVCINFO \fP\fP
.TP
\fB\fIUPK_REPL_ACK \fP\fP
.TP
\fB\fIUPK_REPL_ERROR \fP\fP
.TP
\fB\fIUPK_REPL_V0_PROTO_LIMIT \fP\fP
.TP
\fB\fIUPK_REPL_LIMIT \fP\fP
.TP
\fB\fIUPK_PUB_ORIGIN \fP\fP
.TP
\fB\fIUPK_PUB_PUBLICATION \fP\fP
.TP
\fB\fIUPK_PUB_CANCELATION \fP\fP
.TP
\fB\fIUPK_PUB_V0_PROTO_LIMIT \fP\fP
.TP
\fB\fIUPK_PUB_LIMIT \fP\fP
.TP
\fB\fIUPK_REQ_ORIGIN \fP\fP
idenitfy start of range 
.TP
\fB\fIUPK_REQ_PREAMBLE \fP\fP
A preamble message, used to negotiate version, and handshake 
.TP
\fB\fIUPK_REQ_SEQ_START \fP\fP
The start of a request sequence 
.TP
\fB\fIUPK_REQ_SEQ_END \fP\fP
the end of a request sequence 
.TP
\fB\fIUPK_REQ_ACTION \fP\fP
An action request (e.g. start, stop, reload, or custom actions) 
.TP
\fB\fIUPK_REQ_SIGNAL \fP\fP
a signal request (e.g. send signal N) 
.TP
\fB\fIUPK_REQ_LIST \fP\fP
A listing request. for a listing of all service-ids known to the controller 
.TP
\fB\fIUPK_REQ_STATUS \fP\fP
A status request, to get information on a particular service 
.TP
\fB\fIUPK_REQ_SUBSCRIBE \fP\fP
subscribe to a feed of status updates 
.TP
\fB\fIUPK_REQ_UNSUBSCRIBE \fP\fP
unsubscribe from a feed of status updates 
.TP
\fB\fIUPK_REQ_DISCONNECT \fP\fP
notify controller of your intent to disconnect 
.TP
\fB\fIUPK_REQ_V0_PROTO_LIMIT \fP\fP
all valid v0 requests are < this 
.TP
\fB\fIUPK_REQ_LIMIT \fP\fP
all requests are < this 
.TP
\fB\fIUPK_REPL_ORIGIN \fP\fP
identify start of range 
.TP
\fB\fIUPK_REPL_PREAMBLE \fP\fP
the reply to a preamble request, used to send back what the server decided was the best protocol, and complete the handshake 
.TP
\fB\fIUPK_REPL_SEQ_START \fP\fP
the start of a sequence of replies 
.TP
\fB\fIUPK_REPL_SEQ_END \fP\fP
the end of a sequence of replies 
.TP
\fB\fIUPK_REPL_RESULT \fP\fP
the result of an action or signal request (or anything else that might benefit from a result msg 
.TP
\fB\fIUPK_REPL_LISTING \fP\fP
the name of a service in a sequence listing all services 
.TP
\fB\fIUPK_REPL_SVCINFO \fP\fP
all the information known about a service 
.TP
\fB\fIUPK_REPL_ACK \fP\fP
an ack, when nothing else really fits, but a reply is still mandated 
.TP
\fB\fIUPK_REPL_ERROR \fP\fP
report an error to the client, for instance, if the named service doesn't exist, or an action doesn't exist, etc 
.TP
\fB\fIUPK_REPL_V0_PROTO_LIMIT \fP\fP
All valid v0 replies are < this 
.TP
\fB\fIUPK_REPL_LIMIT \fP\fP
All replies are < this 
.TP
\fB\fIUPK_PUB_ORIGIN \fP\fP
pub origin 
.TP
\fB\fIUPK_PUB_PUBLICATION \fP\fP
a message sent from the controller to a subscriber, followed by svcinfo packets for all subscribed services 
.TP
\fB\fIUPK_PUB_CANCELATION \fP\fP
notification that a particular service is no longer available to subscribe to, for instance if its been removed 
.TP
\fB\fIUPK_PUB_V0_PROTO_LIMIT \fP\fP
All valid pub v0 publication messages are < this 
.TP
\fB\fIUPK_PUB_LIMIT \fP\fP
All publication messages are < this 
.TP
\fB\fIUPK_REQ_ORIGIN \fP\fP
.TP
\fB\fIUPK_REQ_PREAMBLE \fP\fP
.TP
\fB\fIUPK_REQ_SEQ_START \fP\fP
.TP
\fB\fIUPK_REQ_SEQ_END \fP\fP
.TP
\fB\fIUPK_REQ_ACTION \fP\fP
.TP
\fB\fIUPK_REQ_SIGNAL \fP\fP
.TP
\fB\fIUPK_REQ_LIST \fP\fP
.TP
\fB\fIUPK_REQ_STATUS \fP\fP
.TP
\fB\fIUPK_REQ_SUBSCRIBE \fP\fP
.TP
\fB\fIUPK_REQ_UNSUBSCRIBE \fP\fP
.TP
\fB\fIUPK_REQ_DISCONNECT \fP\fP
.TP
\fB\fIUPK_REQ_V0_PROTO_LIMIT \fP\fP
.TP
\fB\fIUPK_REQ_LIMIT \fP\fP
.TP
\fB\fIUPK_REPL_ORIGIN \fP\fP
.TP
\fB\fIUPK_REPL_PREAMBLE \fP\fP
.TP
\fB\fIUPK_REPL_SEQ_START \fP\fP
.TP
\fB\fIUPK_REPL_SEQ_END \fP\fP
.TP
\fB\fIUPK_REPL_RESULT \fP\fP
.TP
\fB\fIUPK_REPL_LISTING \fP\fP
.TP
\fB\fIUPK_REPL_SVCINFO \fP\fP
.TP
\fB\fIUPK_REPL_ACK \fP\fP
.TP
\fB\fIUPK_REPL_ERROR \fP\fP
.TP
\fB\fIUPK_REPL_V0_PROTO_LIMIT \fP\fP
.TP
\fB\fIUPK_REPL_LIMIT \fP\fP
.TP
\fB\fIUPK_PUB_ORIGIN \fP\fP
.TP
\fB\fIUPK_PUB_PUBLICATION \fP\fP
.TP
\fB\fIUPK_PUB_CANCELATION \fP\fP
.TP
\fB\fIUPK_PUB_V0_PROTO_LIMIT \fP\fP
.TP
\fB\fIUPK_PUB_LIMIT \fP\fP

.SS "enum \fBbuddy_runstate_t\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIBUDDY_UNKNOWN \fP\fP
.TP
\fB\fIBUDDY_STOPPED \fP\fP
the current state of the managed process is stopped 
.TP
\fB\fIBUDDY_RUNNING \fP\fP
the current state of the managed process is running 
.TP
\fB\fIBUDDY_RANONCE \fP\fP
the current state of the managed process was that it ran once 
.TP
\fB\fIBUDDY_UNKNOWN \fP\fP
.TP
\fB\fIBUDDY_STOPPED \fP\fP
.TP
\fB\fIBUDDY_RUNNING \fP\fP
.TP
\fB\fIBUDDY_RANONCE \fP\fP
.TP
\fB\fIBUDDY_UNKNOWN \fP\fP
.TP
\fB\fIBUDDY_STOPPED \fP\fP
.TP
\fB\fIBUDDY_RUNNING \fP\fP
.TP
\fB\fIBUDDY_RANONCE \fP\fP

.SS "enum \fBidtype_t\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIP_ALL \fP\fP
.TP
\fB\fIP_PID \fP\fP
.TP
\fB\fIP_PGID \fP\fP
.TP
\fB\fIP_ALL \fP\fP
.TP
\fB\fIP_PID \fP\fP
.TP
\fB\fIP_PGID \fP\fP

.SS "enum \fBupk_diaglvl_t\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIUPK_DIAGLVL_FATAL \fP\fP
.TP
\fB\fIUPK_DIAGLVL_ALERT \fP\fP
.TP
\fB\fIUPK_DIAGLVL_CRIT \fP\fP
.TP
\fB\fIUPK_DIAGLVL_ERROR \fP\fP
.TP
\fB\fIUPK_DIAGLVL_WARN \fP\fP
.TP
\fB\fIUPK_DIAGLVL_NOTICE \fP\fP
.TP
\fB\fIUPK_DIAGLVL_VERBOSE \fP\fP
.TP
\fB\fIUPK_DIAGLVL_INFO \fP\fP
.TP
\fB\fIUPK_DIAGLVL_DEBUG0 \fP\fP
.TP
\fB\fIUPK_DIAGLVL_DEBUG1 \fP\fP
.TP
\fB\fIUPK_DIAGLVL_FATAL \fP\fP
fatal error, operation cannot continue 
.TP
\fB\fIUPK_DIAGLVL_ALERT \fP\fP
alert; something really bad happened, but we believe we can continue 
.TP
\fB\fIUPK_DIAGLVL_CRIT \fP\fP
critical; something really bad happened, that probably shouldn't happen; we can continue 
.TP
\fB\fIUPK_DIAGLVL_ERROR \fP\fP
An error occurred. 
.TP
\fB\fIUPK_DIAGLVL_WARN \fP\fP
A warning, serious, but not too serious 
.TP
\fB\fIUPK_DIAGLVL_NOTICE \fP\fP
Something you might want to notice; possibly normal operation 
.TP
\fB\fIUPK_DIAGLVL_VERBOSE \fP\fP
verbose, probably normal operation 
.TP
\fB\fIUPK_DIAGLVL_INFO \fP\fP
information, definitely normal operation, intended to aid in troubleshooting user-configurable things 
.TP
\fB\fIUPK_DIAGLVL_DEBUG0 \fP\fP
debug0, intended to help find bugs in the program; but may also help in finding configuration or environment problems 
.TP
\fB\fIUPK_DIAGLVL_DEBUG1 \fP\fP
debug1, useful in finding and demonstrating bugs in the program (you should probably be using gdb by this point) 
.TP
\fB\fIUPK_DIAGLVL_FATAL \fP\fP
.TP
\fB\fIUPK_DIAGLVL_ALERT \fP\fP
.TP
\fB\fIUPK_DIAGLVL_CRIT \fP\fP
.TP
\fB\fIUPK_DIAGLVL_ERROR \fP\fP
.TP
\fB\fIUPK_DIAGLVL_WARN \fP\fP
.TP
\fB\fIUPK_DIAGLVL_NOTICE \fP\fP
.TP
\fB\fIUPK_DIAGLVL_VERBOSE \fP\fP
.TP
\fB\fIUPK_DIAGLVL_INFO \fP\fP
.TP
\fB\fIUPK_DIAGLVL_DEBUG0 \fP\fP
.TP
\fB\fIUPK_DIAGLVL_DEBUG1 \fP\fP

.SS "enum \fBupk_errlevel_t\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIUPK_ERRLVL_ERROR \fP\fP
.TP
\fB\fIUPK_ERRLVL_ERROR \fP\fP
semantically similar to diaglvl; but for error-reporting; may become purely protocol 
.TP
\fB\fIUPK_ERRLVL_ERROR \fP\fP

.SS "enum \fBupk_errno_t\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIUPK_ERR_UNKNOWN \fP\fP
.TP
\fB\fIUPK_ERR_UNSUP \fP\fP
.TP
\fB\fIUPK_ERR_INVALID_PKT \fP\fP
.TP
\fB\fIUPK_SOCKET_FAILURE \fP\fP
.TP
\fB\fIUPK_JSON_PARSE_ERROR \fP\fP
.TP
\fB\fIUPK_SQL_ERROR \fP\fP
.TP
\fB\fIUPK_CONF_ERROR \fP\fP
.TP
\fB\fIUPK_ERR_UNKNOWN \fP\fP
unknown error 
.TP
\fB\fIUPK_ERR_UNSUP \fP\fP
unsupported 
.TP
\fB\fIUPK_ERR_INVALID_PKT \fP\fP
invalid packet, possibly invalid protocol, packet dimensions, or checksum 
.TP
\fB\fIUPK_SOCKET_FAILURE \fP\fP
unable to bind/connect/accept/listen on a socket 
.TP
\fB\fIUPK_JSON_PARSE_ERROR \fP\fP
json parse error; additional information should also be provided 
.TP
\fB\fIUPK_SQL_ERROR \fP\fP
SQLite Error 
.TP
\fB\fIUPK_CONF_ERROR \fP\fP
Configuration error 
.TP
\fB\fIUPK_ERR_UNKNOWN \fP\fP
.TP
\fB\fIUPK_ERR_UNSUP \fP\fP
.TP
\fB\fIUPK_ERR_INVALID_PKT \fP\fP
.TP
\fB\fIUPK_SOCKET_FAILURE \fP\fP
.TP
\fB\fIUPK_JSON_PARSE_ERROR \fP\fP
.TP
\fB\fIUPK_SQL_ERROR \fP\fP
.TP
\fB\fIUPK_CONF_ERROR \fP\fP

.SS "enum \fBupk_pkttype_t\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIPKT_REQUEST \fP\fP
.TP
\fB\fIPKT_REPLY \fP\fP
.TP
\fB\fIPKT_PUBMSG \fP\fP
.TP
\fB\fIPKT_V0_PROTO_LIMIT \fP\fP
.TP
\fB\fIPKT_REQUEST \fP\fP
.TP
\fB\fIPKT_REPLY \fP\fP
.TP
\fB\fIPKT_PUBMSG \fP\fP
.TP
\fB\fIPKT_V0_PROTO_LIMIT \fP\fP
.TP
\fB\fIPKT_REQUEST \fP\fP
.TP
\fB\fIPKT_REPLY \fP\fP
.TP
\fB\fIPKT_PUBMSG \fP\fP
.TP
\fB\fIPKT_V0_PROTO_LIMIT \fP\fP

.SS "enum \fBupk_signal_t\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIUPK_SIG_HUP \fP\fP
.TP
\fB\fIUPK_SIG_INT \fP\fP
.TP
\fB\fIUPK_SIG_QUIT \fP\fP
.TP
\fB\fIUPK_SIG_ILL \fP\fP
.TP
\fB\fIUPK_SIG_TRAP \fP\fP
.TP
\fB\fIUPK_SIG_ABRT \fP\fP
.TP
\fB\fIUPK_SIG_BUS \fP\fP
.TP
\fB\fIUPK_SIG_FPE \fP\fP
.TP
\fB\fIUPK_SIG_KILL \fP\fP
.TP
\fB\fIUPK_SIG_USR1 \fP\fP
.TP
\fB\fIUPK_SIG_SEGV \fP\fP
.TP
\fB\fIUPK_SIG_USR2 \fP\fP
.TP
\fB\fIUPK_SIG_PIPE \fP\fP
.TP
\fB\fIUPK_SIG_ALRM \fP\fP
.TP
\fB\fIUPK_SIG_TERM \fP\fP
.TP
\fB\fIUPK_SIG_STKFLT \fP\fP
.TP
\fB\fIUPK_SIG_CHLD \fP\fP
.TP
\fB\fIUPK_SIG_CONT \fP\fP
.TP
\fB\fIUPK_SIG_STOP \fP\fP
.TP
\fB\fIUPK_SIG_TSTP \fP\fP
.TP
\fB\fIUPK_SIG_TTIN \fP\fP
.TP
\fB\fIUPK_SIG_TTOU \fP\fP
.TP
\fB\fIUPK_SIG_URG \fP\fP
.TP
\fB\fIUPK_SIG_XCPU \fP\fP
.TP
\fB\fIUPK_SIG_XFSZ \fP\fP
.TP
\fB\fIUPK_SIG_VTALRM \fP\fP
.TP
\fB\fIUPK_SIG_PROF \fP\fP
.TP
\fB\fIUPK_SIG_WINCH \fP\fP
.TP
\fB\fIUPK_SIG_IO \fP\fP
.TP
\fB\fIUPK_SIG_PWR \fP\fP
.TP
\fB\fIUPK_SIG_SYS \fP\fP
.TP
\fB\fIUPK_SIG_HUP \fP\fP
hup 
.TP
\fB\fIUPK_SIG_INT \fP\fP
int 
.TP
\fB\fIUPK_SIG_QUIT \fP\fP
quit 
.TP
\fB\fIUPK_SIG_ILL \fP\fP
ill 
.TP
\fB\fIUPK_SIG_TRAP \fP\fP
trap 
.TP
\fB\fIUPK_SIG_ABRT \fP\fP
abrt 
.TP
\fB\fIUPK_SIG_BUS \fP\fP
bus 
.TP
\fB\fIUPK_SIG_FPE \fP\fP
fpe 
.TP
\fB\fIUPK_SIG_KILL \fP\fP
kill 
.TP
\fB\fIUPK_SIG_USR1 \fP\fP
usr1 
.TP
\fB\fIUPK_SIG_SEGV \fP\fP
segv 
.TP
\fB\fIUPK_SIG_USR2 \fP\fP
usr2 
.TP
\fB\fIUPK_SIG_PIPE \fP\fP
pipe 
.TP
\fB\fIUPK_SIG_ALRM \fP\fP
alrm 
.TP
\fB\fIUPK_SIG_TERM \fP\fP
term 
.TP
\fB\fIUPK_SIG_STKFLT \fP\fP
stkflt 
.TP
\fB\fIUPK_SIG_CHLD \fP\fP
chld 
.TP
\fB\fIUPK_SIG_CONT \fP\fP
cont 
.TP
\fB\fIUPK_SIG_STOP \fP\fP
stop 
.TP
\fB\fIUPK_SIG_TSTP \fP\fP
tstp 
.TP
\fB\fIUPK_SIG_TTIN \fP\fP
ttin 
.TP
\fB\fIUPK_SIG_TTOU \fP\fP
ttou 
.TP
\fB\fIUPK_SIG_URG \fP\fP
urg 
.TP
\fB\fIUPK_SIG_XCPU \fP\fP
xcpu 
.TP
\fB\fIUPK_SIG_XFSZ \fP\fP
xfsz 
.TP
\fB\fIUPK_SIG_VTALRM \fP\fP
vtalrm 
.TP
\fB\fIUPK_SIG_PROF \fP\fP
prof 
.TP
\fB\fIUPK_SIG_WINCH \fP\fP
winch 
.TP
\fB\fIUPK_SIG_IO \fP\fP
io 
.TP
\fB\fIUPK_SIG_PWR \fP\fP
pwr 
.TP
\fB\fIUPK_SIG_SYS \fP\fP
sys 
.TP
\fB\fIUPK_SIG_HUP \fP\fP
.TP
\fB\fIUPK_SIG_INT \fP\fP
.TP
\fB\fIUPK_SIG_QUIT \fP\fP
.TP
\fB\fIUPK_SIG_ILL \fP\fP
.TP
\fB\fIUPK_SIG_TRAP \fP\fP
.TP
\fB\fIUPK_SIG_ABRT \fP\fP
.TP
\fB\fIUPK_SIG_BUS \fP\fP
.TP
\fB\fIUPK_SIG_FPE \fP\fP
.TP
\fB\fIUPK_SIG_KILL \fP\fP
.TP
\fB\fIUPK_SIG_USR1 \fP\fP
.TP
\fB\fIUPK_SIG_SEGV \fP\fP
.TP
\fB\fIUPK_SIG_USR2 \fP\fP
.TP
\fB\fIUPK_SIG_PIPE \fP\fP
.TP
\fB\fIUPK_SIG_ALRM \fP\fP
.TP
\fB\fIUPK_SIG_TERM \fP\fP
.TP
\fB\fIUPK_SIG_STKFLT \fP\fP
.TP
\fB\fIUPK_SIG_CHLD \fP\fP
.TP
\fB\fIUPK_SIG_CONT \fP\fP
.TP
\fB\fIUPK_SIG_STOP \fP\fP
.TP
\fB\fIUPK_SIG_TSTP \fP\fP
.TP
\fB\fIUPK_SIG_TTIN \fP\fP
.TP
\fB\fIUPK_SIG_TTOU \fP\fP
.TP
\fB\fIUPK_SIG_URG \fP\fP
.TP
\fB\fIUPK_SIG_XCPU \fP\fP
.TP
\fB\fIUPK_SIG_XFSZ \fP\fP
.TP
\fB\fIUPK_SIG_VTALRM \fP\fP
.TP
\fB\fIUPK_SIG_PROF \fP\fP
.TP
\fB\fIUPK_SIG_WINCH \fP\fP
.TP
\fB\fIUPK_SIG_IO \fP\fP
.TP
\fB\fIUPK_SIG_PWR \fP\fP
.TP
\fB\fIUPK_SIG_SYS \fP\fP

.SS "enum \fBupk_state_t\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIUPK_STATE_UNDEFINED \fP\fP
.TP
\fB\fIUPK_STATE_RUNNING \fP\fP
.TP
\fB\fIUPK_STATE_STOPPED \fP\fP
.TP
\fB\fIUPK_STATE_SHUTDOWN \fP\fP
.TP
\fB\fIUPK_STATE_UNDEFINED \fP\fP
unknown/undefined; probably an error 
.TP
\fB\fIUPK_STATE_RUNNING \fP\fP
the service is running 
.TP
\fB\fIUPK_STATE_STOPPED \fP\fP
the service is stopped 
.TP
\fB\fIUPK_STATE_SHUTDOWN \fP\fP
the service is stopped, and its buddy is not running 
.TP
\fB\fIUPK_STATE_UNDEFINED \fP\fP
.TP
\fB\fIUPK_STATE_RUNNING \fP\fP
.TP
\fB\fIUPK_STATE_STOPPED \fP\fP
.TP
\fB\fIUPK_STATE_SHUTDOWN \fP\fP

.SH "Function Documentation"
.PP 
.SS "void __assert (const char *__assertion, const char *__file, int__line)"
.SS "void __assert_fail (__const char *__assertion, __const char *__file, unsigned int__line, __const char *__function)"
.SS "void __assert_perror_fail (int__errnum, __const char *__file, unsigned int__line, __const char *__function)"
.SS "__extension__ __inline unsigned int __attribute__ ((__nothrow__))"
.SS "struct \fBcmsghdr\fP* __cmsg_nxthdr (struct \fBmsghdr\fP *__mhdr, struct \fBcmsghdr\fP *__cmsg)\fC [read]\fP"
.SS "__const unsigned short int** __ctype_b_loc (void)"
.SS "\fBsize_t\fP __ctype_get_mb_cur_max (void)"
.SS "int* __errno_location (void)"
.SS "int __libc_current_sigrtmin (void)"
.SS "int __overflow (\fB_IO_FILE\fP *, int)"
.SS "long int unsigned long int __extension__ long long int __extension__ unsigned long long int double float long double double __strtod_internal (__const char *__restrict__nptr, char **__restrict__endptr, int__group)"
.SS "float __strtof_internal (__const char *__restrict__nptr, char **__restrict__endptr, int__group)"
.SS "long int __strtol_internal (__const char *__restrict__nptr, char **__restrict__endptr, int__base, int__group)"
.SS "long double __strtold_internal (__const char *__restrict__nptr, char **__restrict__endptr, int__group)"
.SS "__extension__ long long int __strtoll_internal (__const char *__restrict__nptr, char **__restrict__endptr, int__base, int__group)"
.SS "unsigned long int __strtoul_internal (__const char *__restrict__nptr, char **__restrict__endptr, int__base, int__group)"
.SS "__extension__ unsigned long long int __strtoull_internal (__const char *__restrict__nptr, char **__restrict__endptr, int__base, int__group)"
.SS "int __uflow (\fB_IO_FILE\fP *)"
.SS "int __underflow (\fB_IO_FILE\fP *)"
.SS "\fBwint_t\fP __woverflow (\fB_IO_FILE\fP *, \fBwint_t\fP)"
.SS "\fBwint_t\fP __wuflow (\fB_IO_FILE\fP *)"
.SS "\fBwint_t\fP __wunderflow (\fB_IO_FILE\fP *)"
.SS "char* __xpg_basename (char *__path)"
.SS "void _IO_cookie_init (struct _IO_cookie_file *__cfile, int__read_write, void *__cookie, \fB_IO_cookie_io_functions_t\fP__fns)"
.SS "int _IO_feof (\fB_IO_FILE\fP *__fp)"
.SS "int _IO_ferror (\fB_IO_FILE\fP *__fp)"
.SS "void _IO_flockfile (\fB_IO_FILE\fP *)"
.SS "int _IO_getc (\fB_IO_FILE\fP *__fp)"
.SS "int _IO_peekc_locked (\fB_IO_FILE\fP *__fp)"
.SS "int _IO_putc (int__c, \fB_IO_FILE\fP *__fp)"
.SS "long int a64l (__const char *__s)"
.SS "void abort (extern int              on_exit( (*__func) (int __statusvoid)"
.SS "int accept (int__fd, \fB__SOCKADDR_ARG\fP__addr, socklen_t *__restrict__addr_len)"
.SS "int adjtime (__const struct \fBtimeval\fP *__delta, struct \fBtimeval\fP *__olddelta)"
.SS "void* alloca (\fBsize_t\fP__size)"
.SS "int int int alphasort (__const void *__e1, __const void *__e2)"
.SS "int int int int alphasort64 (__const void *__e1, __const void *__e2)"
.SS "int bind (int__fd, \fB__CONST_SOCKADDR_ARG\fP__addr, socklen_t__len)"
.SS "int bindresvport (int__sockfd, struct \fBsockaddr_in\fP *__sock_in)"
.SS "int bindresvport6 (int__sockfd, struct \fBsockaddr_in6\fP *__sock_in)"
.SS "int buddy_connect (const char *sockpath)"
.PP
References connect(), SOCK_STREAM, socket(), sockaddr_un::sun_family, sockaddr_un::sun_path, and upk_alert.
.SS "\fBbuddy_info_t\fP* buddy_readstate (intfd)"
.PP
References _buddy_info::command, _buddy_info::desired_state, _buddy_info::remaining, select(), _buddy_info::service_pid, _buddy_info::timestamp, timeval::tv_sec, timeval::tv_usec, UPK_CTRL_ACK, upk_debug0, upk_debug1, upk_uuid_to_string(), _buddy_info::uuid, _buddy_info::wait_pid, and _buddy_info::wait_status.
.SS "void* calloc (\fBsize_t\fP__nmemb, \fBsize_t\fP__size)"
.SS "void cfree (void *__ptr)"
.SS "int int int int int chmod (__const char *__file, \fB__mode_t\fP__mode)"
.SS "\fBclock_t\fP clock (void)"
.SS "int closedir (\fBDIR\fP *__dirp)"
.SS "\fBsize_t\fP confstr (int__name, char *__buf, \fBsize_t\fP__len)"
.SS "int connect (int__fd, \fB__CONST_SOCKADDR_ARG\fP__addr, socklen_t__len)"
.SS "int creat (__const char *__file, \fB__mode_t\fP__mode)"
.SS "int creat64 (__const char *__file, \fB__mode_t\fP__mode)"
.SS "void create_buddy (\fBupk_svc_desc_t\fP *buddy)"
.PP
References buddy_sock_path(), create_buddy_statedir(), spawn_buddy(), stat::st_mode, stat(), and UPK_MAX_PATH_LEN.
.SS "int32_t ctrl_sock_setup (void)"
.PP
setup controller's socket ***************************************************************************************************************** 
.PP
References bind(), _upk_controller_config::controller_socket, fcntl(), IF_UPK_ERROR, listen(), SOCK_STREAM, socket(), sockaddr_un::sun_family, sockaddr_un::sun_path, UPK_FUNC_ASSERT, UPK_FUNC_ASSERT_MSG, upk_runtime_configuration, and UPK_SOCKET_FAILURE.
.SS "int dirfd (\fBDIR\fP *__dirp)"
.SS "int int int int int int \fB__ssize_t\fP \fB__ssize_t\fP char* dirname (char *__path)"
.SS "int drand48_r (struct drand48_data *__restrict__buffer, double *__restrict__result)"
.SS "void endgrent (void)"
.SS "void endpwent (void)"
.SS "int int erand48_r (unsigned short int__xsubi[3], struct drand48_data *__restrict__buffer, double *__restrict__result)"
.SS "void event_loop (int32_tlisten_sock)"
.PP
the main event loop. ***************************************************************************************************************** This will handle signals, poll buddies, poll clients, publish events, and cleanup sockets. 
.PP
References _upk_controller_config::BuddyPollingInterval, ctrl_accept_conn(), ctrl_init(), handle_buddies(), handle_signals(), select(), upk_debug1, upk_net_event_dispatcher(), upk_net_flush_closed_sockets(), and upk_runtime_configuration.
.SS "int fchmod (int__fd, \fB__mode_t\fP__mode)"
.SS "int fchmodat (int__fd, __const char *__file, \fB__mode_t\fPmode, int__flag)"
.SS "int fcntl (int__fd, int__cmd, ...)"
.SS "\fBDIR\fP* fdopendir (int__fd)"
.SS "struct group* fgetgrent (\fBFILE\fP *__stream)\fC [read]\fP"
.SS "int fgetgrent_r (\fBFILE\fP *__restrict__stream, struct group *__restrict__resultbuf, char *__restrict__buffer, \fBsize_t\fP__buflen, struct group **__restrict__result)"
.SS "struct passwd* fgetpwent (\fBFILE\fP *__stream)\fC [read]\fP"
.SS "int fgetpwent_r (\fBFILE\fP *__restrict__stream, struct passwd *__restrict__resultbuf, char *__restrict__buffer, \fBsize_t\fP__buflen, struct passwd **__restrict__result)"
.SS "int \fBflock\fP (int__fd, int__operation)"
.SS "long int fpathconf (int__fd, int__name)"
.SS "void free (void *__ptr)"
.SS "int int fstat (int__fd, struct \fBstat\fP *__buf)"
.SS "int int fstat64 (int__fd, struct \fBstat64\fP *__buf)"
.SS "int fstatat (int__fd, __const char *__restrict__file, struct \fBstat\fP *__restrict__buf, int__flag)"
.SS "int int fstatat64 (int__fd, __const char *__restrict__file, struct \fBstat64\fP *__restrict__buf, int__flag)"
.SS "int futimes (int__fd, __const struct \fBtimeval\fP__tvp[2])"
.SS "int futimesat (int__fd, __const char *__file, __const struct \fBtimeval\fP__tvp[2])"
.SS "int int int int int int \fB__ssize_t\fP getdirentries (int__fd, char *__restrict__buf, \fBsize_t\fP__nbytes, \fB__off_t\fP *__restrict__basep)"
.SS "int int int int int int \fB__ssize_t\fP \fB__ssize_t\fP getdirentries64 (int__fd, char *__restrict__buf, \fBsize_t\fP__nbytes, \fB__off64_t\fP *__restrict__basep)"
.SS "struct group* getgrent (void)\fC [read]\fP"
.SS "int getgrent_r (struct group *__restrict__resultbuf, char *__restrict__buffer, \fBsize_t\fP__buflen, struct group **__restrict__result)"
.SS "struct group* getgrgid (\fB__gid_t\fP__gid)\fC [read]\fP"
.SS "int getgrgid_r (\fB__gid_t\fP__gid, struct group *__restrict__resultbuf, char *__restrict__buffer, \fBsize_t\fP__buflen, struct group **__restrict__result)"
.SS "struct group* getgrnam (__const char *__name)\fC [read]\fP"
.SS "int getgrnam_r (__const char *__restrict__name, struct group *__restrict__resultbuf, char *__restrict__buffer, \fBsize_t\fP__buflen, struct group **__restrict__result)"
.SS "int getgrouplist (__const char *__user, \fB__gid_t\fP__group, \fB__gid_t\fP *__groups, int *__ngroups)"
.SS "int getipv4sourcefilter (int__s, struct \fBin_addr\fP__interface_addr, struct \fBin_addr\fP__group, \fBuint32_t\fP *__fmode, \fBuint32_t\fP *__numsrc, struct \fBin_addr\fP *__slist)"
.SS "int getitimer (\fB__itimer_which_t\fP__which, struct \fBitimerval\fP *__value)"
.SS "int getpeername (int__fd, \fB__SOCKADDR_ARG\fP__addr, socklen_t *__restrict__len)"
.SS "\fB__pid_t\fP getpid (void)"
.SS "int getpriority (\fB__priority_which_t\fP__which, \fBid_t\fP__who)"
.SS "int getpw (\fB__uid_t\fP__uid, char *__buffer)"
.SS "struct passwd* getpwent (void)\fC [read]\fP"
.SS "int getpwent_r (struct passwd *__restrict__resultbuf, char *__restrict__buffer, \fBsize_t\fP__buflen, struct passwd **__restrict__result)"
.SS "struct passwd* getpwnam (__const char *__name)\fC [read]\fP"
.SS "int getpwnam_r (__const char *__restrict__name, struct passwd *__restrict__resultbuf, char *__restrict__buffer, \fBsize_t\fP__buflen, struct passwd **__restrict__result)"
.SS "struct passwd* getpwuid (\fB__uid_t\fP__uid)\fC [read]\fP"
.SS "int getpwuid_r (\fB__uid_t\fP__uid, struct passwd *__restrict__resultbuf, char *__restrict__buffer, \fBsize_t\fP__buflen, struct passwd **__restrict__result)"
.SS "int getrlimit (\fB__rlimit_resource_t\fP__resource, struct \fBrlimit\fP *__rlimits)"
.SS "int getrlimit64 (\fB__rlimit_resource_t\fP__resource, struct \fBrlimit64\fP *__rlimits)"
.SS "int getrusage (\fB__rusage_who_t\fP__who, struct \fBrusage\fP *__usage)"
.SS "int getsockname (int__fd, \fB__SOCKADDR_ARG\fP__addr, socklen_t *__restrict__len)"
.SS "int getsockopt (int__fd, int__level, int__optname, void *__restrict__optval, socklen_t *__restrict__optlen)"
.SS "int getsourcefilter (int__s, \fBuint32_t\fP__interface_addr, __const struct \fBsockaddr\fP *__group, socklen_t__grouplen, \fBuint32_t\fP *__fmode, \fBuint32_t\fP *__numsrc, struct \fBsockaddr_storage\fP *__slist)"
.SS "int gettimeofday (struct \fBtimeval\fP *__restrict__tv, \fB__timezone_ptr_t\fP__tz)"
.SS "\fB__mode_t\fP getumask (void)"
.SS "__extension__ __inline unsigned int gnu_dev_major (unsigned long long int__dev)"
.SS "__extension__ __inline unsigned long long int gnu_dev_makedev (unsigned int__major, unsigned int__minor)"
.SS "__extension__ __inline unsigned int gnu_dev_minor (unsigned long long int__dev)"
.SS "void handle_buddies (void)"
.PP
References buddy_connect(), closedir(), lookup_buddy_from_path(), opendir(), readdir(), remove_buddy(), send_buddy_cmd(), _upk_controller_config::SvcRunPath, UPK_CTRL_STATUS_REQ, UPK_MAX_PATH_LEN, upk_rm_rf(), and upk_runtime_configuration.
.SS "void handle_signals (void)"
.PP
deal with signals pending action in signal_queue. ***************************************************************************************************************** Block all signals during copy to avoid annoying race conditions. 
.PP
References ctrl_sigqueue_meta_p::count, siginfo::si_pid, sigfillset(), _ctrl_sigqueue::siginfo, _ctrl_sigqueue::signal, sigprocmask(), sigset(), ctrl_sigqueue_meta_p::thisp, UPKLIST_HEAD, UPKLIST_UNLINK, and waitpid().
.SS "\fBuint32_t\fP htonl (\fBuint32_t\fP__hostlong) const"
.SS "\fBuint16_t\fP htons (\fBuint16_t\fP__hostshort) const"
.SS "int inet6_opt_append (void *__extbuf, socklen_t__extlen, int__offset, \fBuint8_t\fP__type, socklen_t__len, \fBuint8_t\fP__align, void **__databufp)"
.SS "int inet6_opt_find (void *__extbuf, socklen_t__extlen, int__offset, \fBuint8_t\fP__type, socklen_t *__lenp, void **__databufp)"
.SS "int inet6_opt_finish (void *__extbuf, socklen_t__extlen, int__offset)"
.SS "int inet6_opt_get_val (void *__databuf, int__offset, void *__val, socklen_t__vallen)"
.SS "int inet6_opt_init (void *__extbuf, socklen_t__extlen)"
.SS "int inet6_opt_next (void *__extbuf, socklen_t__extlen, int__offset, \fBuint8_t\fP *__typep, socklen_t *__lenp, void **__databufp)"
.SS "int inet6_opt_set_val (void *__databuf, int__offset, void *__val, socklen_t__vallen)"
.SS "\fBuint8_t\fP* inet6_option_alloc (struct \fBcmsghdr\fP *__cmsg, int__datalen, int__multx, int__plusy)"
.SS "int inet6_option_append (struct \fBcmsghdr\fP *__cmsg, __const \fBuint8_t\fP *__typep, int__multx, int__plusy)"
.SS "int inet6_option_find (__const struct \fBcmsghdr\fP *__cmsg, \fBuint8_t\fP **__tptrp, int__type)"
.SS "int inet6_option_init (void *__bp, struct \fBcmsghdr\fP **__cmsgp, int__type)"
.SS "int inet6_option_next (__const struct \fBcmsghdr\fP *__cmsg, \fBuint8_t\fP **__tptrp)"
.SS "int inet6_option_space (int__nbytes)"
.SS "int inet6_rth_add (void *__bp, __const struct \fBin6_addr\fP *__addr)"
.SS "struct \fBin6_addr\fP* inet6_rth_getaddr (__const void *__bp, int__index)\fC [read]\fP"
.SS "void* inet6_rth_init (void *__bp, socklen_t__bp_len, int__type, int__segments)"
.SS "int inet6_rth_reverse (__const void *__in, void *__out)"
.SS "int inet6_rth_segments (__const void *__bp)"
.SS "socklen_t inet6_rth_space (int__type, int__segments)"
.SS "\fBin_addr_t\fP inet_addr (__const char *__cp)"
.SS "int inet_aton (__const char *__cp, struct \fBin_addr\fP *__inp)"
.SS "\fBin_addr_t\fP inet_lnaof (struct \fBin_addr\fP__in)"
.SS "struct \fBin_addr\fP inet_makeaddr (\fBin_addr_t\fP__net, \fBin_addr_t\fP__host)\fC [read]\fP"
.SS "char* inet_net_ntop (int__af, __const void *__cp, int__bits, char *__buf, \fBsize_t\fP__len)"
.SS "int inet_net_pton (int__af, __const char *__cp, void *__buf, \fBsize_t\fP__len)"
.SS "char* inet_neta (\fBin_addr_t\fP__net, char *__buf, \fBsize_t\fP__len)"
.SS "\fBin_addr_t\fP inet_netof (struct \fBin_addr\fP__in)"
.SS "\fBin_addr_t\fP inet_network (__const char *__cp)"
.SS "unsigned int inet_nsap_addr (__const char *__cp, unsigned char *__buf, int__len)"
.SS "char* inet_nsap_ntoa (int__len, __const unsigned char *__cp, char *__buf)"
.SS "char* inet_ntoa (struct \fBin_addr\fP__in)"
.SS "__const char* inet_ntop (int__af, __const void *__restrict__cp, char *__restrict__buf, socklen_t__len)"
.SS "int inet_pton (int__af, __const char *__restrict__cp, void *__restrict__buf)"
.SS "int initgroups (__const char *__user, \fB__gid_t\fP__group)"
.SS "int initstate_r (unsigned int__seed, char *__restrict__statebuf, \fBsize_t\fP__statelen, struct random_data *__restrict__buf)"
.SS "int isfdtype (int__fd, int__fdtype)"
.SS "int int int int int int jrand48_r (unsigned short int__xsubi[3], struct drand48_data *__restrict__buffer, long int *__restrict__result)"
.SS "_Bool kill_buddy (\fBupk_svc_desc_t\fP *buddy)"
.PP
References buddy_connect(), buddy_sock_path(), send_buddy_cmd(), UPK_CTRL_SHUTDOWN, and UPK_MAX_PATH_LEN.
.SS "char* l64a (long int__n)"
.SS "int lchmod (__const char *__file, \fB__mode_t\fP__mode)"
.SS "int int lcong48_r (unsigned short int__param[7], struct drand48_data *__buffer)"
.SS "int listen (int__fd, int__n)"
.SS "int int int lrand48_r (struct drand48_data *__restrict__buffer, long int *__restrict__result)"
.SS "int int int lstat (__const char *__restrict__file, struct \fBstat\fP *__restrict__buf)"
.SS "int int int int lstat64 (__const char *__restrict__file, struct \fBstat64\fP *__restrict__buf)"
.SS "int lutimes (__const char *__file, __const struct \fBtimeval\fP__tvp[2])"
.SS "int int void* malloc (\fBsize_t\fP__size)"
.SS "int int int int int mrand48_r (struct drand48_data *__restrict__buffer, long int *__restrict__result)"
.SS "int int int int nrand48_r (unsigned short int__xsubi[3], struct drand48_data *__restrict__buffer, long int *__restrict__result)"
.SS "\fBuint32_t\fP ntohl (\fBuint32_t\fP__netlong) const"
.SS "\fBuint16_t\fP ntohs (\fBuint16_t\fP__netshort) const"
.SS "int open (__const char *__file, int__oflag, ...)"
.SS "int open64 (__const char *__file, int__oflag, ...)"
.SS "int openat (int__fd, __const char *__file, int__oflag, ...)"
.SS "int openat64 (int__fd, __const char *__file, int__oflag, ...)"
.SS "\fBDIR\fP* opendir (__const char *__name)"
.SS "long int pathconf (__const char *__path, int__name)"
.SS "int posix_fadvise (int__fd, \fB__off_t\fP__offset, \fB__off_t\fP__len, int__advise)"
.SS "int posix_fadvise64 (int__fd, \fB__off64_t\fP__offset, \fB__off64_t\fP__len, int__advise)"
.SS "int posix_fallocate (int__fd, \fB__off_t\fP__offset, \fB__off_t\fP__len)"
.SS "int posix_fallocate64 (int__fd, \fB__off64_t\fP__offset, \fB__off64_t\fP__len)"
.SS "int posix_memalign (void **__memptr, \fBsize_t\fP__alignment, \fBsize_t\fP__size)"
.SS "int pselect (int__nfds, \fBfd_set\fP *__restrict__readfds, \fBfd_set\fP *__restrict__writefds, \fBfd_set\fP *__restrict__exceptfds, const struct \fBtimespec\fP *__restrict__timeout, const \fB__sigset_t\fP *__restrict__sigmask)"
.SS "int pthread_kill (\fBpthread_t\fP__threadid, int__signo)"
.SS "int pthread_sigmask (int__how, __const \fB__sigset_t\fP *__restrict__newmask, \fB__sigset_t\fP *__restrict__oldmask)"
.SS "int putgrent (__const struct group *__restrict__p, \fBFILE\fP *__restrict__f)"
.SS "int putpwent (__const struct passwd *__restrict__p, \fBFILE\fP *__restrict__f)"
.SS "int int int rand (void)"
.SS "long int random (void)"
.SS "int random_r (struct random_data *__restrict__buf, int32_t *__restrict__result)"
.SS "\fBssize_t\fP readahead (int__fd, \fB__off64_t\fP__offset, \fBsize_t\fP__count)"
.SS "struct dirent* readdir (\fBDIR\fP *__dirp)\fC [read]\fP"
.SS "struct \fBdirent64\fP* readdir64 (\fBDIR\fP *__dirp)\fC [read]\fP"
.SS "int int readdir64_r (\fBDIR\fP *__restrict__dirp, struct \fBdirent64\fP *__restrict__entry, struct \fBdirent64\fP **__restrict__result)"
.SS "int readdir_r (\fBDIR\fP *__restrict__dirp, struct dirent *__restrict__entry, struct dirent **__restrict__result)"
.SS "\fBssize_t\fP readv (int__fd, __const struct \fBiovec\fP *__iovec, int__count)"
.SS "void* realloc (void *__ptr, \fBsize_t\fP__size)"
.SS "\fBssize_t\fP recv (int__fd, void *__buf, \fBsize_t\fP__n, int__flags)"
.SS "\fBssize_t\fP recvfrom (int__fd, void *__restrict__buf, \fBsize_t\fP__n, int__flags, \fB__SOCKADDR_ARG\fP__addr, socklen_t *__restrict__addr_len)"
.SS "\fBssize_t\fP recvmsg (int__fd, struct \fBmsghdr\fP *__message, int__flags)"
.SS "_Bool reload_buddy_svc (\fBupk_svc_desc_t\fP *buddy)"
.PP
References buddy_connect(), buddy_sock_path(), send_buddy_cmd(), UPK_CTRL_ACTION_RELOAD, and UPK_MAX_PATH_LEN.
.SS "void remove_buddy (\fBupk_svc_desc_t\fP *buddy)"
.PP
References kill_buddy(), and remove_buddy_statedir().
.SS "int int void rewinddir (\fBDIR\fP *__dirp)"
.SS "int scandir (__const char *__restrict__dir, struct dirent ***__restrict__namelist, int(*)(__const struct dirent *)__selector, int(*)(__const void *, __const void *)__cmp)"
.SS "int int scandir64 (__const char *__restrict__dir, struct \fBdirent64\fP ***__restrict__namelist, int(*)(__const struct \fBdirent64\fP *)__selector, int(*)(__const void *, __const void *)__cmp)"
.SS "int seed48_r (unsigned short int__seed16v[3], struct drand48_data *__buffer)"
.SS "void seekdir (\fBDIR\fP *__dirp, long int__pos)"
.SS "int select (int__nfds, \fBfd_set\fP *__restrict__readfds, \fBfd_set\fP *__restrict__writefds, \fBfd_set\fP *__restrict__exceptfds, struct \fBtimeval\fP *__restrict__timeout)"
.SS "\fBssize_t\fP send (int__fd, __const void *__buf, \fBsize_t\fP__n, int__flags)"
.SS "\fBssize_t\fP sendmsg (int__fd, __const struct \fBmsghdr\fP *__message, int__flags)"
.SS "\fBssize_t\fP sendto (int__fd, __const void *__buf, \fBsize_t\fP__n, int__flags, \fB__CONST_SOCKADDR_ARG\fP__addr, socklen_t__addr_len)"
.SS "void setgrent (void)"
.SS "int setgroups (\fBsize_t\fP__n, __const \fB__gid_t\fP *__groups)"
.SS "int setipv4sourcefilter (int__s, struct \fBin_addr\fP__interface_addr, struct \fBin_addr\fP__group, \fBuint32_t\fP__fmode, \fBuint32_t\fP__numsrc, __const struct \fBin_addr\fP *__slist)"
.SS "int setitimer (\fB__itimer_which_t\fP__which, __const struct \fBitimerval\fP *__restrict__new, struct \fBitimerval\fP *__restrict__old)"
.SS "int setpriority (\fB__priority_which_t\fP__which, \fBid_t\fP__who, int__prio)"
.SS "void setpwent (void)"
.SS "int setrlimit (\fB__rlimit_resource_t\fP__resource, __const struct \fBrlimit\fP *__rlimits)"
.SS "int setrlimit64 (\fB__rlimit_resource_t\fP__resource, __const struct \fBrlimit64\fP *__rlimits)"
.SS "int setsockopt (int__fd, int__level, int__optname, __const void *__optval, socklen_t__optlen)"
.SS "int setsourcefilter (int__s, \fBuint32_t\fP__interface_addr, __const struct \fBsockaddr\fP *__group, socklen_t__grouplen, \fBuint32_t\fP__fmode, \fBuint32_t\fP__numsrc, __const struct \fBsockaddr_storage\fP *__slist)"
.SS "int int setstate_r (char *__restrict__statebuf, struct random_data *__restrict__buf)"
.SS "int settimeofday (__const struct \fBtimeval\fP *__tv, __const struct \fBtimezone\fP *__tz)"
.SS "int shutdown (int__fd, int__how)"
.SS "int \fBsigaction\fP (int__sig, __const struct \fBsigaction\fP *__restrict__act, struct \fBsigaction\fP *__restrict__oact)"
.SS "int sigaddset (\fBsigset_t\fP *__set, int__signo)"
.SS "int \fBsigaltstack\fP (__const struct \fBsigaltstack\fP *__restrict__ss, struct \fBsigaltstack\fP *__restrict__oss)"
.SS "int sigandset (\fBsigset_t\fP *__set, __const \fBsigset_t\fP *__left, __const \fBsigset_t\fP *__right)"
.SS "int sigdelset (\fBsigset_t\fP *__set, int__signo)"
.SS "int sigemptyset (\fBsigset_t\fP *__set)"
.SS "int sigfillset (\fBsigset_t\fP *__set)"
.SS "int sighold (int__sig)"
.SS "int sigignore (int__sig)"
.SS "int siginterrupt (int__sig, int__interrupt)"
.SS "int sigisemptyset (__const \fBsigset_t\fP *__set)"
.SS "int sigismember (__const \fBsigset_t\fP *__set, int__signo)"
.SS "int int sigorset (\fBsigset_t\fP *__set, __const \fBsigset_t\fP *__left, __const \fBsigset_t\fP *__right)"
.SS "int sigpending (\fBsigset_t\fP *__set)"
.SS "int sigprocmask (int__how, __const \fBsigset_t\fP *__restrict__set, \fBsigset_t\fP *__restrict__oset)"
.SS "int sigqueue (\fB__pid_t\fP__pid, int__sig, __const union sigval__val)"
.SS "int sigrelse (int__sig)"
.SS "int sigreturn (struct \fBsigcontext\fP *__scp)"
.SS "__sighandler_t sigset (int__sig, __sighandler_t__disp)"
.SS "int \fBsigstack\fP (struct \fBsigstack\fP *__ss, struct \fBsigstack\fP *__oss)"
.SS "int sigsuspend (__const \fBsigset_t\fP *__set)"
.SS "int sigtimedwait (__const \fBsigset_t\fP *__restrict__set, \fBsiginfo_t\fP *__restrict__info, __const struct \fBtimespec\fP *__restrict__timeout)"
.SS "int \fBsigvec\fP (int__sig, __const struct \fBsigvec\fP *__vec, struct \fBsigvec\fP *__ovec)"
.SS "int sigwait (__const \fBsigset_t\fP *__restrict__set, int *__restrict__sig)"
.SS "int int sigwaitinfo (__const \fBsigset_t\fP *__restrict__set, \fBsiginfo_t\fP *__restrict__info)"
.SS "int sockatmark (int__fd)"
.SS "int socket (int__domain, int__type, int__protocol)"
.SS "int socket_setup (const char *sock_path)"
.SS "int socketpair (int__domain, int__type, int__protocol, int__fds[2])"
.SS "int splice (int__fdin, \fB__off64_t\fP *__offin, int__fdout, \fB__off64_t\fP *__offout, \fBsize_t\fP__len, unsigned int__flags)"
.SS "void* sqlite3_aggregate_context (\fBsqlite3_context\fP *, intnBytes)"
.SS "int sqlite3_aggregate_count (\fBsqlite3_context\fP *)"
.SS "int sqlite3_bind_blob (\fBsqlite3_stmt\fP *, int, const void *, intn, void(*)(void *))"
.SS "int sqlite3_bind_double (\fBsqlite3_stmt\fP *, int, double)"
.SS "int sqlite3_bind_int (\fBsqlite3_stmt\fP *, int, int)"
.SS "int sqlite3_bind_int64 (\fBsqlite3_stmt\fP *, int, \fBsqlite_int64\fP)"
.SS "int sqlite3_bind_null (\fBsqlite3_stmt\fP *, int)"
.SS "int sqlite3_bind_parameter_count (\fBsqlite3_stmt\fP *)"
.SS "int sqlite3_bind_parameter_index (\fBsqlite3_stmt\fP *, const char *zName)"
.SS "const char* sqlite3_bind_parameter_name (\fBsqlite3_stmt\fP *, int)"
.SS "int sqlite3_bind_text (\fBsqlite3_stmt\fP *, int, const char *, intn, void(*)(void *))"
.SS "int sqlite3_bind_text16 (\fBsqlite3_stmt\fP *, int, const void *, int, void(*)(void *))"
.SS "int sqlite3_bind_value (\fBsqlite3_stmt\fP *, int, const \fBsqlite3_value\fP *)"
.SS "int sqlite3_busy_handler (\fBsqlite3\fP *, int(*)(void *, int), void *)"
.SS "int sqlite3_busy_timeout (\fBsqlite3\fP *, intms)"
.SS "int sqlite3_changes (\fBsqlite3\fP *)"
.SS "int sqlite3_clear_bindings (\fBsqlite3_stmt\fP *)"
.SS "int sqlite3_close (\fBsqlite3\fP *)"
.SS "int sqlite3_collation_needed (\fBsqlite3\fP *, void *, void(*)(void *, \fBsqlite3\fP *, int eTextRep, const char *))"
.SS "int sqlite3_collation_needed16 (\fBsqlite3\fP *, void *, void(*)(void *, \fBsqlite3\fP *, int eTextRep, const void *))"
.SS "const void* sqlite3_column_blob (\fBsqlite3_stmt\fP *, intiCol)"
.SS "int sqlite3_column_bytes (\fBsqlite3_stmt\fP *, intiCol)"
.SS "int sqlite3_column_bytes16 (\fBsqlite3_stmt\fP *, intiCol)"
.SS "int sqlite3_column_count (\fBsqlite3_stmt\fP *pStmt)"
.SS "const char* sqlite3_column_database_name (\fBsqlite3_stmt\fP *, int)"
.SS "const void* sqlite3_column_database_name16 (\fBsqlite3_stmt\fP *, int)"
.SS "const char* sqlite3_column_decltype (\fBsqlite3_stmt\fP *, inti)"
.SS "const void* sqlite3_column_decltype16 (\fBsqlite3_stmt\fP *, int)"
.SS "double sqlite3_column_double (\fBsqlite3_stmt\fP *, intiCol)"
.SS "int sqlite3_column_int (\fBsqlite3_stmt\fP *, intiCol)"
.SS "\fBsqlite_int64\fP sqlite3_column_int64 (\fBsqlite3_stmt\fP *, intiCol)"
.SS "const char* sqlite3_column_name (\fBsqlite3_stmt\fP *, int)"
.SS "const void* sqlite3_column_name16 (\fBsqlite3_stmt\fP *, int)"
.SS "int sqlite3_column_numeric_type (\fBsqlite3_stmt\fP *, intiCol)"
.SS "const char* sqlite3_column_origin_name (\fBsqlite3_stmt\fP *, int)"
.SS "const void* sqlite3_column_origin_name16 (\fBsqlite3_stmt\fP *, int)"
.SS "const char* sqlite3_column_table_name (\fBsqlite3_stmt\fP *, int)"
.SS "const void* sqlite3_column_table_name16 (\fBsqlite3_stmt\fP *, int)"
.SS "const unsigned char* sqlite3_column_text (\fBsqlite3_stmt\fP *, intiCol)"
.SS "const void* sqlite3_column_text16 (\fBsqlite3_stmt\fP *, intiCol)"
.SS "int sqlite3_column_type (\fBsqlite3_stmt\fP *, intiCol)"
.SS "void* sqlite3_commit_hook (\fBsqlite3\fP *, int(*)(void *), void *)"
.SS "int sqlite3_complete (const char *sql)"
.SS "int sqlite3_complete16 (const void *sql)"
.SS "int sqlite3_create_collation (\fBsqlite3\fP *, const char *zName, inteTextRep, void *, int(*)(void *, int, const void *, int, const void *)xCompare)"
.SS "int sqlite3_create_collation16 (\fBsqlite3\fP *, const char *zName, inteTextRep, void *, int(*)(void *, int, const void *, int, const void *)xCompare)"
.SS "int sqlite3_create_function (\fBsqlite3\fP *, const char *zFunctionName, intnArg, inteTextRep, void *, void(*)(\fBsqlite3_context\fP *, int, \fBsqlite3_value\fP **)xFunc, void(*)(\fBsqlite3_context\fP *, int, \fBsqlite3_value\fP **)xStep, void(*)(\fBsqlite3_context\fP *)xFinal)"
.SS "int sqlite3_create_function16 (\fBsqlite3\fP *, const void *zFunctionName, intnArg, inteTextRep, void *, void(*)(\fBsqlite3_context\fP *, int, \fBsqlite3_value\fP **)xFunc, void(*)(\fBsqlite3_context\fP *, int, \fBsqlite3_value\fP **)xStep, void(*)(\fBsqlite3_context\fP *)xFinal)"
.SS "int sqlite3_data_count (\fBsqlite3_stmt\fP *pStmt)"
.SS "\fBsqlite3\fP* sqlite3_db_handle (\fBsqlite3_stmt\fP *)"
.SS "int sqlite3_enable_shared_cache (int)"
.SS "int sqlite3_errcode (\fBsqlite3\fP *db)"
.SS "const char* sqlite3_errmsg (\fBsqlite3\fP *)"
.SS "const void* sqlite3_errmsg16 (\fBsqlite3\fP *)"
.SS "int sqlite3_exec (\fBsqlite3\fP *, const char *sql, \fBsqlite3_callback\fP, void *, char **errmsg)"
.SS "int sqlite3_expired (\fBsqlite3_stmt\fP *)"
.SS "int sqlite3_finalize (\fBsqlite3_stmt\fP *pStmt)"
.SS "void sqlite3_free (char *z)"
.SS "void sqlite3_free_table (char **result)"
.SS "int sqlite3_get_autocommit (\fBsqlite3\fP *)"
.SS "void* sqlite3_get_auxdata (\fBsqlite3_context\fP *, int)"
.SS "int sqlite3_get_table (\fBsqlite3\fP *, const char *sql, char ***resultp, int *nrow, int *ncolumn, char **errmsg)"
.SS "int sqlite3_global_recover (void)"
.SS "void sqlite3_interrupt (\fBsqlite3\fP *)"
.SS "int sqlite3_key (\fBsqlite3\fP *db, const void *pKey, intnKey)"
.SS "\fBsqlite_int64\fP sqlite3_last_insert_rowid (\fBsqlite3\fP *)"
.SS "const char* sqlite3_libversion (void)"
.SS "int sqlite3_libversion_number (void)"
.SS "char* sqlite3_mprintf (const char *, ...)"
.SS "int sqlite3_open (const char *filename, \fBsqlite3\fP **ppDb)"
.SS "int sqlite3_open16 (const void *filename, \fBsqlite3\fP **ppDb)"
.SS "int sqlite3_prepare (\fBsqlite3\fP *db, const char *zSql, intnBytes, \fBsqlite3_stmt\fP **ppStmt, const char **pzTail)"
.SS "int sqlite3_prepare16 (\fBsqlite3\fP *db, const void *zSql, intnBytes, \fBsqlite3_stmt\fP **ppStmt, const void **pzTail)"
.SS "void* sqlite3_profile (\fBsqlite3\fP *, void(*)(void *, const char *, \fBsqlite_uint64\fP)xProfile, void *)"
.SS "void sqlite3_progress_handler (\fBsqlite3\fP *, int, int(*)(void *), void *)"
.SS "int sqlite3_rekey (\fBsqlite3\fP *db, const void *pKey, intnKey)"
.SS "int sqlite3_release_memory (int)"
.SS "int sqlite3_reset (\fBsqlite3_stmt\fP *pStmt)"
.SS "void sqlite3_result_blob (\fBsqlite3_context\fP *, const void *, int, void(*)(void *))"
.SS "void sqlite3_result_double (\fBsqlite3_context\fP *, double)"
.SS "void sqlite3_result_error (\fBsqlite3_context\fP *, const char *, int)"
.SS "void sqlite3_result_error16 (\fBsqlite3_context\fP *, const void *, int)"
.SS "void sqlite3_result_int (\fBsqlite3_context\fP *, int)"
.SS "void sqlite3_result_int64 (\fBsqlite3_context\fP *, \fBsqlite_int64\fP)"
.SS "void sqlite3_result_null (\fBsqlite3_context\fP *)"
.SS "void sqlite3_result_text (\fBsqlite3_context\fP *, const char *, int, void(*)(void *))"
.SS "void sqlite3_result_text16 (\fBsqlite3_context\fP *, const void *, int, void(*)(void *))"
.SS "void sqlite3_result_text16be (\fBsqlite3_context\fP *, const void *, int, void(*)(void *))"
.SS "void sqlite3_result_text16le (\fBsqlite3_context\fP *, const void *, int, void(*)(void *))"
.SS "void sqlite3_result_value (\fBsqlite3_context\fP *, \fBsqlite3_value\fP *)"
.SS "void* sqlite3_rollback_hook (\fBsqlite3\fP *, void(*)(void *), void *)"
.SS "int sqlite3_set_authorizer (\fBsqlite3\fP *, int(*)(void *, int, const char *, const char *, const char *, const char *)xAuth, void *pUserData)"
.SS "void sqlite3_set_auxdata (\fBsqlite3_context\fP *, int, void *, void(*)(void *))"
.SS "int sqlite3_sleep (int)"
.SS "char* sqlite3_snprintf (int, char *, const char *, ...)"
.SS "void sqlite3_soft_heap_limit (int)"
.SS "int sqlite3_step (\fBsqlite3_stmt\fP *)"
.SS "int sqlite3_table_column_metadata (\fBsqlite3\fP *db, const char *zDbName, const char *zTableName, const char *zColumnName, char const **pzDataType, char const **pzCollSeq, int *pNotNull, int *pPrimaryKey, int *pAutoinc)"
.SS "void sqlite3_thread_cleanup (void)"
.SS "int sqlite3_total_changes (\fBsqlite3\fP *)"
.SS "void* sqlite3_trace (\fBsqlite3\fP *, void(*)(void *, const char *)xTrace, void *)"
.SS "int sqlite3_transfer_bindings (\fBsqlite3_stmt\fP *, \fBsqlite3_stmt\fP *)"
.SS "void* sqlite3_update_hook (\fBsqlite3\fP *, void(*)(void *, int, char const *, char const *, \fBsqlite_int64\fP), void *)"
.SS "void* sqlite3_user_data (\fBsqlite3_context\fP *)"
.SS "const void* sqlite3_value_blob (\fBsqlite3_value\fP *)"
.SS "int sqlite3_value_bytes (\fBsqlite3_value\fP *)"
.SS "int sqlite3_value_bytes16 (\fBsqlite3_value\fP *)"
.SS "double sqlite3_value_double (\fBsqlite3_value\fP *)"
.SS "int sqlite3_value_int (\fBsqlite3_value\fP *)"
.SS "\fBsqlite_int64\fP sqlite3_value_int64 (\fBsqlite3_value\fP *)"
.SS "int sqlite3_value_numeric_type (\fBsqlite3_value\fP *)"
.SS "const unsigned char* sqlite3_value_text (\fBsqlite3_value\fP *)"
.SS "const void* sqlite3_value_text16 (\fBsqlite3_value\fP *)"
.SS "const void* sqlite3_value_text16be (\fBsqlite3_value\fP *)"
.SS "const void* sqlite3_value_text16le (\fBsqlite3_value\fP *)"
.SS "int sqlite3_value_type (\fBsqlite3_value\fP *)"
.SS "char* sqlite3_vmprintf (const char *, va_list)"
.SS "int int int int int int int srand48_r (long int__seedval, struct drand48_data *__buffer)"
.SS "int int srandom_r (unsigned int__seed, struct random_data *__buf)"
.SS "_Bool start_buddy_svc (\fBupk_svc_desc_t\fP *buddy)"
.PP
References buddy_connect(), buddy_sock_path(), send_buddy_cmd(), UPK_CTRL_ACTION_START, and UPK_MAX_PATH_LEN.
.SS "int \fBstat\fP (__const char *__restrict__file, struct \fBstat\fP *__restrict__buf)"
.SS "int \fBstat64\fP (__const char *__restrict__file, struct \fBstat64\fP *__restrict__buf)"
.SS "_Bool stop_buddy_svc (\fBupk_svc_desc_t\fP *buddy)"
.PP
References buddy_connect(), buddy_sock_path(), send_buddy_cmd(), UPK_CTRL_ACTION_STOP, and UPK_MAX_PATH_LEN.
.SS "long int unsigned long int __extension__ long long int __extension__ unsigned long long int double strtod_l (__const char *__restrict__nptr, char **__restrict__endptr, \fB__locale_t\fP__loc)"
.SS "long int unsigned long int __extension__ long long int __extension__ unsigned long long int double float strtof_l (__const char *__restrict__nptr, char **__restrict__endptr, \fB__locale_t\fP__loc)"
.SS "long int strtol_l (__const char *__restrict__nptr, char **__restrict__endptr, int__base, \fB__locale_t\fP__loc)"
.SS "long int unsigned long int __extension__ long long int __extension__ unsigned long long int double float long double strtold_l (__const char *__restrict__nptr, char **__restrict__endptr, \fB__locale_t\fP__loc)"
.SS "long int unsigned long int __extension__ long long int strtoll_l (__const char *__restrict__nptr, char **__restrict__endptr, int__base, \fB__locale_t\fP__loc)"
.SS "long int unsigned long int strtoul_l (__const char *__restrict__nptr, char **__restrict__endptr, int__base, \fB__locale_t\fP__loc)"
.SS "long int unsigned long int __extension__ long long int __extension__ unsigned long long int strtoull_l (__const char *__restrict__nptr, char **__restrict__endptr, int__base, \fB__locale_t\fP__loc)"
.SS "int sync_file_range (int__fd, \fB__off64_t\fP__from, \fB__off64_t\fP__to, unsigned int__flags)"
.SS "long int sysconf (int__name)"
.SS "int tee (int__fdin, int__fdout, \fBsize_t\fP__len, unsigned int__flags)"
.SS "long int telldir (\fBDIR\fP *__dirp)"
.SS "\fB__mode_t\fP umask (\fB__mode_t\fP__mask)"
.SS "_Bool upk_boolean_string (const char *string, _Bool *val)"
.SS "\fBupk_conn_handle_meta_t\fP* upk_clnet_ctrl_connect (void)"**************************************************************************************************************** 
.PP
References _upk_controller_config::controller_socket, upk_clnet_req_preamble(), upk_domain_socket_connect(), upk_net_add_socket_handle(), upk_net_conn_handles_init(), upk_runtime_configuration, and UPKLIST_HEAD.
.SS "void upk_clnet_ctrl_disconnect (\fBupk_conn_handle_meta_t\fP *ctrl)"**************************************************************************************************************** 
.PP
References upk_clnet_req_disconnect(), and UPKLIST_FREE.
.SS "_Bool upk_clnet_req_action (\fBupk_conn_handle_meta_t\fP *ctrl, char *svc_id, char *action)"**************************************************************************************************************** 
.PP
References upk_repl_error_t::errlevel, free(), upk_conn_handle_meta_p::head, upk_repl_error_t::msg, upk_repl_result_t::msg, _upk_payload::payload, _upk_payload_types::repl_error, _upk_payload_types::repl_result, upk_repl_result_t::successful, _upk_payload::type, upk_clnet_serial_request(), upk_create_req_action(), upk_diag_verbosity, upk_error, upk_notice, upk_pkt_free(), UPK_REPL_ERROR, UPK_REPL_RESULT, and upk_warn.
.SS "void upk_clnet_req_disconnect (\fBupk_conn_handle_meta_t\fP *ctrl)"**************************************************************************************************************** 
.PP
References free(), upk_conn_handle_meta_p::head, _upk_payload::type, upk_clnet_serial_request(), upk_create_req_disconnect(), upk_debug1, upk_disconnect_handle(), upk_net_flush_closed_sockets(), upk_pkt_free(), UPK_REQ_DISCONNECT, and UPKLIST_HEAD.
.SS "void upk_clnet_req_preamble (\fBupk_conn_handle_meta_t\fP *ctrl)"**************************************************************************************************************** 
.PP
References upk_repl_preamble_t::best_version, free(), upk_conn_handle_meta_p::head, _upk_conn_handle::last_pkt_data, _upk_payload::payload, _upk_payload_types::repl_preamble, _upk_payload::type, upk_clientid(), upk_clnet_serial_request(), upk_create_req_preamble(), upk_fatal, upk_notice, upk_pkt_free(), UPK_REPL_PREAMBLE, and _upk_conn_handle::version_id.
.SS "\fBupk_payload_t\fP* upk_clnet_serial_request (\fBupk_conn_handle_meta_t\fP *ctrl, \fBupk_packet_t\fP *pkt)"**************************************************************************************************************** 
.PP
References calloc(), upk_conn_handle_meta_p::head, _upk_conn_handle::last_pkt_data, upk_net_block_until_msg(), upk_net_flush_closed_sockets(), upk_queue_packet(), and UPKLIST_HEAD.
.SS "\fBuint32_t\fP upk_crc32 (unsigned char *block, \fBuint32_t\fPlen)"
.SS "void upk_create_crc32_table (\fBuint32_t\fPcrc_table[256])"
.SS "\fBupk_packet_t\fP* upk_create_repl_result (\fBupk_protocol_handle_t\fP *handle, char *msg, _Boolsuccessful)"
.SS "\fBupk_packet_t\fP* upk_create_repl_seq_end (\fBupk_protocol_handle_t\fP *handle, _Boolcommit)"
.SS "\fBupk_packet_t\fP* upk_create_req_seq_end (\fBupk_protocol_handle_t\fP *handle, _Boolcommit)"
.SS "\fBupk_packet_t\fP* upk_create_req_signal (\fBupk_protocol_handle_t\fP *handle, char *svc_id, \fBupk_signal_t\fPsignal, _Boolsignal_sid, _Boolsignal_pgrp)"
.SS "\fBupk_packet_t\fP* upk_create_req_subscribe (\fBupk_protocol_handle_t\fP *handle, char *svc_id, _Boolall_svcs)"
.SS "\fBupk_packet_t\fP* upk_create_req_unsubscribe (\fBupk_protocol_handle_t\fP *handle, char *svc_id, _Boolall_svcs)"
.SS "int upk_ctrl_init (void)"****************************************************************************************************************** 
.PP
References ctrl_dbh, _upk_controller_config::svclist, upk_svc_desc_meta_p::thisp, upk_ctrl_exit(), upk_ctrl_init_db(), upk_ctrl_load_config(), upk_db_insert_cfg(), upk_db_path(), upk_file_configuration, upk_load_runtime_services(), UPK_MAX_PATH_LEN, upk_state_init(), and UPKLIST_FOREACH.
.PP
Referenced by main().
.SS "_Bool upk_db_add_new_service (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc)"
.PP
References __upk_err_buf, __upk_errno_type, _upk_error(), _upk_svc_desc::Name, _upk_svc_desc::Package, sqlite3_exec(), sqlite3_free(), upk_concat_svcid(), UPK_CONF_ERROR, upk_db_gen_uuid(), upk_db_get_cfg_services_table(), upk_db_get_single_text(), UPK_SQL_ERROR, upk_strerror(), upk_string_to_uuid(), upk_uuid_to_string(), and _upk_svc_desc::UUID.
.SS "char* upk_db_gen_uuid (\fBsqlite3\fP *dbh)"
.PP
References strnlen(), upk_db_get_cfg_services_table(), upk_db_get_single_text(), upk_gen_uuid_bytes(), upk_uuid_open_random(), upk_uuid_seed_random(), and upk_uuid_to_string().
.SS "static int upk_db_get_table_id (\fBsqlite3\fP *dbh, const char *db, const char *table_name, char *table_id)\fC [static]\fP"
.PP
References upk_db_get_single_text().
.PP
Referenced by upk_db_get_audit_service_table(), upk_db_get_cfg_services_table(), and upk_db_get_cfg_svc_options_table().
.SS "static int upk_db_try_insert (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc, inttype, char *optkey, void *optval, \fBsize_t\fPlen)\fC [inline, static]\fP"
.PP
References __upk_err_buf, __upk_errno_type, _upk_error(), sqlite3_bind_blob(), sqlite3_bind_double(), sqlite3_bind_int(), sqlite3_bind_null(), sqlite3_bind_text(), sqlite3_errmsg(), sqlite3_finalize(), sqlite3_prepare(), sqlite3_reset(), sqlite3_step(), upk_db_get_cfg_svc_options_table(), UPK_SQL_ERROR, upk_strerror(), upk_uuid_to_string(), and _upk_svc_desc::UUID.
.PP
Referenced by upk_db_upsert().
.SS "static int upk_db_try_update (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc, inttype, char *optkey, void *optval, \fBsize_t\fPlen)\fC [inline, static]\fP"
.PP
References __upk_err_buf, __upk_errno_type, _upk_error(), sqlite3_bind_blob(), sqlite3_bind_double(), sqlite3_bind_int(), sqlite3_bind_null(), sqlite3_bind_text(), sqlite3_errmsg(), sqlite3_finalize(), sqlite3_prepare(), sqlite3_reset(), sqlite3_step(), upk_db_get_cfg_svc_options_table(), UPK_SQL_ERROR, upk_strerror(), upk_uuid_to_string(), and _upk_svc_desc::UUID.
.PP
Referenced by upk_db_upsert().
.SS "_Bool upk_db_upsert (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc, inttype, char *optkey, void *optval, \fBsize_t\fPlen)"
.PP
References _upk_verbose(), _upk_svc_desc::Name, _upk_svc_desc::Package, upk_concat_svcid(), upk_db_try_insert(), upk_db_try_update(), upk_uuid_to_string(), and _upk_svc_desc::UUID.
.SS "_Bool upk_db_upsert_options (\fBsqlite3\fP *dbh, \fBupk_svc_desc_t\fP *svc)"
.PP
References _upk_svc_desc::ExecReload, _upk_svc_desc::ExecStart, _upk_svc_desc::ExecStop, _upk_svc_desc::InitialState, _upk_svc_desc::KillTimeout, _upk_svc_desc::LongDescription, _upk_svc_desc::MaxConsecutiveFailures, _upk_svc_desc::Name, _upk_svc_desc::Package, _upk_svc_desc::PipeStderrScript, _upk_svc_desc::PipeStdoutScript, _upk_svc_desc::PreferBuddyStateForRunning, _upk_svc_desc::PreferBuddyStateForStopped, _upk_svc_desc::RandomizeRateLimit, realloc(), _upk_svc_desc::ReconnectRetries, _upk_svc_desc::RedirectStderr, _upk_svc_desc::RedirectStdout, _upk_svc_desc::ReloadScript, _upk_svc_desc::RestartAllDependencies, _upk_svc_desc::RestartOnPrerequisiteRestart, _upk_svc_desc::RingbufferSize, _upk_svc_desc::SetGID, _upk_svc_desc::SetUID, _upk_svc_desc::ShortDescription, _upk_svc_desc::StartPriority, _upk_svc_desc::StartScript, _upk_svc_desc::StartupDelay, _upk_svc_desc::StopScript, strnlen(), _upk_svc_desc::UnconfigureOnFileRemoval, upk_db_upsert(), _upk_svc_desc::UserMaxRestarts, _upk_svc_desc::UserRateLimit, and _upk_svc_desc::UserRestartWindow.
.SS "struct \fBtimeval\fP upk_double_to_timeval (long doubler)\fC [read]\fP"*************************************************************************** 
.SS "int upk_mkdir_p (const char *path)"
.PP
create a directory and any path components leading up to it. *************************************************************************** 
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP directory to create.
.RE
.PP
\fBReturns:\fP
.RS 4
the number of directories successfully created. 
.RE
.PP

.PP
References calloc(), dirname(), stat(), _upk_stringlist::string, _upk_stringlist_meta_p::thisp, UPK_MAX_STRING_LEN, upk_warn, UPKLIST_FOREACH, UPKLIST_FREE, and UPKLIST_PREPEND.
.SS "_Bool upk_numeric_string (const char *string, long *num)"*************************************************************************** 
.SS "\fBerr_rpt_msg_callback_t\fP upk_reg_err_msg_callback (\fBerr_rpt_msg_callback_t\fPfunc)"
.SS "\fBerr_rpt_callback_t\fP upk_reg_error_callback (\fBerr_rpt_callback_t\fPfunc)"
.SS "void upk_replace_string (char **haystack, const char *needle, const char *repl)"*************************************************************************** 
.PP
References realloc().
.SS "void upk_report_error (\fBupk_errno_t\fPerr)"
.SS "void upk_report_error_msg (\fBupk_errno_t\fPerr, const char *msg)"
.SS "int upk_rm_rf (char *start_path)"*************************************************************************** 
.PP
References closedir(), opendir(), readdir(), stat::st_mode, stat(), UPK_MAX_PATH_LEN, upk_rm_rf(), and upk_warn.
.SS "_Bool upk_verify_crc32 (unsigned char *block, \fBuint32_t\fPcrc32, \fBuint32_t\fPlen)"
.PP
References upk_crc32().
.SS "_Bool upkeeper_action_request (char *service_id, char *action_name)"
.SS "\fBupk_svcinfo_t\fP upkeeper_get_status (char *service_id)"
.SS "\fBupk_svcid_t\fP* upkeeper_list_services (void)"
.SS "_Bool upkeeper_signal_request (char *service_id, \fBupk_signal_t\fPsignal)"
.SS "_Bool upkeeper_subscribe (const char *svc_id)"
.SS "_Bool upkeeper_subscribe_all (void)"
.SS "int utimes (__const char *__file, __const struct \fBtimeval\fP__tvp[2])"
.SS "\fBupk_packet_t\fP* v0_create_repl_result (char *msg, _Boolsuccessful)"
.SS "\fBupk_packet_t\fP* v0_create_repl_seq_end (_Boolcommit)"
.SS "\fBupk_packet_t\fP* v0_create_req_seq_end (_Boolcommit)"
.SS "\fBupk_packet_t\fP* v0_create_req_signal (char *svc_id, \fBupk_signal_t\fPsignal, _Boolsignal_sid, _Boolsignal_pgrp)"
.SS "\fBupk_packet_t\fP* v0_create_req_subscribe (char *svc_id, _Boolall_svcs)"
.SS "\fBupk_packet_t\fP* v0_create_req_unsubscribe (char *svc_id, _Boolall_svcs)"
.SS "void* v0_deserialize_payload (\fBupk_pkt_buf_t\fP *__upk_buf, \fBupk_pkttype_t\fPpkttype)"
.PP
References deserial_pkt_dispatch, and UPK_BUF.
.SS "\fBupk_pkt_buf_t\fP* v0_serialize_payload (\fBupk_packet_t\fP *pkt)"
.PP
References upk_packet_t::payload, upk_packet_t::payload_len, upk_packet_t::pkttype, and serial_pkt_dispatch.
.SS "void* valloc (\fBsize_t\fP__size)"
.SS "int int int int int versionsort (__const void *__e1, __const void *__e2)"
.SS "int int int int int int versionsort64 (__const void *__e1, __const void *__e2)"
.SS "int vmsplice (int__fdout, const struct \fBiovec\fP *__iov, \fBsize_t\fP__count, unsigned int__flags)"
.SS "\fB__pid_t\fP \fBwait\fP (\fB__WAIT_STATUS\fP__stat_loc)"
.SS "\fB__pid_t\fP wait3 (\fB__WAIT_STATUS\fP__stat_loc, int__options, struct \fBrusage\fP *__usage)"
.SS "\fB__pid_t\fP wait4 (\fB__pid_t\fP__pid, \fB__WAIT_STATUS\fP__stat_loc, int__options, struct \fBrusage\fP *__usage)"
.SS "int waitid (\fBidtype_t\fP__idtype, \fB__id_t\fP__id, \fBsiginfo_t\fP *__infop, int__options)"
.SS "\fB__pid_t\fP waitpid (\fB__pid_t\fP__pid, int *__stat_loc, int__options)"
.SS "\fBssize_t\fP writev (int__fd, __const struct \fBiovec\fP *__iovec, int__count)"
.SH "Variable Documentation"
.PP 
.SS "* \fB__locale_t\fP"
.SS "const char* \fB__progname\fP"
.SS "const char \fB__upk_errors\fP[][128]\fC [static]\fP"\fBInitial value:\fP
.PP
.nf
 {
    'unknown',
    'unsupported',
    'invalid packet',
    'socket failure',
    'JSON parser error',
    'SQlite Error',
    'Configuration Error',
}
.fi
.SS "struct _IO_FILE_plus \fB_IO_2_1_stderr_\fP"
.SS "struct _IO_FILE_plus \fB_IO_2_1_stdin_\fP"
.SS "struct _IO_FILE_plus \fB_IO_2_1_stdout_\fP"
.SS "__const char* __const \fB_sys_siglist\fP[65]"
.SS "\fBsqlite3\fP* \fBctrl_dbh\fP"
.PP
Referenced by upk_ctrl_exit(), and upk_ctrl_init().
.SS "struct \fBin6_addr\fP \fBin6addr_any\fP"
.SS "struct \fBin6_addr\fP \fBin6addr_loopback\fP"
.SS "char \fBlabel_idx\fP[][16]"
.SS "\fBsigval_t\fP"
.SS "char* \fBsqlite3_temp_directory\fP"
.SS "const char \fBsqlite3_version\fP[]"
.SS "__const char* __const \fBsys_siglist\fP[65]"
.SS "const char \fBupk_diag_label_idx\fP[][16]\fC [static]\fP"\fBInitial value:\fP
.PP
.nf
 {
    [UPK_DIAGLVL_FATAL] = 'FATAL',
    [UPK_DIAGLVL_ALERT] = 'ALERT',
    [UPK_DIAGLVL_CRIT] = 'CRITICAL',
    [UPK_DIAGLVL_ERROR] = 'ERROR',
    [UPK_DIAGLVL_WARN] = 'WARNING',
    [UPK_DIAGLVL_NOTICE] = 'NOTICE',
    [UPK_DIAGLVL_VERBOSE] = 'VERBOSE',
    [UPK_DIAGLVL_INFO] = 'INFO',
    [UPK_DIAGLVL_DEBUG0] = 'DEBUG0',
    [UPK_DIAGLVL_DEBUG1] = 'DEBUG1'
}
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for upkeeper from the source code.
