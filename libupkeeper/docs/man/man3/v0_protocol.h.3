.TH "upkeeper/v0_protocol.h" 3 "29 Jun 2011" "Version 1" "libupkeeper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
upkeeper/v0_protocol.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'protocol.h'\fP
.br
\fC#include 'v0_protocol_structs.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBv0_req_seq_start_t\fP"
.br
.ti -1c
.RI "struct \fBv0_req_seq_end_t\fP"
.br
.ti -1c
.RI "struct \fBv0_action_req_t\fP"
.br
.ti -1c
.RI "struct \fBv0_signal_req_t\fP"
.br
.ti -1c
.RI "struct \fBv0_list_req_t\fP"
.br
.ti -1c
.RI "struct \fBv0_status_req_t\fP"
.br
.ti -1c
.RI "struct \fBv0_subscr_req_t\fP"
.br
.ti -1c
.RI "struct \fBv0_unsubs_req_t\fP"
.br
.ti -1c
.RI "struct \fBv0_discon_req_t\fP"
.br
.ti -1c
.RI "struct \fBv0_repl_seq_start_t\fP"
.br
.ti -1c
.RI "struct \fBv0_repl_seq_end_t\fP"
.br
.ti -1c
.RI "struct \fBv0_result_repl_t\fP"
.br
.ti -1c
.RI "struct \fBv0_listing_repl_t\fP"
.br
.ti -1c
.RI "struct \fBv0_svcinfo_t\fP"
.br
.ti -1c
.RI "struct \fBv0_svcinfo_repl_t\fP"
.br
.ti -1c
.RI "struct \fBv0_ack_repl_t\fP"
.br
.ti -1c
.RI "struct \fBv0_error_repl_t\fP"
.br
.ti -1c
.RI "struct \fBv0_pub_pubmsg_t\fP"
.br
.ti -1c
.RI "struct \fBv0_cancel_pubmsg_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBupk_pkt_buf_t\fP * \fBv0_serialize_payload\fP (\fBupk_packet_t\fP *pkt)"
.br
.ti -1c
.RI "void * \fBv0_deserialize_payload\fP (\fBupk_pkt_buf_t\fP *UPK_BUF, \fBupk_pkttype_t\fP pkttype)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_seq_start\fP (\fBupk_req_msgtype_t\fP msg_seq_type, uint32_t msg_seq_count)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_req_seq_end\fP (bool commit)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_action_req\fP (char *svc_id, char *action)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_signal_req\fP (char *svc_id, \fBupk_signal_t\fP signal, bool signal_sid, bool signal_pgrp)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_list_req\fP (void)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_status_req\fP (char *svc_id)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_subscr_req\fP (char *svc_id, bool all_svcs)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_unsubs_req\fP (char *svc_id, bool all_svcs)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_discon_req\fP (void)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_repl_seq_start\fP (\fBupk_repl_msgtype_t\fP msg_seq_type, uint32_t msg_seq_count)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_repl_seq_end\fP (bool commit)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_result_repl\fP (char *msg, bool successful)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_listing_repl\fP (char *svc_id)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_svcinfo_repl\fP (char *svc_id, \fBv0_svcinfo_t\fP *svcinfo)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_ack_repl\fP (void)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_error_repl\fP (char *svc_id, char *errmsg, \fBupk_errlevel_t\fP errlvl)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_pub_pubmsg\fP (void)"
.br
.ti -1c
.RI "\fBupk_packet_t\fP * \fBv0_create_cancel_pubmsg\fP (void)"
.br
.ti -1c
.RI "void \fBv0_free_payload\fP (\fBupk_packet_t\fP *pkt)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBupk_packet_t\fP* v0_create_ack_repl (void)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_action_req (char * svc_id, char * action)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_cancel_pubmsg (void)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_discon_req (void)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_error_repl (char * svc_id, char * errmsg, \fBupk_errlevel_t\fP errlvl)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_list_req (void)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_listing_repl (char * svc_id)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_pub_pubmsg (void)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_repl_seq_end (bool commit)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_repl_seq_start (\fBupk_repl_msgtype_t\fP msg_seq_type, uint32_t msg_seq_count)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_req_seq_end (bool commit)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_req_seq_start (\fBupk_req_msgtype_t\fP msg_seq_type, uint32_t msg_seq_count)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_result_repl (char * msg, bool successful)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_signal_req (char * svc_id, \fBupk_signal_t\fP signal, bool signal_sid, bool signal_pgrp)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_status_req (char * svc_id)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_subscr_req (char * svc_id, bool all_svcs)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_svcinfo_repl (char * svc_id, \fBv0_svcinfo_t\fP * svcinfo)"
.PP
.SS "\fBupk_packet_t\fP* v0_create_unsubs_req (char * svc_id, bool all_svcs)"
.PP
.SS "void* v0_deserialize_payload (\fBupk_pkt_buf_t\fP * UPK_BUF, \fBupk_pkttype_t\fP pkttype)"
.PP
.SS "void v0_free_payload (\fBupk_packet_t\fP * pkt)"
.PP
.SS "\fBupk_pkt_buf_t\fP* v0_serialize_payload (\fBupk_packet_t\fP * pkt)"
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for libupkeeper from the source code.
