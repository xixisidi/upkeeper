.TH "_upk_uuid" 3 "30 Jun 2011" "Version 1" "libupkeeper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
_upk_uuid \- structure for holding 16 byte UUID.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <upk_uuid.h>\fP
.PP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "uint32_t \fBtime_low\fP"
.br
.ti -1c
.RI "uint16_t \fBtime_mid\fP"
.br
.ti -1c
.RI "uint16_t \fBtime_high_and_version\fP"
.br
.ti -1c
.RI "uint8_t \fBclk_seq_high\fP"
.br
.ti -1c
.RI "uint8_t \fBclk_seq_low\fP"
.br
.ti -1c
.RI "uint8_t \fBnode\fP [6]"
.br
.in -1c
.SH "Detailed Description"
.PP 
structure for holding 16 byte UUID. 

Despite only using v4 uuids, field labels chosen to reflect convention but All bits save those for version and id are random; and do not contain the information the label might imply 
.PP
.SH "Field Documentation"
.PP 
.SS "uint8_t \fB_upk_uuid::clk_seq_high\fP"
.PP
clock sequence high bits (0x80 - 0xB0 in this impl) 
.SS "uint8_t \fB_upk_uuid::clk_seq_low\fP"
.PP
clock sequence low bits (random in this impl) 
.SS "uint8_t \fB_upk_uuid::node\fP[6]"
.PP
unique, usually random number (random in this impl) 
.SS "uint16_t \fB_upk_uuid::time_high_and_version\fP"
.PP
high-resolution bits, and the version id of the uuid (time_high is random in this impl; version is 0x40) 
.SS "uint32_t \fB_upk_uuid::time_low\fP"
.PP
low resolution bits, usually seconds since epoch (random in this impl) 
.SS "uint16_t \fB_upk_uuid::time_mid\fP"
.PP
mid resolution bits (random in this impl) 

.SH "Author"
.PP 
Generated automatically by Doxygen for libupkeeper from the source code.
